<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="documentName" xml:space="preserve">
    <value>Document Name</value>
  </data>
  <data name="equipmentBasicInfoUploadLog" xml:space="preserve">
    <value>Equipment Info Upload Log</value>
  </data>
  <data name="equipmentClass" xml:space="preserve">
    <value>Class</value>
  </data>
  <data name="equipmentCode" xml:space="preserve">
    <value>Equipment Code</value>
  </data>
  <data name="equipmentLogInformation" xml:space="preserve">
    <value>Equipment Log Information</value>
  </data>
  <data name="equipmentName" xml:space="preserve">
    <value>Equipment Name</value>
  </data>
  <data name="functionalLocation" xml:space="preserve">
    <value>Functional Location</value>
  </data>
  <data name="imageName" xml:space="preserve">
    <value>Image Name</value>
  </data>
  <data name="installDate" xml:space="preserve">
    <value>Install Date</value>
  </data>
  <data name="inTheLineNumber" xml:space="preserve">
    <value>in line number</value>
  </data>
  <data name="lastUpdatedBy" xml:space="preserve">
    <value>Last Updated By</value>
  </data>
  <data name="lastUpdatedOn" xml:space="preserve">
    <value>Last Update On</value>
  </data>
  <data name="linkToResource" xml:space="preserve">
    <value>Link To Resource</value>
  </data>
  <data name="manuals" xml:space="preserve">
    <value>Manuals</value>
  </data>
  <data name="manufacturerName" xml:space="preserve">
    <value>Manufacturer Name</value>
  </data>
  <data name="modelNumber" xml:space="preserve">
    <value>Model Number</value>
  </data>
  <data name="parentEquipment" xml:space="preserve">
    <value>The Equipment is part of</value>
  </data>
  <data name="photosAndVideos" xml:space="preserve">
    <value>Photos &amp; Videos</value>
  </data>
  <data name="purchaseDate" xml:space="preserve">
    <value>Purchase Date</value>
  </data>
  <data name="referFromModel" xml:space="preserve">
    <value>Refer From Model </value>
  </data>
  <data name="serailNumber" xml:space="preserve">
    <value>Serail Number</value>
  </data>
  <data name="specificationDocument" xml:space="preserve">
    <value>Specification Documents</value>
  </data>
  <data name="status" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="supportEmailID" xml:space="preserve">
    <value>Support Email ID</value>
  </data>
  <data name="supportName" xml:space="preserve">
    <value>Support Name</value>
  </data>
  <data name="supportNumber" xml:space="preserve">
    <value>Support Number</value>
  </data>
  <data name="supportType" xml:space="preserve">
    <value>Support Type</value>
  </data>
  <data name="type" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="warrantyExpireDate" xml:space="preserve">
    <value>Warranty Expire Date</value>
  </data>
  <data name="warrantyNumber" xml:space="preserve">
    <value>Warranty Number</value>
  </data>
  <data name="warrantyStartDate" xml:space="preserve">
    <value>Warranty Start Date</value>
  </data>
  <data name="workGroup" xml:space="preserve">
    <value>WorkGroup</value>
  </data>
  <data name="failureResons" xml:space="preserve">
    <value>Failure Resons(s)</value>
  </data>
  <data name="addedItems" xml:space="preserve">
    <value>Added Item(s)</value>
  </data>
  <data name="deletedItems" xml:space="preserve">
    <value>Delete Item(s)</value>
  </data>
  <data name="failure" xml:space="preserve">
    <value>Failure</value>
  </data>
  <data name="successfullyDeleted" xml:space="preserve">
    <value>Successfully Deleted</value>
  </data>
  <data name="successfullyInserted" xml:space="preserve">
    <value>Successfully Inserted</value>
  </data>
  <data name="successfullyUpdated" xml:space="preserve">
    <value>Successfully Updated</value>
  </data>
  <data name="updatedItems" xml:space="preserve">
    <value>Updated Item(s)</value>
  </data>
  <data name="equipmentSupportInfoUploadLog" xml:space="preserve">
    <value>Support Info Upload Log</value>
  </data>
  <data name="equipmentAttachmentInfoUploadLog" xml:space="preserve">
    <value>Document Attachments Info Upload Log</value>
  </data>
  <data name="uploadReadme" xml:space="preserve">
    <value>Keep equipment images and attached document files inside EquipmentAttachments folder.
and keep measuring point images inside MeasuringPoint folder. Refer the images and attached document file name in excel templates in the respective equipment and measuring point.</value>
  </data>
</root>