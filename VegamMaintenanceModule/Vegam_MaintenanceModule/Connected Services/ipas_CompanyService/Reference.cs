//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Vegam_MaintenanceModule.ipas_CompanyService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BasicParam", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Vegam_MaintenanceModule.ipas_CompanyService.DeleteSiteRole))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Vegam_MaintenanceModule.ipas_CompanyService.MeasuringAttributeFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Vegam_MaintenanceModule.ipas_CompanyService.CompanyDepartmentBasicInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Vegam_MaintenanceModule.ipas_CompanyService.BusinessUnitBasicParam))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Vegam_MaintenanceModule.ipas_CompanyService.BusinessUnitFilter))]
    public partial class BasicParam : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int AccessLevelIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LanguageCodeField;
        
        private int SiteIDField;
        
        private int UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int AccessLevelID {
            get {
                return this.AccessLevelIDField;
            }
            set {
                if ((this.AccessLevelIDField.Equals(value) != true)) {
                    this.AccessLevelIDField = value;
                    this.RaisePropertyChanged("AccessLevelID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LanguageCode {
            get {
                return this.LanguageCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.LanguageCodeField, value) != true)) {
                    this.LanguageCodeField = value;
                    this.RaisePropertyChanged("LanguageCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int SiteID {
            get {
                return this.SiteIDField;
            }
            set {
                if ((this.SiteIDField.Equals(value) != true)) {
                    this.SiteIDField = value;
                    this.RaisePropertyChanged("SiteID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeleteSiteRole", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.UserInfo")]
    [System.SerializableAttribute()]
    public partial class DeleteSiteRole : Vegam_MaintenanceModule.ipas_CompanyService.BasicParam {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SiteNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UpdaterIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SiteName {
            get {
                return this.SiteNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SiteNameField, value) != true)) {
                    this.SiteNameField = value;
                    this.RaisePropertyChanged("SiteName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UpdaterID {
            get {
                return this.UpdaterIDField;
            }
            set {
                if ((this.UpdaterIDField.Equals(value) != true)) {
                    this.UpdaterIDField = value;
                    this.RaisePropertyChanged("UpdaterID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MeasuringAttributeFilter", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.Company")]
    [System.SerializableAttribute()]
    public partial class MeasuringAttributeFilter : Vegam_MaintenanceModule.ipas_CompanyService.BasicParam {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<Vegam_MaintenanceModule.ipas_CompanyService.AttributeSorting> AttributeSortingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MeasuringAttributeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SensorTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SensorTypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ShowSiteAttributesOnlyField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<Vegam_MaintenanceModule.ipas_CompanyService.AttributeSorting> AttributeSorting {
            get {
                return this.AttributeSortingField;
            }
            set {
                if ((this.AttributeSortingField.Equals(value) != true)) {
                    this.AttributeSortingField = value;
                    this.RaisePropertyChanged("AttributeSorting");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyID {
            get {
                return this.CompanyIDField;
            }
            set {
                if ((this.CompanyIDField.Equals(value) != true)) {
                    this.CompanyIDField = value;
                    this.RaisePropertyChanged("CompanyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MeasuringAttributeName {
            get {
                return this.MeasuringAttributeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MeasuringAttributeNameField, value) != true)) {
                    this.MeasuringAttributeNameField = value;
                    this.RaisePropertyChanged("MeasuringAttributeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageIndex {
            get {
                return this.PageIndexField;
            }
            set {
                if ((this.PageIndexField.Equals(value) != true)) {
                    this.PageIndexField = value;
                    this.RaisePropertyChanged("PageIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageSize {
            get {
                return this.PageSizeField;
            }
            set {
                if ((this.PageSizeField.Equals(value) != true)) {
                    this.PageSizeField = value;
                    this.RaisePropertyChanged("PageSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SensorTypeID {
            get {
                return this.SensorTypeIDField;
            }
            set {
                if ((this.SensorTypeIDField.Equals(value) != true)) {
                    this.SensorTypeIDField = value;
                    this.RaisePropertyChanged("SensorTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SensorTypeName {
            get {
                return this.SensorTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SensorTypeNameField, value) != true)) {
                    this.SensorTypeNameField = value;
                    this.RaisePropertyChanged("SensorTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ShowSiteAttributesOnly {
            get {
                return this.ShowSiteAttributesOnlyField;
            }
            set {
                if ((this.ShowSiteAttributesOnlyField.Equals(value) != true)) {
                    this.ShowSiteAttributesOnlyField = value;
                    this.RaisePropertyChanged("ShowSiteAttributesOnly");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompanyDepartmentBasicInfo", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.Company")]
    [System.SerializableAttribute()]
    public partial class CompanyDepartmentBasicInfo : Vegam_MaintenanceModule.ipas_CompanyService.BasicParam {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ConsiderGlobalDepartmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ConsiderRegionalDepartmentField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyID {
            get {
                return this.CompanyIDField;
            }
            set {
                if ((this.CompanyIDField.Equals(value) != true)) {
                    this.CompanyIDField = value;
                    this.RaisePropertyChanged("CompanyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ConsiderGlobalDepartment {
            get {
                return this.ConsiderGlobalDepartmentField;
            }
            set {
                if ((this.ConsiderGlobalDepartmentField.Equals(value) != true)) {
                    this.ConsiderGlobalDepartmentField = value;
                    this.RaisePropertyChanged("ConsiderGlobalDepartment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ConsiderRegionalDepartment {
            get {
                return this.ConsiderRegionalDepartmentField;
            }
            set {
                if ((this.ConsiderRegionalDepartmentField.Equals(value) != true)) {
                    this.ConsiderRegionalDepartmentField = value;
                    this.RaisePropertyChanged("ConsiderRegionalDepartment");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BusinessUnitBasicParam", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.Company")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Vegam_MaintenanceModule.ipas_CompanyService.BusinessUnitFilter))]
    public partial class BusinessUnitBasicParam : Vegam_MaintenanceModule.ipas_CompanyService.BasicParam {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BusinessUnitIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BusinessUnitID {
            get {
                return this.BusinessUnitIDField;
            }
            set {
                if ((this.BusinessUnitIDField.Equals(value) != true)) {
                    this.BusinessUnitIDField = value;
                    this.RaisePropertyChanged("BusinessUnitID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyID {
            get {
                return this.CompanyIDField;
            }
            set {
                if ((this.CompanyIDField.Equals(value) != true)) {
                    this.CompanyIDField = value;
                    this.RaisePropertyChanged("CompanyID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BusinessUnitFilter", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.Company")]
    [System.SerializableAttribute()]
    public partial class BusinessUnitFilter : Vegam_MaintenanceModule.ipas_CompanyService.BusinessUnitBasicParam {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SearchByFieldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SortFieldField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageIndex {
            get {
                return this.PageIndexField;
            }
            set {
                if ((this.PageIndexField.Equals(value) != true)) {
                    this.PageIndexField = value;
                    this.RaisePropertyChanged("PageIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageSize {
            get {
                return this.PageSizeField;
            }
            set {
                if ((this.PageSizeField.Equals(value) != true)) {
                    this.PageSizeField = value;
                    this.RaisePropertyChanged("PageSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SearchByField {
            get {
                return this.SearchByFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.SearchByFieldField, value) != true)) {
                    this.SearchByFieldField = value;
                    this.RaisePropertyChanged("SearchByField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SortField {
            get {
                return this.SortFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.SortFieldField, value) != true)) {
                    this.SortFieldField = value;
                    this.RaisePropertyChanged("SortField");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AttributeSorting", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.Company")]
    public enum AttributeSorting : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AttributeName_asc = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AttributeName_desc = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransducerType_asc = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransducerType_desc = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SensorType", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.Company")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Vegam_MaintenanceModule.ipas_CompanyService.MeasuringAttributeInfo))]
    public partial class SensorType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SensorTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SensorTypeNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SensorTypeID {
            get {
                return this.SensorTypeIDField;
            }
            set {
                if ((this.SensorTypeIDField.Equals(value) != true)) {
                    this.SensorTypeIDField = value;
                    this.RaisePropertyChanged("SensorTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SensorTypeName {
            get {
                return this.SensorTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SensorTypeNameField, value) != true)) {
                    this.SensorTypeNameField = value;
                    this.RaisePropertyChanged("SensorTypeName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MeasuringAttributeInfo", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.Company")]
    [System.SerializableAttribute()]
    public partial class MeasuringAttributeInfo : Vegam_MaintenanceModule.ipas_CompanyService.SensorType {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Vegam_MaintenanceModule.ipas_CompanyService.MeasuringAttributeBasicInfo AttributeBasicInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSensorTypeMappedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Vegam_MaintenanceModule.ipas_CompanyService.MeasuringAttributeBasicInfo[] MeasuringAttributeDescriptionListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MeasuringAttributeIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Vegam_MaintenanceModule.ipas_CompanyService.MeasuringAttributeBasicInfo AttributeBasicInfo {
            get {
                return this.AttributeBasicInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.AttributeBasicInfoField, value) != true)) {
                    this.AttributeBasicInfoField = value;
                    this.RaisePropertyChanged("AttributeBasicInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyID {
            get {
                return this.CompanyIDField;
            }
            set {
                if ((this.CompanyIDField.Equals(value) != true)) {
                    this.CompanyIDField = value;
                    this.RaisePropertyChanged("CompanyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSensorTypeMapped {
            get {
                return this.IsSensorTypeMappedField;
            }
            set {
                if ((this.IsSensorTypeMappedField.Equals(value) != true)) {
                    this.IsSensorTypeMappedField = value;
                    this.RaisePropertyChanged("IsSensorTypeMapped");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Vegam_MaintenanceModule.ipas_CompanyService.MeasuringAttributeBasicInfo[] MeasuringAttributeDescriptionList {
            get {
                return this.MeasuringAttributeDescriptionListField;
            }
            set {
                if ((object.ReferenceEquals(this.MeasuringAttributeDescriptionListField, value) != true)) {
                    this.MeasuringAttributeDescriptionListField = value;
                    this.RaisePropertyChanged("MeasuringAttributeDescriptionList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MeasuringAttributeID {
            get {
                return this.MeasuringAttributeIDField;
            }
            set {
                if ((this.MeasuringAttributeIDField.Equals(value) != true)) {
                    this.MeasuringAttributeIDField = value;
                    this.RaisePropertyChanged("MeasuringAttributeID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MeasuringAttributeBasicInfo", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.Company")]
    [System.SerializableAttribute()]
    public partial class MeasuringAttributeBasicInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LanguageIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LanguageNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MeasuringAttributeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MeasuringAttributeNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyID {
            get {
                return this.CompanyIDField;
            }
            set {
                if ((this.CompanyIDField.Equals(value) != true)) {
                    this.CompanyIDField = value;
                    this.RaisePropertyChanged("CompanyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LanguageID {
            get {
                return this.LanguageIDField;
            }
            set {
                if ((this.LanguageIDField.Equals(value) != true)) {
                    this.LanguageIDField = value;
                    this.RaisePropertyChanged("LanguageID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LanguageName {
            get {
                return this.LanguageNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LanguageNameField, value) != true)) {
                    this.LanguageNameField = value;
                    this.RaisePropertyChanged("LanguageName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MeasuringAttributeDescription {
            get {
                return this.MeasuringAttributeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.MeasuringAttributeDescriptionField, value) != true)) {
                    this.MeasuringAttributeDescriptionField = value;
                    this.RaisePropertyChanged("MeasuringAttributeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MeasuringAttributeName {
            get {
                return this.MeasuringAttributeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MeasuringAttributeNameField, value) != true)) {
                    this.MeasuringAttributeNameField = value;
                    this.RaisePropertyChanged("MeasuringAttributeName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SensorTypeForFilter", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.Company")]
    [System.SerializableAttribute()]
    public partial class SensorTypeForFilter : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SearchSensorTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyID {
            get {
                return this.CompanyIDField;
            }
            set {
                if ((this.CompanyIDField.Equals(value) != true)) {
                    this.CompanyIDField = value;
                    this.RaisePropertyChanged("CompanyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageIndex {
            get {
                return this.PageIndexField;
            }
            set {
                if ((this.PageIndexField.Equals(value) != true)) {
                    this.PageIndexField = value;
                    this.RaisePropertyChanged("PageIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageSize {
            get {
                return this.PageSizeField;
            }
            set {
                if ((this.PageSizeField.Equals(value) != true)) {
                    this.PageSizeField = value;
                    this.RaisePropertyChanged("PageSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SearchSensorType {
            get {
                return this.SearchSensorTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.SearchSensorTypeField, value) != true)) {
                    this.SearchSensorTypeField = value;
                    this.RaisePropertyChanged("SearchSensorType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SensorTypeList", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.Company")]
    [System.SerializableAttribute()]
    public partial class SensorTypeList : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Vegam_MaintenanceModule.ipas_CompanyService.SensorType[] SensorTypesListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalRecordsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Vegam_MaintenanceModule.ipas_CompanyService.SensorType[] SensorTypesList {
            get {
                return this.SensorTypesListField;
            }
            set {
                if ((object.ReferenceEquals(this.SensorTypesListField, value) != true)) {
                    this.SensorTypesListField = value;
                    this.RaisePropertyChanged("SensorTypesList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalRecords {
            get {
                return this.TotalRecordsField;
            }
            set {
                if ((this.TotalRecordsField.Equals(value) != true)) {
                    this.TotalRecordsField = value;
                    this.RaisePropertyChanged("TotalRecords");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MeasuringAttributeList", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.Company")]
    [System.SerializableAttribute()]
    public partial class MeasuringAttributeList : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Vegam_MaintenanceModule.ipas_CompanyService.MeasuringAttributeInfo[] MeasuringAttributeInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalRecordsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Vegam_MaintenanceModule.ipas_CompanyService.MeasuringAttributeInfo[] MeasuringAttributeInfo {
            get {
                return this.MeasuringAttributeInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.MeasuringAttributeInfoField, value) != true)) {
                    this.MeasuringAttributeInfoField = value;
                    this.RaisePropertyChanged("MeasuringAttributeInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalRecords {
            get {
                return this.TotalRecordsField;
            }
            set {
                if ((this.TotalRecordsField.Equals(value) != true)) {
                    this.TotalRecordsField = value;
                    this.RaisePropertyChanged("TotalRecords");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SensorTypeUOMList", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.Company")]
    [System.SerializableAttribute()]
    public partial class SensorTypeUOMList : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Vegam_MaintenanceModule.ipas_CompanyService.SensorTypeUOMInfo[] SensorTypeUOMsListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalRecordsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Vegam_MaintenanceModule.ipas_CompanyService.SensorTypeUOMInfo[] SensorTypeUOMsList {
            get {
                return this.SensorTypeUOMsListField;
            }
            set {
                if ((object.ReferenceEquals(this.SensorTypeUOMsListField, value) != true)) {
                    this.SensorTypeUOMsListField = value;
                    this.RaisePropertyChanged("SensorTypeUOMsList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalRecords {
            get {
                return this.TotalRecordsField;
            }
            set {
                if ((this.TotalRecordsField.Equals(value) != true)) {
                    this.TotalRecordsField = value;
                    this.RaisePropertyChanged("TotalRecords");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SensorTypeUOMInfo", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.Company")]
    [System.SerializableAttribute()]
    public partial class SensorTypeUOMInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Vegam_MaintenanceModule.ipas_CompanyService.SensorType SensorTypeInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Vegam_MaintenanceModule.ipas_CompanyService.SensorTypeUOM[] SensorUOMListField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyID {
            get {
                return this.CompanyIDField;
            }
            set {
                if ((this.CompanyIDField.Equals(value) != true)) {
                    this.CompanyIDField = value;
                    this.RaisePropertyChanged("CompanyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Vegam_MaintenanceModule.ipas_CompanyService.SensorType SensorTypeInfo {
            get {
                return this.SensorTypeInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.SensorTypeInfoField, value) != true)) {
                    this.SensorTypeInfoField = value;
                    this.RaisePropertyChanged("SensorTypeInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Vegam_MaintenanceModule.ipas_CompanyService.SensorTypeUOM[] SensorUOMList {
            get {
                return this.SensorUOMListField;
            }
            set {
                if ((object.ReferenceEquals(this.SensorUOMListField, value) != true)) {
                    this.SensorUOMListField = value;
                    this.RaisePropertyChanged("SensorUOMList");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SensorTypeUOM", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.Company")]
    [System.SerializableAttribute()]
    public partial class SensorTypeUOM : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TransducerUOMIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransducerUOMNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransducerUOMSymbolField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TransducerUOMID {
            get {
                return this.TransducerUOMIDField;
            }
            set {
                if ((this.TransducerUOMIDField.Equals(value) != true)) {
                    this.TransducerUOMIDField = value;
                    this.RaisePropertyChanged("TransducerUOMID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransducerUOMName {
            get {
                return this.TransducerUOMNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TransducerUOMNameField, value) != true)) {
                    this.TransducerUOMNameField = value;
                    this.RaisePropertyChanged("TransducerUOMName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransducerUOMSymbol {
            get {
                return this.TransducerUOMSymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.TransducerUOMSymbolField, value) != true)) {
                    this.TransducerUOMSymbolField = value;
                    this.RaisePropertyChanged("TransducerUOMSymbol");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompanyDefectDetail", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.Company")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Vegam_MaintenanceModule.ipas_CompanyService.DefectInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Vegam_MaintenanceModule.ipas_CompanyService.DefectAgencyFillter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Vegam_MaintenanceModule.ipas_CompanyService.DefectAgency))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Vegam_MaintenanceModule.ipas_CompanyService.DefectSourceFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Vegam_MaintenanceModule.ipas_CompanyService.DefectSource))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Vegam_MaintenanceModule.ipas_CompanyService.DefectInfoFilter))]
    public partial class CompanyDefectDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyID {
            get {
                return this.CompanyIDField;
            }
            set {
                if ((this.CompanyIDField.Equals(value) != true)) {
                    this.CompanyIDField = value;
                    this.RaisePropertyChanged("CompanyID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DefectInfo", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.Company")]
    [System.SerializableAttribute()]
    public partial class DefectInfo : Vegam_MaintenanceModule.ipas_CompanyService.CompanyDefectDetail {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DefectCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DefectDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DefectIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DefectCode {
            get {
                return this.DefectCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.DefectCodeField, value) != true)) {
                    this.DefectCodeField = value;
                    this.RaisePropertyChanged("DefectCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DefectDescription {
            get {
                return this.DefectDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DefectDescriptionField, value) != true)) {
                    this.DefectDescriptionField = value;
                    this.RaisePropertyChanged("DefectDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DefectID {
            get {
                return this.DefectIDField;
            }
            set {
                if ((this.DefectIDField.Equals(value) != true)) {
                    this.DefectIDField = value;
                    this.RaisePropertyChanged("DefectID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DefectAgencyFillter", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.Company")]
    [System.SerializableAttribute()]
    public partial class DefectAgencyFillter : Vegam_MaintenanceModule.ipas_CompanyService.CompanyDefectDetail {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DefectAgencyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SearchAgencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SortFieldField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DefectAgencyID {
            get {
                return this.DefectAgencyIDField;
            }
            set {
                if ((this.DefectAgencyIDField.Equals(value) != true)) {
                    this.DefectAgencyIDField = value;
                    this.RaisePropertyChanged("DefectAgencyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageIndex {
            get {
                return this.PageIndexField;
            }
            set {
                if ((this.PageIndexField.Equals(value) != true)) {
                    this.PageIndexField = value;
                    this.RaisePropertyChanged("PageIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageSize {
            get {
                return this.PageSizeField;
            }
            set {
                if ((this.PageSizeField.Equals(value) != true)) {
                    this.PageSizeField = value;
                    this.RaisePropertyChanged("PageSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SearchAgency {
            get {
                return this.SearchAgencyField;
            }
            set {
                if ((object.ReferenceEquals(this.SearchAgencyField, value) != true)) {
                    this.SearchAgencyField = value;
                    this.RaisePropertyChanged("SearchAgency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SortField {
            get {
                return this.SortFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.SortFieldField, value) != true)) {
                    this.SortFieldField = value;
                    this.RaisePropertyChanged("SortField");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DefectAgency", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.Company")]
    [System.SerializableAttribute()]
    public partial class DefectAgency : Vegam_MaintenanceModule.ipas_CompanyService.CompanyDefectDetail {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AgencyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DefectAgencyIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AgencyName {
            get {
                return this.AgencyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AgencyNameField, value) != true)) {
                    this.AgencyNameField = value;
                    this.RaisePropertyChanged("AgencyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DefectAgencyID {
            get {
                return this.DefectAgencyIDField;
            }
            set {
                if ((this.DefectAgencyIDField.Equals(value) != true)) {
                    this.DefectAgencyIDField = value;
                    this.RaisePropertyChanged("DefectAgencyID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DefectSourceFilter", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.Company")]
    [System.SerializableAttribute()]
    public partial class DefectSourceFilter : Vegam_MaintenanceModule.ipas_CompanyService.CompanyDefectDetail {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DefectSourceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SearchSourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SortFieldField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DefectSourceID {
            get {
                return this.DefectSourceIDField;
            }
            set {
                if ((this.DefectSourceIDField.Equals(value) != true)) {
                    this.DefectSourceIDField = value;
                    this.RaisePropertyChanged("DefectSourceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageIndex {
            get {
                return this.PageIndexField;
            }
            set {
                if ((this.PageIndexField.Equals(value) != true)) {
                    this.PageIndexField = value;
                    this.RaisePropertyChanged("PageIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageSize {
            get {
                return this.PageSizeField;
            }
            set {
                if ((this.PageSizeField.Equals(value) != true)) {
                    this.PageSizeField = value;
                    this.RaisePropertyChanged("PageSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SearchSource {
            get {
                return this.SearchSourceField;
            }
            set {
                if ((object.ReferenceEquals(this.SearchSourceField, value) != true)) {
                    this.SearchSourceField = value;
                    this.RaisePropertyChanged("SearchSource");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SortField {
            get {
                return this.SortFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.SortFieldField, value) != true)) {
                    this.SortFieldField = value;
                    this.RaisePropertyChanged("SortField");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DefectSource", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.Company")]
    [System.SerializableAttribute()]
    public partial class DefectSource : Vegam_MaintenanceModule.ipas_CompanyService.CompanyDefectDetail {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DefectSourceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DefectSourceID {
            get {
                return this.DefectSourceIDField;
            }
            set {
                if ((this.DefectSourceIDField.Equals(value) != true)) {
                    this.DefectSourceIDField = value;
                    this.RaisePropertyChanged("DefectSourceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SourceCode {
            get {
                return this.SourceCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceCodeField, value) != true)) {
                    this.SourceCodeField = value;
                    this.RaisePropertyChanged("SourceCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SourceName {
            get {
                return this.SourceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceNameField, value) != true)) {
                    this.SourceNameField = value;
                    this.RaisePropertyChanged("SourceName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DefectInfoFilter", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.Company")]
    [System.SerializableAttribute()]
    public partial class DefectInfoFilter : Vegam_MaintenanceModule.ipas_CompanyService.CompanyDefectDetail {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DefectIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SearchDefectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SortFieldField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DefectID {
            get {
                return this.DefectIDField;
            }
            set {
                if ((this.DefectIDField.Equals(value) != true)) {
                    this.DefectIDField = value;
                    this.RaisePropertyChanged("DefectID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageIndex {
            get {
                return this.PageIndexField;
            }
            set {
                if ((this.PageIndexField.Equals(value) != true)) {
                    this.PageIndexField = value;
                    this.RaisePropertyChanged("PageIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageSize {
            get {
                return this.PageSizeField;
            }
            set {
                if ((this.PageSizeField.Equals(value) != true)) {
                    this.PageSizeField = value;
                    this.RaisePropertyChanged("PageSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SearchDefect {
            get {
                return this.SearchDefectField;
            }
            set {
                if ((object.ReferenceEquals(this.SearchDefectField, value) != true)) {
                    this.SearchDefectField = value;
                    this.RaisePropertyChanged("SearchDefect");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SortField {
            get {
                return this.SortFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.SortFieldField, value) != true)) {
                    this.SortFieldField = value;
                    this.RaisePropertyChanged("SortField");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DefectListInfo", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.Company")]
    [System.SerializableAttribute()]
    public partial class DefectListInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Vegam_MaintenanceModule.ipas_CompanyService.DefectInfo[] DefectInfoListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalRecordsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Vegam_MaintenanceModule.ipas_CompanyService.DefectInfo[] DefectInfoList {
            get {
                return this.DefectInfoListField;
            }
            set {
                if ((object.ReferenceEquals(this.DefectInfoListField, value) != true)) {
                    this.DefectInfoListField = value;
                    this.RaisePropertyChanged("DefectInfoList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalRecords {
            get {
                return this.TotalRecordsField;
            }
            set {
                if ((this.TotalRecordsField.Equals(value) != true)) {
                    this.TotalRecordsField = value;
                    this.RaisePropertyChanged("TotalRecords");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DefectAgencyInfoList", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.Company")]
    [System.SerializableAttribute()]
    public partial class DefectAgencyInfoList : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Vegam_MaintenanceModule.ipas_CompanyService.DefectAgency[] DefectAgencyListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalRecordsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Vegam_MaintenanceModule.ipas_CompanyService.DefectAgency[] DefectAgencyList {
            get {
                return this.DefectAgencyListField;
            }
            set {
                if ((object.ReferenceEquals(this.DefectAgencyListField, value) != true)) {
                    this.DefectAgencyListField = value;
                    this.RaisePropertyChanged("DefectAgencyList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalRecords {
            get {
                return this.TotalRecordsField;
            }
            set {
                if ((this.TotalRecordsField.Equals(value) != true)) {
                    this.TotalRecordsField = value;
                    this.RaisePropertyChanged("TotalRecords");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DefectSourceInfoList", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.Company")]
    [System.SerializableAttribute()]
    public partial class DefectSourceInfoList : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Vegam_MaintenanceModule.ipas_CompanyService.DefectSource[] DefectSourceListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalRecordsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Vegam_MaintenanceModule.ipas_CompanyService.DefectSource[] DefectSourceList {
            get {
                return this.DefectSourceListField;
            }
            set {
                if ((object.ReferenceEquals(this.DefectSourceListField, value) != true)) {
                    this.DefectSourceListField = value;
                    this.RaisePropertyChanged("DefectSourceList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalRecords {
            get {
                return this.TotalRecordsField;
            }
            set {
                if ((this.TotalRecordsField.Equals(value) != true)) {
                    this.TotalRecordsField = value;
                    this.RaisePropertyChanged("TotalRecords");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QualityDecisionFilter", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.Plant")]
    [System.SerializableAttribute()]
    public partial class QualityDecisionFilter : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SearchQualityCodeOrDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SortTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyID {
            get {
                return this.CompanyIDField;
            }
            set {
                if ((this.CompanyIDField.Equals(value) != true)) {
                    this.CompanyIDField = value;
                    this.RaisePropertyChanged("CompanyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageIndex {
            get {
                return this.PageIndexField;
            }
            set {
                if ((this.PageIndexField.Equals(value) != true)) {
                    this.PageIndexField = value;
                    this.RaisePropertyChanged("PageIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageSize {
            get {
                return this.PageSizeField;
            }
            set {
                if ((this.PageSizeField.Equals(value) != true)) {
                    this.PageSizeField = value;
                    this.RaisePropertyChanged("PageSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SearchQualityCodeOrDescription {
            get {
                return this.SearchQualityCodeOrDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.SearchQualityCodeOrDescriptionField, value) != true)) {
                    this.SearchQualityCodeOrDescriptionField = value;
                    this.RaisePropertyChanged("SearchQualityCodeOrDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SortType {
            get {
                return this.SortTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.SortTypeField, value) != true)) {
                    this.SortTypeField = value;
                    this.RaisePropertyChanged("SortType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QualityDecisionList", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.Plant")]
    [System.SerializableAttribute()]
    public partial class QualityDecisionList : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Vegam_MaintenanceModule.ipas_CompanyService.QualityDecisionsFields[] QualityListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalRecordsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Vegam_MaintenanceModule.ipas_CompanyService.QualityDecisionsFields[] QualityList {
            get {
                return this.QualityListField;
            }
            set {
                if ((object.ReferenceEquals(this.QualityListField, value) != true)) {
                    this.QualityListField = value;
                    this.RaisePropertyChanged("QualityList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalRecords {
            get {
                return this.TotalRecordsField;
            }
            set {
                if ((this.TotalRecordsField.Equals(value) != true)) {
                    this.TotalRecordsField = value;
                    this.RaisePropertyChanged("TotalRecords");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QualityDecisionsFields", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.Plant")]
    [System.SerializableAttribute()]
    public partial class QualityDecisionsFields : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QualityDecisionCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QualityDecisionDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QualityDecisionIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyID {
            get {
                return this.CompanyIDField;
            }
            set {
                if ((this.CompanyIDField.Equals(value) != true)) {
                    this.CompanyIDField = value;
                    this.RaisePropertyChanged("CompanyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QualityDecisionCode {
            get {
                return this.QualityDecisionCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.QualityDecisionCodeField, value) != true)) {
                    this.QualityDecisionCodeField = value;
                    this.RaisePropertyChanged("QualityDecisionCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QualityDecisionDescription {
            get {
                return this.QualityDecisionDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.QualityDecisionDescriptionField, value) != true)) {
                    this.QualityDecisionDescriptionField = value;
                    this.RaisePropertyChanged("QualityDecisionDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int QualityDecisionID {
            get {
                return this.QualityDecisionIDField;
            }
            set {
                if ((this.QualityDecisionIDField.Equals(value) != true)) {
                    this.QualityDecisionIDField = value;
                    this.RaisePropertyChanged("QualityDecisionID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ObjectInfoFilter", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.Company")]
    [System.SerializableAttribute()]
    public partial class ObjectInfoFilter : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ObjectSearchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageSizeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ObjectSearch {
            get {
                return this.ObjectSearchField;
            }
            set {
                if ((object.ReferenceEquals(this.ObjectSearchField, value) != true)) {
                    this.ObjectSearchField = value;
                    this.RaisePropertyChanged("ObjectSearch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageIndex {
            get {
                return this.PageIndexField;
            }
            set {
                if ((this.PageIndexField.Equals(value) != true)) {
                    this.PageIndexField = value;
                    this.RaisePropertyChanged("PageIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageSize {
            get {
                return this.PageSizeField;
            }
            set {
                if ((this.PageSizeField.Equals(value) != true)) {
                    this.PageSizeField = value;
                    this.RaisePropertyChanged("PageSize");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ObjectInfoList", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.Company")]
    [System.SerializableAttribute()]
    public partial class ObjectInfoList : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Vegam_MaintenanceModule.ipas_CompanyService.ObjectInfo[] ObjecFieldsInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalRecordsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Vegam_MaintenanceModule.ipas_CompanyService.ObjectInfo[] ObjecFieldsInfo {
            get {
                return this.ObjecFieldsInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.ObjecFieldsInfoField, value) != true)) {
                    this.ObjecFieldsInfoField = value;
                    this.RaisePropertyChanged("ObjecFieldsInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalRecords {
            get {
                return this.TotalRecordsField;
            }
            set {
                if ((this.TotalRecordsField.Equals(value) != true)) {
                    this.TotalRecordsField = value;
                    this.RaisePropertyChanged("TotalRecords");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ObjectInfo", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.Company")]
    [System.SerializableAttribute()]
    public partial class ObjectInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ObjectIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ObjectNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ViewNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ObjectID {
            get {
                return this.ObjectIDField;
            }
            set {
                if ((this.ObjectIDField.Equals(value) != true)) {
                    this.ObjectIDField = value;
                    this.RaisePropertyChanged("ObjectID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ObjectName {
            get {
                return this.ObjectNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ObjectNameField, value) != true)) {
                    this.ObjectNameField = value;
                    this.RaisePropertyChanged("ObjectName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ViewName {
            get {
                return this.ViewNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ViewNameField, value) != true)) {
                    this.ViewNameField = value;
                    this.RaisePropertyChanged("ViewName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DynamicGridFilter", Namespace="http://schemas.datacontract.org/2004/07/DynamicGrid")]
    [System.SerializableAttribute()]
    public partial class DynamicGridFilter : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FeatureAdditionalInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FeatureIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ObjectIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PlineIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SiteIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserViewIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FeatureAdditionalInfo {
            get {
                return this.FeatureAdditionalInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.FeatureAdditionalInfoField, value) != true)) {
                    this.FeatureAdditionalInfoField = value;
                    this.RaisePropertyChanged("FeatureAdditionalInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FeatureID {
            get {
                return this.FeatureIDField;
            }
            set {
                if ((this.FeatureIDField.Equals(value) != true)) {
                    this.FeatureIDField = value;
                    this.RaisePropertyChanged("FeatureID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ObjectID {
            get {
                return this.ObjectIDField;
            }
            set {
                if ((this.ObjectIDField.Equals(value) != true)) {
                    this.ObjectIDField = value;
                    this.RaisePropertyChanged("ObjectID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PlineID {
            get {
                return this.PlineIDField;
            }
            set {
                if ((this.PlineIDField.Equals(value) != true)) {
                    this.PlineIDField = value;
                    this.RaisePropertyChanged("PlineID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SiteID {
            get {
                return this.SiteIDField;
            }
            set {
                if ((this.SiteIDField.Equals(value) != true)) {
                    this.SiteIDField = value;
                    this.RaisePropertyChanged("SiteID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserViewID {
            get {
                return this.UserViewIDField;
            }
            set {
                if ((this.UserViewIDField.Equals(value) != true)) {
                    this.UserViewIDField = value;
                    this.RaisePropertyChanged("UserViewID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DynamicGridFeatureFieldInfo", Namespace="http://schemas.datacontract.org/2004/07/DynamicGrid")]
    [System.SerializableAttribute()]
    public partial class DynamicGridFeatureFieldInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Vegam_MaintenanceModule.ipas_CompanyService.DynamicGridFieldInfo[] FieldInfoListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ObjectIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PageToLoadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PlineIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Vegam_MaintenanceModule.ipas_CompanyService.TypeValueInfo[] TypeValueInfoListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserDefaultViewIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Vegam_MaintenanceModule.ipas_CompanyService.UserViewBasicInfo[] UserViewInfoListField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Vegam_MaintenanceModule.ipas_CompanyService.DynamicGridFieldInfo[] FieldInfoList {
            get {
                return this.FieldInfoListField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldInfoListField, value) != true)) {
                    this.FieldInfoListField = value;
                    this.RaisePropertyChanged("FieldInfoList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ObjectID {
            get {
                return this.ObjectIDField;
            }
            set {
                if ((this.ObjectIDField.Equals(value) != true)) {
                    this.ObjectIDField = value;
                    this.RaisePropertyChanged("ObjectID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PageToLoad {
            get {
                return this.PageToLoadField;
            }
            set {
                if ((object.ReferenceEquals(this.PageToLoadField, value) != true)) {
                    this.PageToLoadField = value;
                    this.RaisePropertyChanged("PageToLoad");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PlineID {
            get {
                return this.PlineIDField;
            }
            set {
                if ((this.PlineIDField.Equals(value) != true)) {
                    this.PlineIDField = value;
                    this.RaisePropertyChanged("PlineID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Vegam_MaintenanceModule.ipas_CompanyService.TypeValueInfo[] TypeValueInfoList {
            get {
                return this.TypeValueInfoListField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeValueInfoListField, value) != true)) {
                    this.TypeValueInfoListField = value;
                    this.RaisePropertyChanged("TypeValueInfoList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserDefaultViewID {
            get {
                return this.UserDefaultViewIDField;
            }
            set {
                if ((this.UserDefaultViewIDField.Equals(value) != true)) {
                    this.UserDefaultViewIDField = value;
                    this.RaisePropertyChanged("UserDefaultViewID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Vegam_MaintenanceModule.ipas_CompanyService.UserViewBasicInfo[] UserViewInfoList {
            get {
                return this.UserViewInfoListField;
            }
            set {
                if ((object.ReferenceEquals(this.UserViewInfoListField, value) != true)) {
                    this.UserViewInfoListField = value;
                    this.RaisePropertyChanged("UserViewInfoList");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DynamicGridFieldInfo", Namespace="http://schemas.datacontract.org/2004/07/DynamicGrid")]
    [System.SerializableAttribute()]
    public partial class DynamicGridFieldInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Vegam_MaintenanceModule.ipas_CompanyService.DataRenderType DataRenderTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DefaultGroupSortingFieldIdentifierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DisplayOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableGroupSelectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableGroupSortingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableGroupingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableSortingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FieldIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FieldIdentifierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Vegam_MaintenanceModule.ipas_CompanyService.FieldSelectionType FieldSelectionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Vegam_MaintenanceModule.ipas_CompanyService.FilterControlDataType FilterControlDataTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Vegam_MaintenanceModule.ipas_CompanyService.FilterControlRenderType FilterControlRenderTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] FilterDefaultValueListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupSortingExcludeFilterFieldIdentifierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasCustomAttributeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasCustomDataBindField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsFixedFilterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsUserViewFilterFieldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserViewDisplayOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserViewGroupByOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Vegam_MaintenanceModule.ipas_CompanyService.SortType UserViewSortTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Vegam_MaintenanceModule.ipas_CompanyService.DataRenderType DataRenderType {
            get {
                return this.DataRenderTypeField;
            }
            set {
                if ((this.DataRenderTypeField.Equals(value) != true)) {
                    this.DataRenderTypeField = value;
                    this.RaisePropertyChanged("DataRenderType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DefaultGroupSortingFieldIdentifier {
            get {
                return this.DefaultGroupSortingFieldIdentifierField;
            }
            set {
                if ((object.ReferenceEquals(this.DefaultGroupSortingFieldIdentifierField, value) != true)) {
                    this.DefaultGroupSortingFieldIdentifierField = value;
                    this.RaisePropertyChanged("DefaultGroupSortingFieldIdentifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayName {
            get {
                return this.DisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayNameField, value) != true)) {
                    this.DisplayNameField = value;
                    this.RaisePropertyChanged("DisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DisplayOrder {
            get {
                return this.DisplayOrderField;
            }
            set {
                if ((this.DisplayOrderField.Equals(value) != true)) {
                    this.DisplayOrderField = value;
                    this.RaisePropertyChanged("DisplayOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableGroupSelection {
            get {
                return this.EnableGroupSelectionField;
            }
            set {
                if ((this.EnableGroupSelectionField.Equals(value) != true)) {
                    this.EnableGroupSelectionField = value;
                    this.RaisePropertyChanged("EnableGroupSelection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableGroupSorting {
            get {
                return this.EnableGroupSortingField;
            }
            set {
                if ((this.EnableGroupSortingField.Equals(value) != true)) {
                    this.EnableGroupSortingField = value;
                    this.RaisePropertyChanged("EnableGroupSorting");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableGrouping {
            get {
                return this.EnableGroupingField;
            }
            set {
                if ((this.EnableGroupingField.Equals(value) != true)) {
                    this.EnableGroupingField = value;
                    this.RaisePropertyChanged("EnableGrouping");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableSorting {
            get {
                return this.EnableSortingField;
            }
            set {
                if ((this.EnableSortingField.Equals(value) != true)) {
                    this.EnableSortingField = value;
                    this.RaisePropertyChanged("EnableSorting");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FieldID {
            get {
                return this.FieldIDField;
            }
            set {
                if ((this.FieldIDField.Equals(value) != true)) {
                    this.FieldIDField = value;
                    this.RaisePropertyChanged("FieldID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FieldIdentifier {
            get {
                return this.FieldIdentifierField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldIdentifierField, value) != true)) {
                    this.FieldIdentifierField = value;
                    this.RaisePropertyChanged("FieldIdentifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Vegam_MaintenanceModule.ipas_CompanyService.FieldSelectionType FieldSelectionType {
            get {
                return this.FieldSelectionTypeField;
            }
            set {
                if ((this.FieldSelectionTypeField.Equals(value) != true)) {
                    this.FieldSelectionTypeField = value;
                    this.RaisePropertyChanged("FieldSelectionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Vegam_MaintenanceModule.ipas_CompanyService.FilterControlDataType FilterControlDataType {
            get {
                return this.FilterControlDataTypeField;
            }
            set {
                if ((this.FilterControlDataTypeField.Equals(value) != true)) {
                    this.FilterControlDataTypeField = value;
                    this.RaisePropertyChanged("FilterControlDataType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Vegam_MaintenanceModule.ipas_CompanyService.FilterControlRenderType FilterControlRenderType {
            get {
                return this.FilterControlRenderTypeField;
            }
            set {
                if ((this.FilterControlRenderTypeField.Equals(value) != true)) {
                    this.FilterControlRenderTypeField = value;
                    this.RaisePropertyChanged("FilterControlRenderType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] FilterDefaultValueList {
            get {
                return this.FilterDefaultValueListField;
            }
            set {
                if ((object.ReferenceEquals(this.FilterDefaultValueListField, value) != true)) {
                    this.FilterDefaultValueListField = value;
                    this.RaisePropertyChanged("FilterDefaultValueList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupSortingExcludeFilterFieldIdentifier {
            get {
                return this.GroupSortingExcludeFilterFieldIdentifierField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupSortingExcludeFilterFieldIdentifierField, value) != true)) {
                    this.GroupSortingExcludeFilterFieldIdentifierField = value;
                    this.RaisePropertyChanged("GroupSortingExcludeFilterFieldIdentifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasCustomAttribute {
            get {
                return this.HasCustomAttributeField;
            }
            set {
                if ((this.HasCustomAttributeField.Equals(value) != true)) {
                    this.HasCustomAttributeField = value;
                    this.RaisePropertyChanged("HasCustomAttribute");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasCustomDataBind {
            get {
                return this.HasCustomDataBindField;
            }
            set {
                if ((this.HasCustomDataBindField.Equals(value) != true)) {
                    this.HasCustomDataBindField = value;
                    this.RaisePropertyChanged("HasCustomDataBind");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsFixedFilter {
            get {
                return this.IsFixedFilterField;
            }
            set {
                if ((this.IsFixedFilterField.Equals(value) != true)) {
                    this.IsFixedFilterField = value;
                    this.RaisePropertyChanged("IsFixedFilter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsUserViewFilterField {
            get {
                return this.IsUserViewFilterFieldField;
            }
            set {
                if ((this.IsUserViewFilterFieldField.Equals(value) != true)) {
                    this.IsUserViewFilterFieldField = value;
                    this.RaisePropertyChanged("IsUserViewFilterField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserViewDisplayOrder {
            get {
                return this.UserViewDisplayOrderField;
            }
            set {
                if ((this.UserViewDisplayOrderField.Equals(value) != true)) {
                    this.UserViewDisplayOrderField = value;
                    this.RaisePropertyChanged("UserViewDisplayOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserViewGroupByOrder {
            get {
                return this.UserViewGroupByOrderField;
            }
            set {
                if ((this.UserViewGroupByOrderField.Equals(value) != true)) {
                    this.UserViewGroupByOrderField = value;
                    this.RaisePropertyChanged("UserViewGroupByOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Vegam_MaintenanceModule.ipas_CompanyService.SortType UserViewSortType {
            get {
                return this.UserViewSortTypeField;
            }
            set {
                if ((this.UserViewSortTypeField.Equals(value) != true)) {
                    this.UserViewSortTypeField = value;
                    this.RaisePropertyChanged("UserViewSortType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TypeValueInfo", Namespace="http://schemas.datacontract.org/2004/07/DynamicGrid")]
    [System.SerializableAttribute()]
    public partial class TypeValueInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDefaultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayName {
            get {
                return this.DisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayNameField, value) != true)) {
                    this.DisplayNameField = value;
                    this.RaisePropertyChanged("DisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageName {
            get {
                return this.ImageNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageNameField, value) != true)) {
                    this.ImageNameField = value;
                    this.RaisePropertyChanged("ImageName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDefault {
            get {
                return this.IsDefaultField;
            }
            set {
                if ((this.IsDefaultField.Equals(value) != true)) {
                    this.IsDefaultField = value;
                    this.RaisePropertyChanged("IsDefault");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeValue {
            get {
                return this.TypeValueField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeValueField, value) != true)) {
                    this.TypeValueField = value;
                    this.RaisePropertyChanged("TypeValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserViewBasicInfo", Namespace="http://schemas.datacontract.org/2004/07/DynamicGrid")]
    [System.SerializableAttribute()]
    public partial class UserViewBasicInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSharedViewField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ViewIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ViewNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSharedView {
            get {
                return this.IsSharedViewField;
            }
            set {
                if ((this.IsSharedViewField.Equals(value) != true)) {
                    this.IsSharedViewField = value;
                    this.RaisePropertyChanged("IsSharedView");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ViewID {
            get {
                return this.ViewIDField;
            }
            set {
                if ((this.ViewIDField.Equals(value) != true)) {
                    this.ViewIDField = value;
                    this.RaisePropertyChanged("ViewID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ViewName {
            get {
                return this.ViewNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ViewNameField, value) != true)) {
                    this.ViewNameField = value;
                    this.RaisePropertyChanged("ViewName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataRenderType", Namespace="http://schemas.datacontract.org/2004/07/DynamicGrid")]
    public enum DataRenderType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 78,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Text = 84,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SiteDate = 68,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SiteTime = 77,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnumType = 69,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Image = 73,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Custom = 67,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        YesOrNo = 89,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SiteDateTime = 65,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FieldSelectionType", Namespace="http://schemas.datacontract.org/2004/07/DynamicGrid")]
    public enum FieldSelectionType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 78,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Optional = 79,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OptionalDefaultViewDisplay = 68,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Mandatory = 77,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Custom = 67,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SQLFilter = 70,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SQLDefaultOrder = 83,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FilterControlDataType", Namespace="http://schemas.datacontract.org/2004/07/DynamicGrid")]
    public enum FilterControlDataType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 78,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Text = 84,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Number = 73,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Decimal = 68,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FilterControlRenderType", Namespace="http://schemas.datacontract.org/2004/07/DynamicGrid")]
    public enum FilterControlRenderType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 78,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Text = 84,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Range = 82,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DateRange = 68,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Custom = 67,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustomMultiSelect = 77,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnumType = 69,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnumTypeMultiSelect = 83,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SortType", Namespace="http://schemas.datacontract.org/2004/07/DynamicGrid")]
    public enum SortType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 78,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Ascending = 65,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Descending = 68,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DynamicGridContentFilter", Namespace="http://schemas.datacontract.org/2004/07/DynamicGrid")]
    [System.SerializableAttribute()]
    public partial class DynamicGridContentFilter : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExcelSheetNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Vegam_MaintenanceModule.ipas_CompanyService.DynamicGridFilterValueInfo[] GridFilteredFieldInfoValueListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Vegam_MaintenanceModule.ipas_CompanyService.DynamicGridSelectedFieldInfo[] GridSelectedFieldInfoListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GroupedFirstFieldIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GroupedSecondFieldIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] SelectedFieldIDListOrderField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExcelSheetName {
            get {
                return this.ExcelSheetNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ExcelSheetNameField, value) != true)) {
                    this.ExcelSheetNameField = value;
                    this.RaisePropertyChanged("ExcelSheetName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Vegam_MaintenanceModule.ipas_CompanyService.DynamicGridFilterValueInfo[] GridFilteredFieldInfoValueList {
            get {
                return this.GridFilteredFieldInfoValueListField;
            }
            set {
                if ((object.ReferenceEquals(this.GridFilteredFieldInfoValueListField, value) != true)) {
                    this.GridFilteredFieldInfoValueListField = value;
                    this.RaisePropertyChanged("GridFilteredFieldInfoValueList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Vegam_MaintenanceModule.ipas_CompanyService.DynamicGridSelectedFieldInfo[] GridSelectedFieldInfoList {
            get {
                return this.GridSelectedFieldInfoListField;
            }
            set {
                if ((object.ReferenceEquals(this.GridSelectedFieldInfoListField, value) != true)) {
                    this.GridSelectedFieldInfoListField = value;
                    this.RaisePropertyChanged("GridSelectedFieldInfoList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GroupedFirstFieldID {
            get {
                return this.GroupedFirstFieldIDField;
            }
            set {
                if ((this.GroupedFirstFieldIDField.Equals(value) != true)) {
                    this.GroupedFirstFieldIDField = value;
                    this.RaisePropertyChanged("GroupedFirstFieldID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GroupedSecondFieldID {
            get {
                return this.GroupedSecondFieldIDField;
            }
            set {
                if ((this.GroupedSecondFieldIDField.Equals(value) != true)) {
                    this.GroupedSecondFieldIDField = value;
                    this.RaisePropertyChanged("GroupedSecondFieldID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageIndex {
            get {
                return this.PageIndexField;
            }
            set {
                if ((this.PageIndexField.Equals(value) != true)) {
                    this.PageIndexField = value;
                    this.RaisePropertyChanged("PageIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageSize {
            get {
                return this.PageSizeField;
            }
            set {
                if ((this.PageSizeField.Equals(value) != true)) {
                    this.PageSizeField = value;
                    this.RaisePropertyChanged("PageSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] SelectedFieldIDListOrder {
            get {
                return this.SelectedFieldIDListOrderField;
            }
            set {
                if ((object.ReferenceEquals(this.SelectedFieldIDListOrderField, value) != true)) {
                    this.SelectedFieldIDListOrderField = value;
                    this.RaisePropertyChanged("SelectedFieldIDListOrder");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DynamicGridFilterValueInfo", Namespace="http://schemas.datacontract.org/2004/07/DynamicGrid")]
    [System.SerializableAttribute()]
    public partial class DynamicGridFilterValueInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FieldIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] FilterValueListField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FieldID {
            get {
                return this.FieldIDField;
            }
            set {
                if ((this.FieldIDField.Equals(value) != true)) {
                    this.FieldIDField = value;
                    this.RaisePropertyChanged("FieldID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] FilterValueList {
            get {
                return this.FilterValueListField;
            }
            set {
                if ((object.ReferenceEquals(this.FilterValueListField, value) != true)) {
                    this.FilterValueListField = value;
                    this.RaisePropertyChanged("FilterValueList");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DynamicGridSelectedFieldInfo", Namespace="http://schemas.datacontract.org/2004/07/DynamicGrid")]
    [System.SerializableAttribute()]
    public partial class DynamicGridSelectedFieldInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FieldIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Vegam_MaintenanceModule.ipas_CompanyService.SortType SortTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FieldID {
            get {
                return this.FieldIDField;
            }
            set {
                if ((this.FieldIDField.Equals(value) != true)) {
                    this.FieldIDField = value;
                    this.RaisePropertyChanged("FieldID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Vegam_MaintenanceModule.ipas_CompanyService.SortType SortType {
            get {
                return this.SortTypeField;
            }
            set {
                if ((this.SortTypeField.Equals(value) != true)) {
                    this.SortTypeField = value;
                    this.RaisePropertyChanged("SortType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DynamicGridContentInfo", Namespace="http://schemas.datacontract.org/2004/07/DynamicGrid")]
    [System.SerializableAttribute()]
    public partial class DynamicGridContentInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Vegam_MaintenanceModule.ipas_CompanyService.DynamicGridRowContentInfo[] DynamicGridRowInfoListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LastRowIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalRecordsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Vegam_MaintenanceModule.ipas_CompanyService.DynamicGridRowContentInfo[] DynamicGridRowInfoList {
            get {
                return this.DynamicGridRowInfoListField;
            }
            set {
                if ((object.ReferenceEquals(this.DynamicGridRowInfoListField, value) != true)) {
                    this.DynamicGridRowInfoListField = value;
                    this.RaisePropertyChanged("DynamicGridRowInfoList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LastRowIndex {
            get {
                return this.LastRowIndexField;
            }
            set {
                if ((this.LastRowIndexField.Equals(value) != true)) {
                    this.LastRowIndexField = value;
                    this.RaisePropertyChanged("LastRowIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalRecords {
            get {
                return this.TotalRecordsField;
            }
            set {
                if ((this.TotalRecordsField.Equals(value) != true)) {
                    this.TotalRecordsField = value;
                    this.RaisePropertyChanged("TotalRecords");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DynamicGridRowContentInfo", Namespace="http://schemas.datacontract.org/2004/07/DynamicGrid")]
    [System.SerializableAttribute()]
    public partial class DynamicGridRowContentInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Vegam_MaintenanceModule.ipas_CompanyService.DynamicGridFieldValueInfo[] FieldValueListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GroupTotalRecordsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsGroupRowField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Vegam_MaintenanceModule.ipas_CompanyService.DynamicGridFieldValueInfo[] FieldValueList {
            get {
                return this.FieldValueListField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldValueListField, value) != true)) {
                    this.FieldValueListField = value;
                    this.RaisePropertyChanged("FieldValueList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GroupTotalRecords {
            get {
                return this.GroupTotalRecordsField;
            }
            set {
                if ((this.GroupTotalRecordsField.Equals(value) != true)) {
                    this.GroupTotalRecordsField = value;
                    this.RaisePropertyChanged("GroupTotalRecords");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsGroupRow {
            get {
                return this.IsGroupRowField;
            }
            set {
                if ((this.IsGroupRowField.Equals(value) != true)) {
                    this.IsGroupRowField = value;
                    this.RaisePropertyChanged("IsGroupRow");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DynamicGridFieldValueInfo", Namespace="http://schemas.datacontract.org/2004/07/DynamicGrid")]
    [System.SerializableAttribute()]
    public partial class DynamicGridFieldValueInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FieldIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FieldValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FieldID {
            get {
                return this.FieldIDField;
            }
            set {
                if ((this.FieldIDField.Equals(value) != true)) {
                    this.FieldIDField = value;
                    this.RaisePropertyChanged("FieldID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FieldValue {
            get {
                return this.FieldValueField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldValueField, value) != true)) {
                    this.FieldValueField = value;
                    this.RaisePropertyChanged("FieldValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DynamicGridTypeValueFilter", Namespace="http://schemas.datacontract.org/2004/07/DynamicGrid")]
    [System.SerializableAttribute()]
    public partial class DynamicGridTypeValueFilter : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Vegam_MaintenanceModule.ipas_CompanyService.FilterControlRenderType RenderTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Vegam_MaintenanceModule.ipas_CompanyService.FilterControlRenderType RenderType {
            get {
                return this.RenderTypeField;
            }
            set {
                if ((this.RenderTypeField.Equals(value) != true)) {
                    this.RenderTypeField = value;
                    this.RaisePropertyChanged("RenderType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeName {
            get {
                return this.TypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeNameField, value) != true)) {
                    this.TypeNameField = value;
                    this.RaisePropertyChanged("TypeName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserViewFieldInfo", Namespace="http://schemas.datacontract.org/2004/07/DynamicGrid")]
    [System.SerializableAttribute()]
    public partial class UserViewFieldInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DisplayOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FieldIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GroupByOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsFilterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Vegam_MaintenanceModule.ipas_CompanyService.SortType SortTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DisplayOrder {
            get {
                return this.DisplayOrderField;
            }
            set {
                if ((this.DisplayOrderField.Equals(value) != true)) {
                    this.DisplayOrderField = value;
                    this.RaisePropertyChanged("DisplayOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FieldID {
            get {
                return this.FieldIDField;
            }
            set {
                if ((this.FieldIDField.Equals(value) != true)) {
                    this.FieldIDField = value;
                    this.RaisePropertyChanged("FieldID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GroupByOrder {
            get {
                return this.GroupByOrderField;
            }
            set {
                if ((this.GroupByOrderField.Equals(value) != true)) {
                    this.GroupByOrderField = value;
                    this.RaisePropertyChanged("GroupByOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsFilter {
            get {
                return this.IsFilterField;
            }
            set {
                if ((this.IsFilterField.Equals(value) != true)) {
                    this.IsFilterField = value;
                    this.RaisePropertyChanged("IsFilter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Vegam_MaintenanceModule.ipas_CompanyService.SortType SortType {
            get {
                return this.SortTypeField;
            }
            set {
                if ((this.SortTypeField.Equals(value) != true)) {
                    this.SortTypeField = value;
                    this.RaisePropertyChanged("SortType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserViewInfo", Namespace="http://schemas.datacontract.org/2004/07/DynamicGrid")]
    [System.SerializableAttribute()]
    public partial class UserViewInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSharedViewField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Vegam_MaintenanceModule.ipas_CompanyService.UserViewFieldInfo[] UserViewFieldInfoListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ViewIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ViewNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSharedView {
            get {
                return this.IsSharedViewField;
            }
            set {
                if ((this.IsSharedViewField.Equals(value) != true)) {
                    this.IsSharedViewField = value;
                    this.RaisePropertyChanged("IsSharedView");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Vegam_MaintenanceModule.ipas_CompanyService.UserViewFieldInfo[] UserViewFieldInfoList {
            get {
                return this.UserViewFieldInfoListField;
            }
            set {
                if ((object.ReferenceEquals(this.UserViewFieldInfoListField, value) != true)) {
                    this.UserViewFieldInfoListField = value;
                    this.RaisePropertyChanged("UserViewFieldInfoList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ViewID {
            get {
                return this.ViewIDField;
            }
            set {
                if ((this.ViewIDField.Equals(value) != true)) {
                    this.ViewIDField = value;
                    this.RaisePropertyChanged("ViewID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ViewName {
            get {
                return this.ViewNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ViewNameField, value) != true)) {
                    this.ViewNameField = value;
                    this.RaisePropertyChanged("ViewName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DepartmentBasicInfo", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.Company")]
    [System.SerializableAttribute()]
    public partial class DepartmentBasicInfo : Vegam_MaintenanceModule.ipas_CompanyService.Department {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccessLevelIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccessLevelID {
            get {
                return this.AccessLevelIDField;
            }
            set {
                if ((this.AccessLevelIDField.Equals(value) != true)) {
                    this.AccessLevelIDField = value;
                    this.RaisePropertyChanged("AccessLevelID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Department", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.Company")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Vegam_MaintenanceModule.ipas_CompanyService.DepartmentInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Vegam_MaintenanceModule.ipas_CompanyService.DepartmentBasicInfo))]
    public partial class Department : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DepartmentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DepartmentNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DepartmentID {
            get {
                return this.DepartmentIDField;
            }
            set {
                if ((this.DepartmentIDField.Equals(value) != true)) {
                    this.DepartmentIDField = value;
                    this.RaisePropertyChanged("DepartmentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DepartmentName {
            get {
                return this.DepartmentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartmentNameField, value) != true)) {
                    this.DepartmentNameField = value;
                    this.RaisePropertyChanged("DepartmentName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DepartmentInfo", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.Company")]
    [System.SerializableAttribute()]
    public partial class DepartmentInfo : Vegam_MaintenanceModule.ipas_CompanyService.Department {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Vegam_MaintenanceModule.ipas_CompanyService.AccessLevel AccessLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccessLevelNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Vegam_MaintenanceModule.ipas_CompanyService.DepartmentDescInfo[] DepartmentDescInfoListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ParentDepartmentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentDepartmentNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UpdatedByField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Vegam_MaintenanceModule.ipas_CompanyService.AccessLevel AccessLevel {
            get {
                return this.AccessLevelField;
            }
            set {
                if ((this.AccessLevelField.Equals(value) != true)) {
                    this.AccessLevelField = value;
                    this.RaisePropertyChanged("AccessLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccessLevelName {
            get {
                return this.AccessLevelNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessLevelNameField, value) != true)) {
                    this.AccessLevelNameField = value;
                    this.RaisePropertyChanged("AccessLevelName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyID {
            get {
                return this.CompanyIDField;
            }
            set {
                if ((this.CompanyIDField.Equals(value) != true)) {
                    this.CompanyIDField = value;
                    this.RaisePropertyChanged("CompanyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Vegam_MaintenanceModule.ipas_CompanyService.DepartmentDescInfo[] DepartmentDescInfoList {
            get {
                return this.DepartmentDescInfoListField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartmentDescInfoListField, value) != true)) {
                    this.DepartmentDescInfoListField = value;
                    this.RaisePropertyChanged("DepartmentDescInfoList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ParentDepartmentID {
            get {
                return this.ParentDepartmentIDField;
            }
            set {
                if ((this.ParentDepartmentIDField.Equals(value) != true)) {
                    this.ParentDepartmentIDField = value;
                    this.RaisePropertyChanged("ParentDepartmentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentDepartmentName {
            get {
                return this.ParentDepartmentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentDepartmentNameField, value) != true)) {
                    this.ParentDepartmentNameField = value;
                    this.RaisePropertyChanged("ParentDepartmentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UpdatedBy {
            get {
                return this.UpdatedByField;
            }
            set {
                if ((this.UpdatedByField.Equals(value) != true)) {
                    this.UpdatedByField = value;
                    this.RaisePropertyChanged("UpdatedBy");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccessLevel", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.UserInfo")]
    public enum AccessLevel : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        COMPANY_LEVEL = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        REGIONAL_LEVEL = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        COUNTRY_LEVEL = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PLANT_MANAGER_LEVEL = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PLANT_LEVEL = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PORTAL_ADMIN = 6,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DepartmentDescInfo", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.Company")]
    [System.SerializableAttribute()]
    public partial class DepartmentDescInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DepartmentDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LanguageIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LanguageNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DepartmentDesc {
            get {
                return this.DepartmentDescField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartmentDescField, value) != true)) {
                    this.DepartmentDescField = value;
                    this.RaisePropertyChanged("DepartmentDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LanguageID {
            get {
                return this.LanguageIDField;
            }
            set {
                if ((this.LanguageIDField.Equals(value) != true)) {
                    this.LanguageIDField = value;
                    this.RaisePropertyChanged("LanguageID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LanguageName {
            get {
                return this.LanguageNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LanguageNameField, value) != true)) {
                    this.LanguageNameField = value;
                    this.RaisePropertyChanged("LanguageName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DepartmentFilter", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.Company")]
    [System.SerializableAttribute()]
    public partial class DepartmentFilter : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPlantLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<Vegam_MaintenanceModule.ipas_CompanyService.DepartmentTypeSort> SortFieldField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyID {
            get {
                return this.CompanyIDField;
            }
            set {
                if ((this.CompanyIDField.Equals(value) != true)) {
                    this.CompanyIDField = value;
                    this.RaisePropertyChanged("CompanyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPlantLevel {
            get {
                return this.IsPlantLevelField;
            }
            set {
                if ((this.IsPlantLevelField.Equals(value) != true)) {
                    this.IsPlantLevelField = value;
                    this.RaisePropertyChanged("IsPlantLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<Vegam_MaintenanceModule.ipas_CompanyService.DepartmentTypeSort> SortField {
            get {
                return this.SortFieldField;
            }
            set {
                if ((this.SortFieldField.Equals(value) != true)) {
                    this.SortFieldField = value;
                    this.RaisePropertyChanged("SortField");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DepartmentTypeSort", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.Company")]
    public enum DepartmentTypeSort : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DepartmentName_asc = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DepartmentName_desc = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ParentDepartment_asc = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ParentDepartment_desc = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AccessLevel_asc = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AccessLevel_desc = 6,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DepartmentList", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.Company")]
    [System.SerializableAttribute()]
    public partial class DepartmentList : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Vegam_MaintenanceModule.ipas_CompanyService.DepartmentInfo[] DepartmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalRecordsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Vegam_MaintenanceModule.ipas_CompanyService.DepartmentInfo[] Department {
            get {
                return this.DepartmentField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartmentField, value) != true)) {
                    this.DepartmentField = value;
                    this.RaisePropertyChanged("Department");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalRecords {
            get {
                return this.TotalRecordsField;
            }
            set {
                if ((this.TotalRecordsField.Equals(value) != true)) {
                    this.TotalRecordsField = value;
                    this.RaisePropertyChanged("TotalRecords");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccessLevelInfo", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.Company")]
    [System.SerializableAttribute()]
    public partial class AccessLevelInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccessLevelIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccessLevelNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccessLevelID {
            get {
                return this.AccessLevelIDField;
            }
            set {
                if ((this.AccessLevelIDField.Equals(value) != true)) {
                    this.AccessLevelIDField = value;
                    this.RaisePropertyChanged("AccessLevelID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccessLevelName {
            get {
                return this.AccessLevelNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessLevelNameField, value) != true)) {
                    this.AccessLevelNameField = value;
                    this.RaisePropertyChanged("AccessLevelName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RoleInfo", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.Company")]
    [System.SerializableAttribute()]
    public partial class RoleInfo : Vegam_MaintenanceModule.ipas_CompanyService.Role {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DepartmentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAdminField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyID {
            get {
                return this.CompanyIDField;
            }
            set {
                if ((this.CompanyIDField.Equals(value) != true)) {
                    this.CompanyIDField = value;
                    this.RaisePropertyChanged("CompanyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DepartmentID {
            get {
                return this.DepartmentIDField;
            }
            set {
                if ((this.DepartmentIDField.Equals(value) != true)) {
                    this.DepartmentIDField = value;
                    this.RaisePropertyChanged("DepartmentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAdmin {
            get {
                return this.IsAdminField;
            }
            set {
                if ((this.IsAdminField.Equals(value) != true)) {
                    this.IsAdminField = value;
                    this.RaisePropertyChanged("IsAdmin");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Role", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.Company")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Vegam_MaintenanceModule.ipas_CompanyService.DepartmentRole))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Vegam_MaintenanceModule.ipas_CompanyService.RoleInfo))]
    public partial class Role : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderID {
            get {
                return this.OrderIDField;
            }
            set {
                if ((this.OrderIDField.Equals(value) != true)) {
                    this.OrderIDField = value;
                    this.RaisePropertyChanged("OrderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RoleID {
            get {
                return this.RoleIDField;
            }
            set {
                if ((this.RoleIDField.Equals(value) != true)) {
                    this.RoleIDField = value;
                    this.RaisePropertyChanged("RoleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoleName {
            get {
                return this.RoleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleNameField, value) != true)) {
                    this.RoleNameField = value;
                    this.RaisePropertyChanged("RoleName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DepartmentRole", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.Company")]
    [System.SerializableAttribute()]
    public partial class DepartmentRole : Vegam_MaintenanceModule.ipas_CompanyService.Role {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccessLevelField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccessLevel {
            get {
                return this.AccessLevelField;
            }
            set {
                if ((this.AccessLevelField.Equals(value) != true)) {
                    this.AccessLevelField = value;
                    this.RaisePropertyChanged("AccessLevel");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RoleTaskInfo", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.Company")]
    [System.SerializableAttribute()]
    public partial class RoleTaskInfo : Vegam_MaintenanceModule.ipas_CompanyService.TaskInfo {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccessValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsMasterDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaskCategoryField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccessValue {
            get {
                return this.AccessValueField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessValueField, value) != true)) {
                    this.AccessValueField = value;
                    this.RaisePropertyChanged("AccessValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsMasterData {
            get {
                return this.IsMasterDataField;
            }
            set {
                if ((object.ReferenceEquals(this.IsMasterDataField, value) != true)) {
                    this.IsMasterDataField = value;
                    this.RaisePropertyChanged("IsMasterData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RoleID {
            get {
                return this.RoleIDField;
            }
            set {
                if ((this.RoleIDField.Equals(value) != true)) {
                    this.RoleIDField = value;
                    this.RaisePropertyChanged("RoleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaskCategory {
            get {
                return this.TaskCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.TaskCategoryField, value) != true)) {
                    this.TaskCategoryField = value;
                    this.RaisePropertyChanged("TaskCategory");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TaskInfo", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.Company")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Vegam_MaintenanceModule.ipas_CompanyService.RoleTaskInfo))]
    public partial class TaskInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TaskIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaskNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdNum {
            get {
                return this.IdNumField;
            }
            set {
                if ((this.IdNumField.Equals(value) != true)) {
                    this.IdNumField = value;
                    this.RaisePropertyChanged("IdNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TaskID {
            get {
                return this.TaskIDField;
            }
            set {
                if ((this.TaskIDField.Equals(value) != true)) {
                    this.TaskIDField = value;
                    this.RaisePropertyChanged("TaskID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaskName {
            get {
                return this.TaskNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TaskNameField, value) != true)) {
                    this.TaskNameField = value;
                    this.RaisePropertyChanged("TaskName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DepartmentRolesFilter", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.Company")]
    [System.SerializableAttribute()]
    public partial class DepartmentRolesFilter : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DepartmentIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DepartmentID {
            get {
                return this.DepartmentIDField;
            }
            set {
                if ((this.DepartmentIDField.Equals(value) != true)) {
                    this.DepartmentIDField = value;
                    this.RaisePropertyChanged("DepartmentID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TaskCategoryFilter", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.Company")]
    [System.SerializableAttribute()]
    public partial class TaskCategoryFilter : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccessLevelIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Vegam_MaintenanceModule.ipas_CompanyService.TaskModule TaskModuleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<Vegam_MaintenanceModule.ipas_CompanyService.UserPermissionLevel> UserPermissionLevelField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccessLevelID {
            get {
                return this.AccessLevelIDField;
            }
            set {
                if ((this.AccessLevelIDField.Equals(value) != true)) {
                    this.AccessLevelIDField = value;
                    this.RaisePropertyChanged("AccessLevelID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Vegam_MaintenanceModule.ipas_CompanyService.TaskModule TaskModule {
            get {
                return this.TaskModuleField;
            }
            set {
                if ((this.TaskModuleField.Equals(value) != true)) {
                    this.TaskModuleField = value;
                    this.RaisePropertyChanged("TaskModule");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<Vegam_MaintenanceModule.ipas_CompanyService.UserPermissionLevel> UserPermissionLevel {
            get {
                return this.UserPermissionLevelField;
            }
            set {
                if ((this.UserPermissionLevelField.Equals(value) != true)) {
                    this.UserPermissionLevelField = value;
                    this.RaisePropertyChanged("UserPermissionLevel");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TaskModule", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.Company")]
    public enum TaskModule : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MasterData = 65,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InBound = 73,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Staging = 83,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Manufacture = 77,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Dispatch = 68,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserPermissionLevel", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.Company")]
    public enum UserPermissionLevel : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Region = 82,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Plant = 80,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RoleTasksFilter", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.Company")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Vegam_MaintenanceModule.ipas_CompanyService.RoleTaskAccess))]
    public partial class RoleTasksFilter : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccessLevelIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Vegam_MaintenanceModule.ipas_CompanyService.TaskModule TaskModuleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<Vegam_MaintenanceModule.ipas_CompanyService.UserPermissionLevel> UserPermissionLevelField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccessLevelID {
            get {
                return this.AccessLevelIDField;
            }
            set {
                if ((this.AccessLevelIDField.Equals(value) != true)) {
                    this.AccessLevelIDField = value;
                    this.RaisePropertyChanged("AccessLevelID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RoleID {
            get {
                return this.RoleIDField;
            }
            set {
                if ((this.RoleIDField.Equals(value) != true)) {
                    this.RoleIDField = value;
                    this.RaisePropertyChanged("RoleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Vegam_MaintenanceModule.ipas_CompanyService.TaskModule TaskModule {
            get {
                return this.TaskModuleField;
            }
            set {
                if ((this.TaskModuleField.Equals(value) != true)) {
                    this.TaskModuleField = value;
                    this.RaisePropertyChanged("TaskModule");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<Vegam_MaintenanceModule.ipas_CompanyService.UserPermissionLevel> UserPermissionLevel {
            get {
                return this.UserPermissionLevelField;
            }
            set {
                if ((this.UserPermissionLevelField.Equals(value) != true)) {
                    this.UserPermissionLevelField = value;
                    this.RaisePropertyChanged("UserPermissionLevel");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RoleTaskAccess", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.Company")]
    [System.SerializableAttribute()]
    public partial class RoleTaskAccess : Vegam_MaintenanceModule.ipas_CompanyService.RoleTasksFilter {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccessValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TaskIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccessValue {
            get {
                return this.AccessValueField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessValueField, value) != true)) {
                    this.AccessValueField = value;
                    this.RaisePropertyChanged("AccessValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TaskID {
            get {
                return this.TaskIDField;
            }
            set {
                if ((this.TaskIDField.Equals(value) != true)) {
                    this.TaskIDField = value;
                    this.RaisePropertyChanged("TaskID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompanyTechnologyFilter", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.Company")]
    [System.SerializableAttribute()]
    public partial class CompanyTechnologyFilter : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CategoryTechnologyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryTechnologyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TechnologyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TechnologyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TechnologyNotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CategoryTechnologyID {
            get {
                return this.CategoryTechnologyIDField;
            }
            set {
                if ((this.CategoryTechnologyIDField.Equals(value) != true)) {
                    this.CategoryTechnologyIDField = value;
                    this.RaisePropertyChanged("CategoryTechnologyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryTechnologyName {
            get {
                return this.CategoryTechnologyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryTechnologyNameField, value) != true)) {
                    this.CategoryTechnologyNameField = value;
                    this.RaisePropertyChanged("CategoryTechnologyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyID {
            get {
                return this.CompanyIDField;
            }
            set {
                if ((this.CompanyIDField.Equals(value) != true)) {
                    this.CompanyIDField = value;
                    this.RaisePropertyChanged("CompanyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageIndex {
            get {
                return this.PageIndexField;
            }
            set {
                if ((this.PageIndexField.Equals(value) != true)) {
                    this.PageIndexField = value;
                    this.RaisePropertyChanged("PageIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageSize {
            get {
                return this.PageSizeField;
            }
            set {
                if ((this.PageSizeField.Equals(value) != true)) {
                    this.PageSizeField = value;
                    this.RaisePropertyChanged("PageSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TechnologyID {
            get {
                return this.TechnologyIDField;
            }
            set {
                if ((this.TechnologyIDField.Equals(value) != true)) {
                    this.TechnologyIDField = value;
                    this.RaisePropertyChanged("TechnologyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TechnologyName {
            get {
                return this.TechnologyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TechnologyNameField, value) != true)) {
                    this.TechnologyNameField = value;
                    this.RaisePropertyChanged("TechnologyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TechnologyNotes {
            get {
                return this.TechnologyNotesField;
            }
            set {
                if ((object.ReferenceEquals(this.TechnologyNotesField, value) != true)) {
                    this.TechnologyNotesField = value;
                    this.RaisePropertyChanged("TechnologyNotes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompanyTechnologyList", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.Company")]
    [System.SerializableAttribute()]
    public partial class CompanyTechnologyList : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Vegam_MaintenanceModule.ipas_CompanyService.CompanyTechnologyDetail[] TechnologyListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalRecordsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Vegam_MaintenanceModule.ipas_CompanyService.CompanyTechnologyDetail[] TechnologyList {
            get {
                return this.TechnologyListField;
            }
            set {
                if ((object.ReferenceEquals(this.TechnologyListField, value) != true)) {
                    this.TechnologyListField = value;
                    this.RaisePropertyChanged("TechnologyList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalRecords {
            get {
                return this.TotalRecordsField;
            }
            set {
                if ((this.TotalRecordsField.Equals(value) != true)) {
                    this.TotalRecordsField = value;
                    this.RaisePropertyChanged("TotalRecords");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompanyTechnologyDetail", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.Company")]
    [System.SerializableAttribute()]
    public partial class CompanyTechnologyDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CategoryTechnologyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryTechnologyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SubBusinessUnitIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubBusinessUnitNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TechnologyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TechnologyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TechnologyNotesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CategoryTechnologyID {
            get {
                return this.CategoryTechnologyIDField;
            }
            set {
                if ((this.CategoryTechnologyIDField.Equals(value) != true)) {
                    this.CategoryTechnologyIDField = value;
                    this.RaisePropertyChanged("CategoryTechnologyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryTechnologyName {
            get {
                return this.CategoryTechnologyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryTechnologyNameField, value) != true)) {
                    this.CategoryTechnologyNameField = value;
                    this.RaisePropertyChanged("CategoryTechnologyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SubBusinessUnitID {
            get {
                return this.SubBusinessUnitIDField;
            }
            set {
                if ((this.SubBusinessUnitIDField.Equals(value) != true)) {
                    this.SubBusinessUnitIDField = value;
                    this.RaisePropertyChanged("SubBusinessUnitID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubBusinessUnitName {
            get {
                return this.SubBusinessUnitNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SubBusinessUnitNameField, value) != true)) {
                    this.SubBusinessUnitNameField = value;
                    this.RaisePropertyChanged("SubBusinessUnitName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TechnologyID {
            get {
                return this.TechnologyIDField;
            }
            set {
                if ((this.TechnologyIDField.Equals(value) != true)) {
                    this.TechnologyIDField = value;
                    this.RaisePropertyChanged("TechnologyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TechnologyName {
            get {
                return this.TechnologyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TechnologyNameField, value) != true)) {
                    this.TechnologyNameField = value;
                    this.RaisePropertyChanged("TechnologyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TechnologyNotes {
            get {
                return this.TechnologyNotesField;
            }
            set {
                if ((object.ReferenceEquals(this.TechnologyNotesField, value) != true)) {
                    this.TechnologyNotesField = value;
                    this.RaisePropertyChanged("TechnologyNotes");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CategoryTechnologyFilter", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.Company")]
    [System.SerializableAttribute()]
    public partial class CategoryTechnologyFilter : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageSizeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CategoryID {
            get {
                return this.CategoryIDField;
            }
            set {
                if ((this.CategoryIDField.Equals(value) != true)) {
                    this.CategoryIDField = value;
                    this.RaisePropertyChanged("CategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryName {
            get {
                return this.CategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryNameField, value) != true)) {
                    this.CategoryNameField = value;
                    this.RaisePropertyChanged("CategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyID {
            get {
                return this.CompanyIDField;
            }
            set {
                if ((this.CompanyIDField.Equals(value) != true)) {
                    this.CompanyIDField = value;
                    this.RaisePropertyChanged("CompanyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageIndex {
            get {
                return this.PageIndexField;
            }
            set {
                if ((this.PageIndexField.Equals(value) != true)) {
                    this.PageIndexField = value;
                    this.RaisePropertyChanged("PageIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageSize {
            get {
                return this.PageSizeField;
            }
            set {
                if ((this.PageSizeField.Equals(value) != true)) {
                    this.PageSizeField = value;
                    this.RaisePropertyChanged("PageSize");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CategoryTechnologyList", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.Company")]
    [System.SerializableAttribute()]
    public partial class CategoryTechnologyList : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Vegam_MaintenanceModule.ipas_CompanyService.CategoryTechnology[] CategoryTechnologylistField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalRecordsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Vegam_MaintenanceModule.ipas_CompanyService.CategoryTechnology[] CategoryTechnologylist {
            get {
                return this.CategoryTechnologylistField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryTechnologylistField, value) != true)) {
                    this.CategoryTechnologylistField = value;
                    this.RaisePropertyChanged("CategoryTechnologylist");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalRecords {
            get {
                return this.TotalRecordsField;
            }
            set {
                if ((this.TotalRecordsField.Equals(value) != true)) {
                    this.TotalRecordsField = value;
                    this.RaisePropertyChanged("TotalRecords");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CategoryTechnology", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.Company")]
    [System.SerializableAttribute()]
    public partial class CategoryTechnology : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CategoryID {
            get {
                return this.CategoryIDField;
            }
            set {
                if ((this.CategoryIDField.Equals(value) != true)) {
                    this.CategoryIDField = value;
                    this.RaisePropertyChanged("CategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryName {
            get {
                return this.CategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryNameField, value) != true)) {
                    this.CategoryNameField = value;
                    this.RaisePropertyChanged("CategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyID {
            get {
                return this.CompanyIDField;
            }
            set {
                if ((this.CompanyIDField.Equals(value) != true)) {
                    this.CompanyIDField = value;
                    this.RaisePropertyChanged("CompanyID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Language", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.Company")]
    [System.SerializableAttribute()]
    public partial class Language : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LanguageCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LanguageIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LanguageNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LanguageValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LanguageCode {
            get {
                return this.LanguageCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.LanguageCodeField, value) != true)) {
                    this.LanguageCodeField = value;
                    this.RaisePropertyChanged("LanguageCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LanguageID {
            get {
                return this.LanguageIDField;
            }
            set {
                if ((this.LanguageIDField.Equals(value) != true)) {
                    this.LanguageIDField = value;
                    this.RaisePropertyChanged("LanguageID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LanguageName {
            get {
                return this.LanguageNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LanguageNameField, value) != true)) {
                    this.LanguageNameField = value;
                    this.RaisePropertyChanged("LanguageName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LanguageValue {
            get {
                return this.LanguageValueField;
            }
            set {
                if ((object.ReferenceEquals(this.LanguageValueField, value) != true)) {
                    this.LanguageValueField = value;
                    this.RaisePropertyChanged("LanguageValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CountryFilter", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.Company")]
    [System.SerializableAttribute()]
    public partial class CountryFilter : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageStartIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RegionIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryName {
            get {
                return this.CountryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryNameField, value) != true)) {
                    this.CountryNameField = value;
                    this.RaisePropertyChanged("CountryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageSize {
            get {
                return this.PageSizeField;
            }
            set {
                if ((this.PageSizeField.Equals(value) != true)) {
                    this.PageSizeField = value;
                    this.RaisePropertyChanged("PageSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageStartIndex {
            get {
                return this.PageStartIndexField;
            }
            set {
                if ((this.PageStartIndexField.Equals(value) != true)) {
                    this.PageStartIndexField = value;
                    this.RaisePropertyChanged("PageStartIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RegionID {
            get {
                return this.RegionIDField;
            }
            set {
                if ((this.RegionIDField.Equals(value) != true)) {
                    this.RegionIDField = value;
                    this.RaisePropertyChanged("RegionID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CountryDetails", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.Company")]
    [System.SerializableAttribute()]
    public partial class CountryDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Vegam_MaintenanceModule.ipas_CompanyService.Country[] CountryListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalRecordsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Vegam_MaintenanceModule.ipas_CompanyService.Country[] CountryList {
            get {
                return this.CountryListField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryListField, value) != true)) {
                    this.CountryListField = value;
                    this.RaisePropertyChanged("CountryList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalRecords {
            get {
                return this.TotalRecordsField;
            }
            set {
                if ((this.TotalRecordsField.Equals(value) != true)) {
                    this.TotalRecordsField = value;
                    this.RaisePropertyChanged("TotalRecords");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Country", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.Company")]
    [System.SerializableAttribute()]
    public partial class Country : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LanguageIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LanguageNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RegionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegionNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyID {
            get {
                return this.CompanyIDField;
            }
            set {
                if ((this.CompanyIDField.Equals(value) != true)) {
                    this.CompanyIDField = value;
                    this.RaisePropertyChanged("CompanyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryCode {
            get {
                return this.CountryCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryCodeField, value) != true)) {
                    this.CountryCodeField = value;
                    this.RaisePropertyChanged("CountryCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CountryID {
            get {
                return this.CountryIDField;
            }
            set {
                if ((this.CountryIDField.Equals(value) != true)) {
                    this.CountryIDField = value;
                    this.RaisePropertyChanged("CountryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryName {
            get {
                return this.CountryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryNameField, value) != true)) {
                    this.CountryNameField = value;
                    this.RaisePropertyChanged("CountryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LanguageID {
            get {
                return this.LanguageIDField;
            }
            set {
                if ((this.LanguageIDField.Equals(value) != true)) {
                    this.LanguageIDField = value;
                    this.RaisePropertyChanged("LanguageID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LanguageName {
            get {
                return this.LanguageNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LanguageNameField, value) != true)) {
                    this.LanguageNameField = value;
                    this.RaisePropertyChanged("LanguageName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RegionID {
            get {
                return this.RegionIDField;
            }
            set {
                if ((this.RegionIDField.Equals(value) != true)) {
                    this.RegionIDField = value;
                    this.RaisePropertyChanged("RegionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegionName {
            get {
                return this.RegionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionNameField, value) != true)) {
                    this.RegionNameField = value;
                    this.RaisePropertyChanged("RegionName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CountryRegion", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.Company")]
    [System.SerializableAttribute()]
    public partial class CountryRegion : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RegionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegionNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RegionID {
            get {
                return this.RegionIDField;
            }
            set {
                if ((this.RegionIDField.Equals(value) != true)) {
                    this.RegionIDField = value;
                    this.RaisePropertyChanged("RegionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegionName {
            get {
                return this.RegionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionNameField, value) != true)) {
                    this.RegionNameField = value;
                    this.RaisePropertyChanged("RegionName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RegionFilter", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.Company")]
    [System.SerializableAttribute()]
    public partial class RegionFilter : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageStartIndexField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyID {
            get {
                return this.CompanyIDField;
            }
            set {
                if ((this.CompanyIDField.Equals(value) != true)) {
                    this.CompanyIDField = value;
                    this.RaisePropertyChanged("CompanyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageSize {
            get {
                return this.PageSizeField;
            }
            set {
                if ((this.PageSizeField.Equals(value) != true)) {
                    this.PageSizeField = value;
                    this.RaisePropertyChanged("PageSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageStartIndex {
            get {
                return this.PageStartIndexField;
            }
            set {
                if ((this.PageStartIndexField.Equals(value) != true)) {
                    this.PageStartIndexField = value;
                    this.RaisePropertyChanged("PageStartIndex");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RegionDetails", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.Company")]
    [System.SerializableAttribute()]
    public partial class RegionDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Vegam_MaintenanceModule.ipas_CompanyService.Region[] RegionListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalRecordsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Vegam_MaintenanceModule.ipas_CompanyService.Region[] RegionList {
            get {
                return this.RegionListField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionListField, value) != true)) {
                    this.RegionListField = value;
                    this.RaisePropertyChanged("RegionList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalRecords {
            get {
                return this.TotalRecordsField;
            }
            set {
                if ((this.TotalRecordsField.Equals(value) != true)) {
                    this.TotalRecordsField = value;
                    this.RaisePropertyChanged("TotalRecords");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Region", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.Company")]
    [System.SerializableAttribute()]
    public partial class Region : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegionCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RegionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegionNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyID {
            get {
                return this.CompanyIDField;
            }
            set {
                if ((this.CompanyIDField.Equals(value) != true)) {
                    this.CompanyIDField = value;
                    this.RaisePropertyChanged("CompanyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegionCode {
            get {
                return this.RegionCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionCodeField, value) != true)) {
                    this.RegionCodeField = value;
                    this.RaisePropertyChanged("RegionCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RegionID {
            get {
                return this.RegionIDField;
            }
            set {
                if ((this.RegionIDField.Equals(value) != true)) {
                    this.RegionIDField = value;
                    this.RaisePropertyChanged("RegionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegionName {
            get {
                return this.RegionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionNameField, value) != true)) {
                    this.RegionNameField = value;
                    this.RaisePropertyChanged("RegionName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompanySiteList", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.UserInfo")]
    [System.SerializableAttribute()]
    public partial class CompanySiteList : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Vegam_MaintenanceModule.ipas_CompanyService.CompanySites[] CompanySitesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DefaultSiteField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Vegam_MaintenanceModule.ipas_CompanyService.CompanySites[] CompanySites {
            get {
                return this.CompanySitesField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanySitesField, value) != true)) {
                    this.CompanySitesField = value;
                    this.RaisePropertyChanged("CompanySites");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DefaultSite {
            get {
                return this.DefaultSiteField;
            }
            set {
                if ((object.ReferenceEquals(this.DefaultSiteField, value) != true)) {
                    this.DefaultSiteField = value;
                    this.RaisePropertyChanged("DefaultSite");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompanySites", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.UserInfo")]
    [System.SerializableAttribute()]
    public partial class CompanySites : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SiteIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SiteNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SiteID {
            get {
                return this.SiteIDField;
            }
            set {
                if ((this.SiteIDField.Equals(value) != true)) {
                    this.SiteIDField = value;
                    this.RaisePropertyChanged("SiteID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SiteName {
            get {
                return this.SiteNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SiteNameField, value) != true)) {
                    this.SiteNameField = value;
                    this.RaisePropertyChanged("SiteName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DefaultSiteUpdateInfo", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.UserInfo")]
    [System.SerializableAttribute()]
    public partial class DefaultSiteUpdateInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RowsUpdatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Vegam_MaintenanceModule.ipas_CompanyService.SiteType SiteTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RowsUpdated {
            get {
                return this.RowsUpdatedField;
            }
            set {
                if ((this.RowsUpdatedField.Equals(value) != true)) {
                    this.RowsUpdatedField = value;
                    this.RaisePropertyChanged("RowsUpdated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Vegam_MaintenanceModule.ipas_CompanyService.SiteType SiteType {
            get {
                return this.SiteTypeField;
            }
            set {
                if ((this.SiteTypeField.Equals(value) != true)) {
                    this.SiteTypeField = value;
                    this.RaisePropertyChanged("SiteType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SiteType", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.Site")]
    public enum SiteType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Normal_Plant = 80,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Vendor_Plant = 86,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DownTimeCategoryDepartment", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.Plant")]
    [System.SerializableAttribute()]
    public partial class DownTimeCategoryDepartment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] DepartmentNameListField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CategoryID {
            get {
                return this.CategoryIDField;
            }
            set {
                if ((this.CategoryIDField.Equals(value) != true)) {
                    this.CategoryIDField = value;
                    this.RaisePropertyChanged("CategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] DepartmentNameList {
            get {
                return this.DepartmentNameListField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartmentNameListField, value) != true)) {
                    this.DepartmentNameListField = value;
                    this.RaisePropertyChanged("DepartmentNameList");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompanyDownTimeFilter", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.Plant")]
    [System.SerializableAttribute()]
    public partial class CompanyDownTimeFilter : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DownTimeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<Vegam_MaintenanceModule.ipas_CompanyService.DownTimeType> DownTimeTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageSizeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CategoryID {
            get {
                return this.CategoryIDField;
            }
            set {
                if ((this.CategoryIDField.Equals(value) != true)) {
                    this.CategoryIDField = value;
                    this.RaisePropertyChanged("CategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DownTimeName {
            get {
                return this.DownTimeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DownTimeNameField, value) != true)) {
                    this.DownTimeNameField = value;
                    this.RaisePropertyChanged("DownTimeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<Vegam_MaintenanceModule.ipas_CompanyService.DownTimeType> DownTimeType {
            get {
                return this.DownTimeTypeField;
            }
            set {
                if ((this.DownTimeTypeField.Equals(value) != true)) {
                    this.DownTimeTypeField = value;
                    this.RaisePropertyChanged("DownTimeType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageIndex {
            get {
                return this.PageIndexField;
            }
            set {
                if ((this.PageIndexField.Equals(value) != true)) {
                    this.PageIndexField = value;
                    this.RaisePropertyChanged("PageIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageSize {
            get {
                return this.PageSizeField;
            }
            set {
                if ((this.PageSizeField.Equals(value) != true)) {
                    this.PageSizeField = value;
                    this.RaisePropertyChanged("PageSize");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DownTimeType", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.Plant")]
    public enum DownTimeType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Planned_DownTime = 80,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UnPlannedDownTime = 85,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompanyCategoryDownTimeInfo", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.Plant")]
    [System.SerializableAttribute()]
    public partial class CompanyCategoryDownTimeInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Vegam_MaintenanceModule.ipas_CompanyService.CompanyCategoryDownTime[] CompanyDownTimeCategoryListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalRecordsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Vegam_MaintenanceModule.ipas_CompanyService.CompanyCategoryDownTime[] CompanyDownTimeCategoryList {
            get {
                return this.CompanyDownTimeCategoryListField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyDownTimeCategoryListField, value) != true)) {
                    this.CompanyDownTimeCategoryListField = value;
                    this.RaisePropertyChanged("CompanyDownTimeCategoryList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalRecords {
            get {
                return this.TotalRecordsField;
            }
            set {
                if ((this.TotalRecordsField.Equals(value) != true)) {
                    this.TotalRecordsField = value;
                    this.RaisePropertyChanged("TotalRecords");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompanyCategoryDownTime", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.Plant")]
    [System.SerializableAttribute()]
    public partial class CompanyCategoryDownTime : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Vegam_MaintenanceModule.ipas_CompanyService.DownTime[] CompanyDownTimeListField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Vegam_MaintenanceModule.ipas_CompanyService.DownTime[] CompanyDownTimeList {
            get {
                return this.CompanyDownTimeListField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyDownTimeListField, value) != true)) {
                    this.CompanyDownTimeListField = value;
                    this.RaisePropertyChanged("CompanyDownTimeList");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DownTime", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.Plant")]
    [System.SerializableAttribute()]
    public partial class DownTime : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DownTimeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Vegam_MaintenanceModule.ipas_CompanyService.DownTimeDescription[] DownTimeDescriptionListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DownTimeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DownTimeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DownTimeParentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<Vegam_MaintenanceModule.ipas_CompanyService.DownTimeType> DownTimeTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OEEIrrelevantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<Vegam_MaintenanceModule.ipas_CompanyService.OEECategory> OeeCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<Vegam_MaintenanceModule.ipas_CompanyService.SpecialDowntimeType> SpecialDowntimeTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CategoryID {
            get {
                return this.CategoryIDField;
            }
            set {
                if ((this.CategoryIDField.Equals(value) != true)) {
                    this.CategoryIDField = value;
                    this.RaisePropertyChanged("CategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DownTimeCode {
            get {
                return this.DownTimeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.DownTimeCodeField, value) != true)) {
                    this.DownTimeCodeField = value;
                    this.RaisePropertyChanged("DownTimeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Vegam_MaintenanceModule.ipas_CompanyService.DownTimeDescription[] DownTimeDescriptionList {
            get {
                return this.DownTimeDescriptionListField;
            }
            set {
                if ((object.ReferenceEquals(this.DownTimeDescriptionListField, value) != true)) {
                    this.DownTimeDescriptionListField = value;
                    this.RaisePropertyChanged("DownTimeDescriptionList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DownTimeID {
            get {
                return this.DownTimeIDField;
            }
            set {
                if ((this.DownTimeIDField.Equals(value) != true)) {
                    this.DownTimeIDField = value;
                    this.RaisePropertyChanged("DownTimeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DownTimeName {
            get {
                return this.DownTimeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DownTimeNameField, value) != true)) {
                    this.DownTimeNameField = value;
                    this.RaisePropertyChanged("DownTimeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DownTimeParentID {
            get {
                return this.DownTimeParentIDField;
            }
            set {
                if ((this.DownTimeParentIDField.Equals(value) != true)) {
                    this.DownTimeParentIDField = value;
                    this.RaisePropertyChanged("DownTimeParentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<Vegam_MaintenanceModule.ipas_CompanyService.DownTimeType> DownTimeType {
            get {
                return this.DownTimeTypeField;
            }
            set {
                if ((this.DownTimeTypeField.Equals(value) != true)) {
                    this.DownTimeTypeField = value;
                    this.RaisePropertyChanged("DownTimeType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OEEIrrelevant {
            get {
                return this.OEEIrrelevantField;
            }
            set {
                if ((this.OEEIrrelevantField.Equals(value) != true)) {
                    this.OEEIrrelevantField = value;
                    this.RaisePropertyChanged("OEEIrrelevant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<Vegam_MaintenanceModule.ipas_CompanyService.OEECategory> OeeCategory {
            get {
                return this.OeeCategoryField;
            }
            set {
                if ((this.OeeCategoryField.Equals(value) != true)) {
                    this.OeeCategoryField = value;
                    this.RaisePropertyChanged("OeeCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<Vegam_MaintenanceModule.ipas_CompanyService.SpecialDowntimeType> SpecialDowntimeType {
            get {
                return this.SpecialDowntimeTypeField;
            }
            set {
                if ((this.SpecialDowntimeTypeField.Equals(value) != true)) {
                    this.SpecialDowntimeTypeField = value;
                    this.RaisePropertyChanged("SpecialDowntimeType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DownTimeDescription", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.Plant")]
    [System.SerializableAttribute()]
    public partial class DownTimeDescription : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DownTimeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LanguageIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LanguageNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DownTimeName {
            get {
                return this.DownTimeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DownTimeNameField, value) != true)) {
                    this.DownTimeNameField = value;
                    this.RaisePropertyChanged("DownTimeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LanguageID {
            get {
                return this.LanguageIDField;
            }
            set {
                if ((this.LanguageIDField.Equals(value) != true)) {
                    this.LanguageIDField = value;
                    this.RaisePropertyChanged("LanguageID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LanguageName {
            get {
                return this.LanguageNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LanguageNameField, value) != true)) {
                    this.LanguageNameField = value;
                    this.RaisePropertyChanged("LanguageName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OEECategory", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.Plant")]
    public enum OEECategory : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Availability_Index = 65,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Performance_Index = 80,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SpecialDowntimeType", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.Plant")]
    public enum SpecialDowntimeType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangeOver = 67,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TPM = 84,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Holiday = 72,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PreparationTime = 80,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RushOrder = 82,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EndOfShift = 69,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LackOfResource = 76,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 85,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoDemand = 79,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DownTimeCategory", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.Plant")]
    [System.SerializableAttribute()]
    public partial class DownTimeCategory : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Vegam_MaintenanceModule.ipas_CompanyService.DownTimeDescription[] CategoryDescriptionListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] DepartmentIDListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] DepartmentListField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Vegam_MaintenanceModule.ipas_CompanyService.DownTimeDescription[] CategoryDescriptionList {
            get {
                return this.CategoryDescriptionListField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryDescriptionListField, value) != true)) {
                    this.CategoryDescriptionListField = value;
                    this.RaisePropertyChanged("CategoryDescriptionList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CategoryID {
            get {
                return this.CategoryIDField;
            }
            set {
                if ((this.CategoryIDField.Equals(value) != true)) {
                    this.CategoryIDField = value;
                    this.RaisePropertyChanged("CategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] DepartmentIDList {
            get {
                return this.DepartmentIDListField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartmentIDListField, value) != true)) {
                    this.DepartmentIDListField = value;
                    this.RaisePropertyChanged("DepartmentIDList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] DepartmentList {
            get {
                return this.DepartmentListField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartmentListField, value) != true)) {
                    this.DepartmentListField = value;
                    this.RaisePropertyChanged("DepartmentList");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BasicUserInfo", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.UserInfo")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Vegam_MaintenanceModule.ipas_CompanyService.UserBasicInfo))]
    public partial class BasicUserInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccessLevelIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DefaultSiteAccessLevelIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmployeeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LanguageIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProfileImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RegionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SiteIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Vegam_MaintenanceModule.ipas_CompanyService.UserLogType UserStatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccessLevelID {
            get {
                return this.AccessLevelIDField;
            }
            set {
                if ((this.AccessLevelIDField.Equals(value) != true)) {
                    this.AccessLevelIDField = value;
                    this.RaisePropertyChanged("AccessLevelID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyID {
            get {
                return this.CompanyIDField;
            }
            set {
                if ((this.CompanyIDField.Equals(value) != true)) {
                    this.CompanyIDField = value;
                    this.RaisePropertyChanged("CompanyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CountryID {
            get {
                return this.CountryIDField;
            }
            set {
                if ((this.CountryIDField.Equals(value) != true)) {
                    this.CountryIDField = value;
                    this.RaisePropertyChanged("CountryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DefaultSiteAccessLevelID {
            get {
                return this.DefaultSiteAccessLevelIDField;
            }
            set {
                if ((this.DefaultSiteAccessLevelIDField.Equals(value) != true)) {
                    this.DefaultSiteAccessLevelIDField = value;
                    this.RaisePropertyChanged("DefaultSiteAccessLevelID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailAddress {
            get {
                return this.EmailAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailAddressField, value) != true)) {
                    this.EmailAddressField = value;
                    this.RaisePropertyChanged("EmailAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmployeeID {
            get {
                return this.EmployeeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.EmployeeIDField, value) != true)) {
                    this.EmployeeIDField = value;
                    this.RaisePropertyChanged("EmployeeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LanguageID {
            get {
                return this.LanguageIDField;
            }
            set {
                if ((this.LanguageIDField.Equals(value) != true)) {
                    this.LanguageIDField = value;
                    this.RaisePropertyChanged("LanguageID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoginName {
            get {
                return this.LoginNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginNameField, value) != true)) {
                    this.LoginNameField = value;
                    this.RaisePropertyChanged("LoginName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProfileImage {
            get {
                return this.ProfileImageField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfileImageField, value) != true)) {
                    this.ProfileImageField = value;
                    this.RaisePropertyChanged("ProfileImage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RegionID {
            get {
                return this.RegionIDField;
            }
            set {
                if ((this.RegionIDField.Equals(value) != true)) {
                    this.RegionIDField = value;
                    this.RaisePropertyChanged("RegionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SiteID {
            get {
                return this.SiteIDField;
            }
            set {
                if ((this.SiteIDField.Equals(value) != true)) {
                    this.SiteIDField = value;
                    this.RaisePropertyChanged("SiteID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Vegam_MaintenanceModule.ipas_CompanyService.UserLogType UserStatus {
            get {
                return this.UserStatusField;
            }
            set {
                if ((this.UserStatusField.Equals(value) != true)) {
                    this.UserStatusField = value;
                    this.RaisePropertyChanged("UserStatus");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserBasicInfo", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.UserInfo")]
    [System.SerializableAttribute()]
    public partial class UserBasicInfo : Vegam_MaintenanceModule.ipas_CompanyService.BasicUserInfo {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DepartmentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DepartmentNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsFromPlantUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Vegam_MaintenanceModule.ipas_CompanyService.SiteWiseRole[] SiteWiseDepartmentRoleListField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DepartmentID {
            get {
                return this.DepartmentIDField;
            }
            set {
                if ((this.DepartmentIDField.Equals(value) != true)) {
                    this.DepartmentIDField = value;
                    this.RaisePropertyChanged("DepartmentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DepartmentName {
            get {
                return this.DepartmentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartmentNameField, value) != true)) {
                    this.DepartmentNameField = value;
                    this.RaisePropertyChanged("DepartmentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsFromPlantUser {
            get {
                return this.IsFromPlantUserField;
            }
            set {
                if ((this.IsFromPlantUserField.Equals(value) != true)) {
                    this.IsFromPlantUserField = value;
                    this.RaisePropertyChanged("IsFromPlantUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Vegam_MaintenanceModule.ipas_CompanyService.SiteWiseRole[] SiteWiseDepartmentRoleList {
            get {
                return this.SiteWiseDepartmentRoleListField;
            }
            set {
                if ((object.ReferenceEquals(this.SiteWiseDepartmentRoleListField, value) != true)) {
                    this.SiteWiseDepartmentRoleListField = value;
                    this.RaisePropertyChanged("SiteWiseDepartmentRoleList");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserLogType", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.UserInfo")]
    public enum UserLogType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Success = 83,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Failure = 70,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Lock = 76,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unlock = 85,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Active = 65,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InActive = 73,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SiteWiseRole", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.UserInfo")]
    [System.SerializableAttribute()]
    public partial class SiteWiseRole : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Vegam_MaintenanceModule.ipas_CompanyService.SiteBasisRole[] SiteBasisRoleListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SiteIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SiteNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Vegam_MaintenanceModule.ipas_CompanyService.SiteBasisRole[] SiteBasisRoleList {
            get {
                return this.SiteBasisRoleListField;
            }
            set {
                if ((object.ReferenceEquals(this.SiteBasisRoleListField, value) != true)) {
                    this.SiteBasisRoleListField = value;
                    this.RaisePropertyChanged("SiteBasisRoleList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SiteID {
            get {
                return this.SiteIDField;
            }
            set {
                if ((this.SiteIDField.Equals(value) != true)) {
                    this.SiteIDField = value;
                    this.RaisePropertyChanged("SiteID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SiteName {
            get {
                return this.SiteNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SiteNameField, value) != true)) {
                    this.SiteNameField = value;
                    this.RaisePropertyChanged("SiteName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SiteBasisRole", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.UserInfo")]
    [System.SerializableAttribute()]
    public partial class SiteBasisRole : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RoleID {
            get {
                return this.RoleIDField;
            }
            set {
                if ((this.RoleIDField.Equals(value) != true)) {
                    this.RoleIDField = value;
                    this.RaisePropertyChanged("RoleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoleName {
            get {
                return this.RoleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleNameField, value) != true)) {
                    this.RoleNameField = value;
                    this.RaisePropertyChanged("RoleName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SiteRoleInfo", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.UserInfo")]
    [System.SerializableAttribute()]
    public partial class SiteRoleInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SiteNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] SiteWiseRoleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SiteName {
            get {
                return this.SiteNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SiteNameField, value) != true)) {
                    this.SiteNameField = value;
                    this.RaisePropertyChanged("SiteName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] SiteWiseRole {
            get {
                return this.SiteWiseRoleField;
            }
            set {
                if ((object.ReferenceEquals(this.SiteWiseRoleField, value) != true)) {
                    this.SiteWiseRoleField = value;
                    this.RaisePropertyChanged("SiteWiseRole");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BasicInfo", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.UserInfo")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Vegam_MaintenanceModule.ipas_CompanyService.DepartmentRolesInfo))]
    public partial class BasicInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccessLevelIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LanguageCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SiteIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccessLevelID {
            get {
                return this.AccessLevelIDField;
            }
            set {
                if ((this.AccessLevelIDField.Equals(value) != true)) {
                    this.AccessLevelIDField = value;
                    this.RaisePropertyChanged("AccessLevelID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LanguageCode {
            get {
                return this.LanguageCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.LanguageCodeField, value) != true)) {
                    this.LanguageCodeField = value;
                    this.RaisePropertyChanged("LanguageCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SiteID {
            get {
                return this.SiteIDField;
            }
            set {
                if ((this.SiteIDField.Equals(value) != true)) {
                    this.SiteIDField = value;
                    this.RaisePropertyChanged("SiteID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DepartmentRolesInfo", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.Company")]
    [System.SerializableAttribute()]
    public partial class DepartmentRolesInfo : Vegam_MaintenanceModule.ipas_CompanyService.BasicInfo {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DepartmentIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyID {
            get {
                return this.CompanyIDField;
            }
            set {
                if ((this.CompanyIDField.Equals(value) != true)) {
                    this.CompanyIDField = value;
                    this.RaisePropertyChanged("CompanyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DepartmentID {
            get {
                return this.DepartmentIDField;
            }
            set {
                if ((this.DepartmentIDField.Equals(value) != true)) {
                    this.DepartmentIDField = value;
                    this.RaisePropertyChanged("DepartmentID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PlantLevelRoles", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.UserInfo")]
    [System.SerializableAttribute()]
    public partial class PlantLevelRoles : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccessLevelIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserRoleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccessLevelID {
            get {
                return this.AccessLevelIDField;
            }
            set {
                if ((this.AccessLevelIDField.Equals(value) != true)) {
                    this.AccessLevelIDField = value;
                    this.RaisePropertyChanged("AccessLevelID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RoleID {
            get {
                return this.RoleIDField;
            }
            set {
                if ((this.RoleIDField.Equals(value) != true)) {
                    this.RoleIDField = value;
                    this.RaisePropertyChanged("RoleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoleName {
            get {
                return this.RoleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleNameField, value) != true)) {
                    this.RoleNameField = value;
                    this.RaisePropertyChanged("RoleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserRole {
            get {
                return this.UserRoleField;
            }
            set {
                if ((this.UserRoleField.Equals(value) != true)) {
                    this.UserRoleField = value;
                    this.RaisePropertyChanged("UserRole");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CountryInfo", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.Company")]
    [System.SerializableAttribute()]
    public partial class CountryInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RegionIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CountryID {
            get {
                return this.CountryIDField;
            }
            set {
                if ((this.CountryIDField.Equals(value) != true)) {
                    this.CountryIDField = value;
                    this.RaisePropertyChanged("CountryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryName {
            get {
                return this.CountryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryNameField, value) != true)) {
                    this.CountryNameField = value;
                    this.RaisePropertyChanged("CountryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RegionID {
            get {
                return this.RegionIDField;
            }
            set {
                if ((this.RegionIDField.Equals(value) != true)) {
                    this.RegionIDField = value;
                    this.RaisePropertyChanged("RegionID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SiteInformation", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.UserInfo")]
    [System.SerializableAttribute()]
    public partial class SiteInformation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RegionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SiteIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SiteNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyID {
            get {
                return this.CompanyIDField;
            }
            set {
                if ((this.CompanyIDField.Equals(value) != true)) {
                    this.CompanyIDField = value;
                    this.RaisePropertyChanged("CompanyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CountryID {
            get {
                return this.CountryIDField;
            }
            set {
                if ((this.CountryIDField.Equals(value) != true)) {
                    this.CountryIDField = value;
                    this.RaisePropertyChanged("CountryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RegionID {
            get {
                return this.RegionIDField;
            }
            set {
                if ((this.RegionIDField.Equals(value) != true)) {
                    this.RegionIDField = value;
                    this.RaisePropertyChanged("RegionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SiteID {
            get {
                return this.SiteIDField;
            }
            set {
                if ((this.SiteIDField.Equals(value) != true)) {
                    this.SiteIDField = value;
                    this.RaisePropertyChanged("SiteID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SiteName {
            get {
                return this.SiteNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SiteNameField, value) != true)) {
                    this.SiteNameField = value;
                    this.RaisePropertyChanged("SiteName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PasswordFilter", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.Company")]
    [System.SerializableAttribute()]
    public partial class PasswordFilter : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private bool ConsiderGlobalPwdIfNotInSiteField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool ConsiderGlobalPwdIfNotInSite {
            get {
                return this.ConsiderGlobalPwdIfNotInSiteField;
            }
            set {
                if ((this.ConsiderGlobalPwdIfNotInSiteField.Equals(value) != true)) {
                    this.ConsiderGlobalPwdIfNotInSiteField = value;
                    this.RaisePropertyChanged("ConsiderGlobalPwdIfNotInSite");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PasswordPolicy", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.Company")]
    [System.SerializableAttribute()]
    public partial class PasswordPolicy : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompNewPwdWithOldPwdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableUserCredentialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MinPwdlengthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PwdChangeDurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PwdContainDigitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PwdContainLetterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PwdContainSplCharacterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserLockCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompNewPwdWithOldPwd {
            get {
                return this.CompNewPwdWithOldPwdField;
            }
            set {
                if ((this.CompNewPwdWithOldPwdField.Equals(value) != true)) {
                    this.CompNewPwdWithOldPwdField = value;
                    this.RaisePropertyChanged("CompNewPwdWithOldPwd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableUserCredential {
            get {
                return this.EnableUserCredentialField;
            }
            set {
                if ((this.EnableUserCredentialField.Equals(value) != true)) {
                    this.EnableUserCredentialField = value;
                    this.RaisePropertyChanged("EnableUserCredential");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MinPwdlength {
            get {
                return this.MinPwdlengthField;
            }
            set {
                if ((this.MinPwdlengthField.Equals(value) != true)) {
                    this.MinPwdlengthField = value;
                    this.RaisePropertyChanged("MinPwdlength");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PwdChangeDuration {
            get {
                return this.PwdChangeDurationField;
            }
            set {
                if ((this.PwdChangeDurationField.Equals(value) != true)) {
                    this.PwdChangeDurationField = value;
                    this.RaisePropertyChanged("PwdChangeDuration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PwdContainDigit {
            get {
                return this.PwdContainDigitField;
            }
            set {
                if ((this.PwdContainDigitField.Equals(value) != true)) {
                    this.PwdContainDigitField = value;
                    this.RaisePropertyChanged("PwdContainDigit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PwdContainLetter {
            get {
                return this.PwdContainLetterField;
            }
            set {
                if ((this.PwdContainLetterField.Equals(value) != true)) {
                    this.PwdContainLetterField = value;
                    this.RaisePropertyChanged("PwdContainLetter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PwdContainSplCharacter {
            get {
                return this.PwdContainSplCharacterField;
            }
            set {
                if ((this.PwdContainSplCharacterField.Equals(value) != true)) {
                    this.PwdContainSplCharacterField = value;
                    this.RaisePropertyChanged("PwdContainSplCharacter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserLockCount {
            get {
                return this.UserLockCountField;
            }
            set {
                if ((this.UserLockCountField.Equals(value) != true)) {
                    this.UserLockCountField = value;
                    this.RaisePropertyChanged("UserLockCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BusinessUnit", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.Company")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Vegam_MaintenanceModule.ipas_CompanyService.BusinessUnitDetails))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Vegam_MaintenanceModule.ipas_CompanyService.SubBusinessUnit))]
    public partial class BusinessUnit : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BusinessUnitIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BusinessUnitNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BusinessUnitID {
            get {
                return this.BusinessUnitIDField;
            }
            set {
                if ((this.BusinessUnitIDField.Equals(value) != true)) {
                    this.BusinessUnitIDField = value;
                    this.RaisePropertyChanged("BusinessUnitID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BusinessUnitName {
            get {
                return this.BusinessUnitNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BusinessUnitNameField, value) != true)) {
                    this.BusinessUnitNameField = value;
                    this.RaisePropertyChanged("BusinessUnitName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BusinessUnitDetails", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.Company")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Vegam_MaintenanceModule.ipas_CompanyService.SubBusinessUnit))]
    public partial class BusinessUnitDetails : Vegam_MaintenanceModule.ipas_CompanyService.BusinessUnit {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SubBusinessUnit", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.Company")]
    [System.SerializableAttribute()]
    public partial class SubBusinessUnit : Vegam_MaintenanceModule.ipas_CompanyService.BusinessUnitDetails {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SubBusinessUnitIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubBusinessUnitNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SubBusinessUnitID {
            get {
                return this.SubBusinessUnitIDField;
            }
            set {
                if ((this.SubBusinessUnitIDField.Equals(value) != true)) {
                    this.SubBusinessUnitIDField = value;
                    this.RaisePropertyChanged("SubBusinessUnitID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubBusinessUnitName {
            get {
                return this.SubBusinessUnitNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SubBusinessUnitNameField, value) != true)) {
                    this.SubBusinessUnitNameField = value;
                    this.RaisePropertyChanged("SubBusinessUnitName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BusinessUnitList", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.Company")]
    [System.SerializableAttribute()]
    public partial class BusinessUnitList : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Vegam_MaintenanceModule.ipas_CompanyService.BusinessUnitDetails[] GetBusinessUnitListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalRecordsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Vegam_MaintenanceModule.ipas_CompanyService.BusinessUnitDetails[] GetBusinessUnitList {
            get {
                return this.GetBusinessUnitListField;
            }
            set {
                if ((object.ReferenceEquals(this.GetBusinessUnitListField, value) != true)) {
                    this.GetBusinessUnitListField = value;
                    this.RaisePropertyChanged("GetBusinessUnitList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalRecords {
            get {
                return this.TotalRecordsField;
            }
            set {
                if ((this.TotalRecordsField.Equals(value) != true)) {
                    this.TotalRecordsField = value;
                    this.RaisePropertyChanged("TotalRecords");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SubBusinessUnitList", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.Company")]
    [System.SerializableAttribute()]
    public partial class SubBusinessUnitList : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Vegam_MaintenanceModule.ipas_CompanyService.SubBusinessUnit[] GetSubBusinessUnitListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalRecordsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Vegam_MaintenanceModule.ipas_CompanyService.SubBusinessUnit[] GetSubBusinessUnitList {
            get {
                return this.GetSubBusinessUnitListField;
            }
            set {
                if ((object.ReferenceEquals(this.GetSubBusinessUnitListField, value) != true)) {
                    this.GetSubBusinessUnitListField = value;
                    this.RaisePropertyChanged("GetSubBusinessUnitList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalRecords {
            get {
                return this.TotalRecordsField;
            }
            set {
                if ((this.TotalRecordsField.Equals(value) != true)) {
                    this.TotalRecordsField = value;
                    this.RaisePropertyChanged("TotalRecords");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BartenderServerInfoFilter", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.Plant")]
    [System.SerializableAttribute()]
    public partial class BartenderServerInfoFilter : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ServerIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyID {
            get {
                return this.CompanyIDField;
            }
            set {
                if ((this.CompanyIDField.Equals(value) != true)) {
                    this.CompanyIDField = value;
                    this.RaisePropertyChanged("CompanyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ServerID {
            get {
                return this.ServerIDField;
            }
            set {
                if ((this.ServerIDField.Equals(value) != true)) {
                    this.ServerIDField = value;
                    this.RaisePropertyChanged("ServerID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BartederServerConfigurationInfo", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.Plant")]
    [System.SerializableAttribute()]
    public partial class BartederServerConfigurationInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NoOfMaxFailPrintAttemptsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RetryFailPrintIntervalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Vegam_MaintenanceModule.ipas_CompanyService.BartenderServerInfo[] ServerListField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NoOfMaxFailPrintAttempts {
            get {
                return this.NoOfMaxFailPrintAttemptsField;
            }
            set {
                if ((this.NoOfMaxFailPrintAttemptsField.Equals(value) != true)) {
                    this.NoOfMaxFailPrintAttemptsField = value;
                    this.RaisePropertyChanged("NoOfMaxFailPrintAttempts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RetryFailPrintInterval {
            get {
                return this.RetryFailPrintIntervalField;
            }
            set {
                if ((this.RetryFailPrintIntervalField.Equals(value) != true)) {
                    this.RetryFailPrintIntervalField = value;
                    this.RaisePropertyChanged("RetryFailPrintInterval");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Vegam_MaintenanceModule.ipas_CompanyService.BartenderServerInfo[] ServerList {
            get {
                return this.ServerListField;
            }
            set {
                if ((object.ReferenceEquals(this.ServerListField, value) != true)) {
                    this.ServerListField = value;
                    this.RaisePropertyChanged("ServerList");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BartenderServerInfo", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.Plant")]
    [System.SerializableAttribute()]
    public partial class BartenderServerInfo : Vegam_MaintenanceModule.ipas_CompanyService.PrintServerBasicInfo {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IPAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsLoadBalacerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPrintServerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PortNumberField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IPAddress {
            get {
                return this.IPAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.IPAddressField, value) != true)) {
                    this.IPAddressField = value;
                    this.RaisePropertyChanged("IPAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsLoadBalacer {
            get {
                return this.IsLoadBalacerField;
            }
            set {
                if ((this.IsLoadBalacerField.Equals(value) != true)) {
                    this.IsLoadBalacerField = value;
                    this.RaisePropertyChanged("IsLoadBalacer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPrintServer {
            get {
                return this.IsPrintServerField;
            }
            set {
                if ((this.IsPrintServerField.Equals(value) != true)) {
                    this.IsPrintServerField = value;
                    this.RaisePropertyChanged("IsPrintServer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PortNumber {
            get {
                return this.PortNumberField;
            }
            set {
                if ((this.PortNumberField.Equals(value) != true)) {
                    this.PortNumberField = value;
                    this.RaisePropertyChanged("PortNumber");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PrintServerBasicInfo", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.Plant")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Vegam_MaintenanceModule.ipas_CompanyService.BartenderServerInfo))]
    public partial class PrintServerBasicInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ServerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServerNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ServerID {
            get {
                return this.ServerIDField;
            }
            set {
                if ((this.ServerIDField.Equals(value) != true)) {
                    this.ServerIDField = value;
                    this.RaisePropertyChanged("ServerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServerName {
            get {
                return this.ServerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ServerNameField, value) != true)) {
                    this.ServerNameField = value;
                    this.RaisePropertyChanged("ServerName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BartenderServerFailPrintInfo", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.Plant")]
    [System.SerializableAttribute()]
    public partial class BartenderServerFailPrintInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Vegam_MaintenanceModule.ipas_CompanyService.FailedPrintFieldType FieldTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FieldValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Vegam_MaintenanceModule.ipas_CompanyService.FailedPrintFieldType FieldType {
            get {
                return this.FieldTypeField;
            }
            set {
                if ((this.FieldTypeField.Equals(value) != true)) {
                    this.FieldTypeField = value;
                    this.RaisePropertyChanged("FieldType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FieldValue {
            get {
                return this.FieldValueField;
            }
            set {
                if ((this.FieldValueField.Equals(value) != true)) {
                    this.FieldValueField = value;
                    this.RaisePropertyChanged("FieldValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FailedPrintFieldType", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.Plant")]
    public enum FailedPrintFieldType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FailPrintAttempt = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RetryPrintInterval = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BartenderServerErrorLogFilter", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.Plant")]
    [System.SerializableAttribute()]
    public partial class BartenderServerErrorLogFilter : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ServerIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageIndex {
            get {
                return this.PageIndexField;
            }
            set {
                if ((this.PageIndexField.Equals(value) != true)) {
                    this.PageIndexField = value;
                    this.RaisePropertyChanged("PageIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageSize {
            get {
                return this.PageSizeField;
            }
            set {
                if ((this.PageSizeField.Equals(value) != true)) {
                    this.PageSizeField = value;
                    this.RaisePropertyChanged("PageSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ServerID {
            get {
                return this.ServerIDField;
            }
            set {
                if ((this.ServerIDField.Equals(value) != true)) {
                    this.ServerIDField = value;
                    this.RaisePropertyChanged("ServerID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BartenderServerErrorDetails", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.Plant")]
    [System.SerializableAttribute()]
    public partial class BartenderServerErrorDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Vegam_MaintenanceModule.ipas_CompanyService.BartenderServerErrorLog[] BartenderServerErrorLogListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalRecordsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Vegam_MaintenanceModule.ipas_CompanyService.BartenderServerErrorLog[] BartenderServerErrorLogList {
            get {
                return this.BartenderServerErrorLogListField;
            }
            set {
                if ((object.ReferenceEquals(this.BartenderServerErrorLogListField, value) != true)) {
                    this.BartenderServerErrorLogListField = value;
                    this.RaisePropertyChanged("BartenderServerErrorLogList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalRecords {
            get {
                return this.TotalRecordsField;
            }
            set {
                if ((this.TotalRecordsField.Equals(value) != true)) {
                    this.TotalRecordsField = value;
                    this.RaisePropertyChanged("TotalRecords");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BartenderServerErrorLog", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.Plant")]
    [System.SerializableAttribute()]
    public partial class BartenderServerErrorLog : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ErrorDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ErrorTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ErrorDate {
            get {
                return this.ErrorDateField;
            }
            set {
                if ((this.ErrorDateField.Equals(value) != true)) {
                    this.ErrorDateField = value;
                    this.RaisePropertyChanged("ErrorDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ErrorTime {
            get {
                return this.ErrorTimeField;
            }
            set {
                if ((this.ErrorTimeField.Equals(value) != true)) {
                    this.ErrorTimeField = value;
                    this.RaisePropertyChanged("ErrorTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SitePrintServerFilter", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.Plant")]
    [System.SerializableAttribute()]
    public partial class SitePrintServerFilter : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SiteIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyID {
            get {
                return this.CompanyIDField;
            }
            set {
                if ((this.CompanyIDField.Equals(value) != true)) {
                    this.CompanyIDField = value;
                    this.RaisePropertyChanged("CompanyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageIndex {
            get {
                return this.PageIndexField;
            }
            set {
                if ((this.PageIndexField.Equals(value) != true)) {
                    this.PageIndexField = value;
                    this.RaisePropertyChanged("PageIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageSize {
            get {
                return this.PageSizeField;
            }
            set {
                if ((this.PageSizeField.Equals(value) != true)) {
                    this.PageSizeField = value;
                    this.RaisePropertyChanged("PageSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServerName {
            get {
                return this.ServerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ServerNameField, value) != true)) {
                    this.ServerNameField = value;
                    this.RaisePropertyChanged("ServerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SiteID {
            get {
                return this.SiteIDField;
            }
            set {
                if ((this.SiteIDField.Equals(value) != true)) {
                    this.SiteIDField = value;
                    this.RaisePropertyChanged("SiteID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SitePrintServerList", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.Plant")]
    [System.SerializableAttribute()]
    public partial class SitePrintServerList : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Vegam_MaintenanceModule.ipas_CompanyService.SitePrintServerInfo[] PrintServerListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalRecordsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Vegam_MaintenanceModule.ipas_CompanyService.SitePrintServerInfo[] PrintServerList {
            get {
                return this.PrintServerListField;
            }
            set {
                if ((object.ReferenceEquals(this.PrintServerListField, value) != true)) {
                    this.PrintServerListField = value;
                    this.RaisePropertyChanged("PrintServerList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalRecords {
            get {
                return this.TotalRecordsField;
            }
            set {
                if ((this.TotalRecordsField.Equals(value) != true)) {
                    this.TotalRecordsField = value;
                    this.RaisePropertyChanged("TotalRecords");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SitePrintServerInfo", Namespace="http://schemas.datacontract.org/2004/07/iPAS_Service.Plant")]
    [System.SerializableAttribute()]
    public partial class SitePrintServerInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] ServerIDListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] ServerListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SiteIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SiteNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] ServerIDList {
            get {
                return this.ServerIDListField;
            }
            set {
                if ((object.ReferenceEquals(this.ServerIDListField, value) != true)) {
                    this.ServerIDListField = value;
                    this.RaisePropertyChanged("ServerIDList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] ServerList {
            get {
                return this.ServerListField;
            }
            set {
                if ((object.ReferenceEquals(this.ServerListField, value) != true)) {
                    this.ServerListField = value;
                    this.RaisePropertyChanged("ServerList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServerName {
            get {
                return this.ServerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ServerNameField, value) != true)) {
                    this.ServerNameField = value;
                    this.RaisePropertyChanged("ServerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SiteID {
            get {
                return this.SiteIDField;
            }
            set {
                if ((this.SiteIDField.Equals(value) != true)) {
                    this.SiteIDField = value;
                    this.RaisePropertyChanged("SiteID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SiteName {
            get {
                return this.SiteNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SiteNameField, value) != true)) {
                    this.SiteNameField = value;
                    this.RaisePropertyChanged("SiteName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ipas_CompanyService.ICompanyService")]
    public interface ICompanyService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/InsertUpdateAttributeInfo", ReplyAction="http://tempuri.org/ICompanyService/InsertUpdateAttributeInfoResponse")]
        int InsertUpdateAttributeInfo(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.MeasuringAttributeInfo measuringAttributeInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/InsertUpdateAttributeInfo", ReplyAction="http://tempuri.org/ICompanyService/InsertUpdateAttributeInfoResponse")]
        System.Threading.Tasks.Task<int> InsertUpdateAttributeInfoAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.MeasuringAttributeInfo measuringAttributeInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetSensorTypes", ReplyAction="http://tempuri.org/ICompanyService/GetSensorTypesResponse")]
        Vegam_MaintenanceModule.ipas_CompanyService.SensorTypeList GetSensorTypes(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.SensorTypeForFilter sensorTypeForEdit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetSensorTypes", ReplyAction="http://tempuri.org/ICompanyService/GetSensorTypesResponse")]
        System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.SensorTypeList> GetSensorTypesAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.SensorTypeForFilter sensorTypeForEdit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetMeasuringAttributeInfo", ReplyAction="http://tempuri.org/ICompanyService/GetMeasuringAttributeInfoResponse")]
        Vegam_MaintenanceModule.ipas_CompanyService.MeasuringAttributeList GetMeasuringAttributeInfo(Vegam_MaintenanceModule.ipas_CompanyService.MeasuringAttributeFilter attributeFilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetMeasuringAttributeInfo", ReplyAction="http://tempuri.org/ICompanyService/GetMeasuringAttributeInfoResponse")]
        System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.MeasuringAttributeList> GetMeasuringAttributeInfoAsync(Vegam_MaintenanceModule.ipas_CompanyService.MeasuringAttributeFilter attributeFilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetConfiguredAttrInfoForEdit", ReplyAction="http://tempuri.org/ICompanyService/GetConfiguredAttrInfoForEditResponse")]
        Vegam_MaintenanceModule.ipas_CompanyService.MeasuringAttributeInfo GetConfiguredAttrInfoForEdit(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, int measuringAttributeID, int companyID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetConfiguredAttrInfoForEdit", ReplyAction="http://tempuri.org/ICompanyService/GetConfiguredAttrInfoForEditResponse")]
        System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.MeasuringAttributeInfo> GetConfiguredAttrInfoForEditAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, int measuringAttributeID, int companyID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/DeleteAttributeInfo", ReplyAction="http://tempuri.org/ICompanyService/DeleteAttributeInfoResponse")]
        int DeleteAttributeInfo(int measuringAttributeID, int companyID, int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/DeleteAttributeInfo", ReplyAction="http://tempuri.org/ICompanyService/DeleteAttributeInfoResponse")]
        System.Threading.Tasks.Task<int> DeleteAttributeInfoAsync(int measuringAttributeID, int companyID, int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetSensorTypeUomList", ReplyAction="http://tempuri.org/ICompanyService/GetSensorTypeUomListResponse")]
        Vegam_MaintenanceModule.ipas_CompanyService.SensorTypeUOMList GetSensorTypeUomList(Vegam_MaintenanceModule.ipas_CompanyService.MeasuringAttributeFilter filterForEdit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetSensorTypeUomList", ReplyAction="http://tempuri.org/ICompanyService/GetSensorTypeUomListResponse")]
        System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.SensorTypeUOMList> GetSensorTypeUomListAsync(Vegam_MaintenanceModule.ipas_CompanyService.MeasuringAttributeFilter filterForEdit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/InsertUpdateSensorTypeUOMInfo", ReplyAction="http://tempuri.org/ICompanyService/InsertUpdateSensorTypeUOMInfoResponse")]
        int InsertUpdateSensorTypeUOMInfo(Vegam_MaintenanceModule.ipas_CompanyService.SensorTypeUOMInfo sensorTypeUOMInfo, Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/InsertUpdateSensorTypeUOMInfo", ReplyAction="http://tempuri.org/ICompanyService/InsertUpdateSensorTypeUOMInfoResponse")]
        System.Threading.Tasks.Task<int> InsertUpdateSensorTypeUOMInfoAsync(Vegam_MaintenanceModule.ipas_CompanyService.SensorTypeUOMInfo sensorTypeUOMInfo, Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetSensorTypeInfo", ReplyAction="http://tempuri.org/ICompanyService/GetSensorTypeInfoResponse")]
        Vegam_MaintenanceModule.ipas_CompanyService.SensorTypeUOMInfo GetSensorTypeInfo(int sensorTypeID, int companyID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetSensorTypeInfo", ReplyAction="http://tempuri.org/ICompanyService/GetSensorTypeInfoResponse")]
        System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.SensorTypeUOMInfo> GetSensorTypeInfoAsync(int sensorTypeID, int companyID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/DeleteSensorType", ReplyAction="http://tempuri.org/ICompanyService/DeleteSensorTypeResponse")]
        int DeleteSensorType(int sensorTypeID, int companyID, int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/DeleteSensorType", ReplyAction="http://tempuri.org/ICompanyService/DeleteSensorTypeResponse")]
        System.Threading.Tasks.Task<int> DeleteSensorTypeAsync(int sensorTypeID, int companyID, int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/DeleteSensorTypeUOM", ReplyAction="http://tempuri.org/ICompanyService/DeleteSensorTypeUOMResponse")]
        int DeleteSensorTypeUOM(int uomID, int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/DeleteSensorTypeUOM", ReplyAction="http://tempuri.org/ICompanyService/DeleteSensorTypeUOMResponse")]
        System.Threading.Tasks.Task<int> DeleteSensorTypeUOMAsync(int uomID, int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/DownloadMeasuringAttributeTemplate", ReplyAction="http://tempuri.org/ICompanyService/DownloadMeasuringAttributeTemplateResponse")]
        string DownloadMeasuringAttributeTemplate(Vegam_MaintenanceModule.ipas_CompanyService.MeasuringAttributeFilter attrFilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/DownloadMeasuringAttributeTemplate", ReplyAction="http://tempuri.org/ICompanyService/DownloadMeasuringAttributeTemplateResponse")]
        System.Threading.Tasks.Task<string> DownloadMeasuringAttributeTemplateAsync(Vegam_MaintenanceModule.ipas_CompanyService.MeasuringAttributeFilter attrFilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/DownloadAllConfiguredMeasuringAttribute", ReplyAction="http://tempuri.org/ICompanyService/DownloadAllConfiguredMeasuringAttributeRespons" +
            "e")]
        string DownloadAllConfiguredMeasuringAttribute(Vegam_MaintenanceModule.ipas_CompanyService.MeasuringAttributeFilter attrFilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/DownloadAllConfiguredMeasuringAttribute", ReplyAction="http://tempuri.org/ICompanyService/DownloadAllConfiguredMeasuringAttributeRespons" +
            "e")]
        System.Threading.Tasks.Task<string> DownloadAllConfiguredMeasuringAttributeAsync(Vegam_MaintenanceModule.ipas_CompanyService.MeasuringAttributeFilter attrFilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/SyncMeasuringAttributeFromExcel", ReplyAction="http://tempuri.org/ICompanyService/SyncMeasuringAttributeFromExcelResponse")]
        string SyncMeasuringAttributeFromExcel(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.MeasuringAttributeFilter attrFilter, string fileName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/SyncMeasuringAttributeFromExcel", ReplyAction="http://tempuri.org/ICompanyService/SyncMeasuringAttributeFromExcelResponse")]
        System.Threading.Tasks.Task<string> SyncMeasuringAttributeFromExcelAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.MeasuringAttributeFilter attrFilter, string fileName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetDefectInfo", ReplyAction="http://tempuri.org/ICompanyService/GetDefectInfoResponse")]
        Vegam_MaintenanceModule.ipas_CompanyService.DefectListInfo GetDefectInfo(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.DefectInfoFilter defectInfoFilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetDefectInfo", ReplyAction="http://tempuri.org/ICompanyService/GetDefectInfoResponse")]
        System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.DefectListInfo> GetDefectInfoAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.DefectInfoFilter defectInfoFilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/InsertOrUpdateDefectInfo", ReplyAction="http://tempuri.org/ICompanyService/InsertOrUpdateDefectInfoResponse")]
        int InsertOrUpdateDefectInfo(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.DefectInfo defectInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/InsertOrUpdateDefectInfo", ReplyAction="http://tempuri.org/ICompanyService/InsertOrUpdateDefectInfoResponse")]
        System.Threading.Tasks.Task<int> InsertOrUpdateDefectInfoAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.DefectInfo defectInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/DeleteDefect", ReplyAction="http://tempuri.org/ICompanyService/DeleteDefectResponse")]
        bool DeleteDefect(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, int defectID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/DeleteDefect", ReplyAction="http://tempuri.org/ICompanyService/DeleteDefectResponse")]
        System.Threading.Tasks.Task<bool> DeleteDefectAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, int defectID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetDefectAgencyInfo", ReplyAction="http://tempuri.org/ICompanyService/GetDefectAgencyInfoResponse")]
        Vegam_MaintenanceModule.ipas_CompanyService.DefectAgencyInfoList GetDefectAgencyInfo(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.DefectAgencyFillter defectAgencyFillter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetDefectAgencyInfo", ReplyAction="http://tempuri.org/ICompanyService/GetDefectAgencyInfoResponse")]
        System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.DefectAgencyInfoList> GetDefectAgencyInfoAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.DefectAgencyFillter defectAgencyFillter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/InsertOrUpdateDefectAgency", ReplyAction="http://tempuri.org/ICompanyService/InsertOrUpdateDefectAgencyResponse")]
        int InsertOrUpdateDefectAgency(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.DefectAgency defectAgency);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/InsertOrUpdateDefectAgency", ReplyAction="http://tempuri.org/ICompanyService/InsertOrUpdateDefectAgencyResponse")]
        System.Threading.Tasks.Task<int> InsertOrUpdateDefectAgencyAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.DefectAgency defectAgency);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/DeleteDefectAgency", ReplyAction="http://tempuri.org/ICompanyService/DeleteDefectAgencyResponse")]
        bool DeleteDefectAgency(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, int defectAgencyID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/DeleteDefectAgency", ReplyAction="http://tempuri.org/ICompanyService/DeleteDefectAgencyResponse")]
        System.Threading.Tasks.Task<bool> DeleteDefectAgencyAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, int defectAgencyID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetDefectSourceInfo", ReplyAction="http://tempuri.org/ICompanyService/GetDefectSourceInfoResponse")]
        Vegam_MaintenanceModule.ipas_CompanyService.DefectSourceInfoList GetDefectSourceInfo(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.DefectSourceFilter defectSourceFilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetDefectSourceInfo", ReplyAction="http://tempuri.org/ICompanyService/GetDefectSourceInfoResponse")]
        System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.DefectSourceInfoList> GetDefectSourceInfoAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.DefectSourceFilter defectSourceFilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/InsertOrUpdateDefectSources", ReplyAction="http://tempuri.org/ICompanyService/InsertOrUpdateDefectSourcesResponse")]
        int InsertOrUpdateDefectSources(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.DefectSource defectSource);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/InsertOrUpdateDefectSources", ReplyAction="http://tempuri.org/ICompanyService/InsertOrUpdateDefectSourcesResponse")]
        System.Threading.Tasks.Task<int> InsertOrUpdateDefectSourcesAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.DefectSource defectSource);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/DeleteDefectSource", ReplyAction="http://tempuri.org/ICompanyService/DeleteDefectSourceResponse")]
        bool DeleteDefectSource(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, int defectSourceID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/DeleteDefectSource", ReplyAction="http://tempuri.org/ICompanyService/DeleteDefectSourceResponse")]
        System.Threading.Tasks.Task<bool> DeleteDefectSourceAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, int defectSourceID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/UploadDefectInfo", ReplyAction="http://tempuri.org/ICompanyService/UploadDefectInfoResponse")]
        string UploadDefectInfo(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, int companyID, string fileName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/UploadDefectInfo", ReplyAction="http://tempuri.org/ICompanyService/UploadDefectInfoResponse")]
        System.Threading.Tasks.Task<string> UploadDefectInfoAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, int companyID, string fileName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/DownloadDefectInfo", ReplyAction="http://tempuri.org/ICompanyService/DownloadDefectInfoResponse")]
        string DownloadDefectInfo(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.DefectInfoFilter defectInfoFilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/DownloadDefectInfo", ReplyAction="http://tempuri.org/ICompanyService/DownloadDefectInfoResponse")]
        System.Threading.Tasks.Task<string> DownloadDefectInfoAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.DefectInfoFilter defectInfoFilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/UploadDefectSource", ReplyAction="http://tempuri.org/ICompanyService/UploadDefectSourceResponse")]
        string UploadDefectSource(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, int companyID, string fileName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/UploadDefectSource", ReplyAction="http://tempuri.org/ICompanyService/UploadDefectSourceResponse")]
        System.Threading.Tasks.Task<string> UploadDefectSourceAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, int companyID, string fileName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/DownloadDefectSource", ReplyAction="http://tempuri.org/ICompanyService/DownloadDefectSourceResponse")]
        string DownloadDefectSource(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.DefectSourceFilter defectSourceFilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/DownloadDefectSource", ReplyAction="http://tempuri.org/ICompanyService/DownloadDefectSourceResponse")]
        System.Threading.Tasks.Task<string> DownloadDefectSourceAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.DefectSourceFilter defectSourceFilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/UploadDefectAgency", ReplyAction="http://tempuri.org/ICompanyService/UploadDefectAgencyResponse")]
        string UploadDefectAgency(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, int companyID, string fileName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/UploadDefectAgency", ReplyAction="http://tempuri.org/ICompanyService/UploadDefectAgencyResponse")]
        System.Threading.Tasks.Task<string> UploadDefectAgencyAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, int companyID, string fileName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/DownloadDefectAgency", ReplyAction="http://tempuri.org/ICompanyService/DownloadDefectAgencyResponse")]
        string DownloadDefectAgency(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.DefectAgencyFillter defectAgencyFilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/DownloadDefectAgency", ReplyAction="http://tempuri.org/ICompanyService/DownloadDefectAgencyResponse")]
        System.Threading.Tasks.Task<string> DownloadDefectAgencyAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.DefectAgencyFillter defectAgencyFilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetQualityDecisionInfo", ReplyAction="http://tempuri.org/ICompanyService/GetQualityDecisionInfoResponse")]
        Vegam_MaintenanceModule.ipas_CompanyService.QualityDecisionList GetQualityDecisionInfo(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.QualityDecisionFilter qualityDecisionFilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetQualityDecisionInfo", ReplyAction="http://tempuri.org/ICompanyService/GetQualityDecisionInfoResponse")]
        System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.QualityDecisionList> GetQualityDecisionInfoAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.QualityDecisionFilter qualityDecisionFilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetQualityDecisionForEdit", ReplyAction="http://tempuri.org/ICompanyService/GetQualityDecisionForEditResponse")]
        Vegam_MaintenanceModule.ipas_CompanyService.QualityDecisionsFields GetQualityDecisionForEdit(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, int qualityDecisionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetQualityDecisionForEdit", ReplyAction="http://tempuri.org/ICompanyService/GetQualityDecisionForEditResponse")]
        System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.QualityDecisionsFields> GetQualityDecisionForEditAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, int qualityDecisionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/InsertOrUpdateQualityDecisions", ReplyAction="http://tempuri.org/ICompanyService/InsertOrUpdateQualityDecisionsResponse")]
        int InsertOrUpdateQualityDecisions(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.QualityDecisionsFields qualityDecisionsFields);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/InsertOrUpdateQualityDecisions", ReplyAction="http://tempuri.org/ICompanyService/InsertOrUpdateQualityDecisionsResponse")]
        System.Threading.Tasks.Task<int> InsertOrUpdateQualityDecisionsAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.QualityDecisionsFields qualityDecisionsFields);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/DeleteQualityDecisionCode", ReplyAction="http://tempuri.org/ICompanyService/DeleteQualityDecisionCodeResponse")]
        bool DeleteQualityDecisionCode(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, int qualityDecisionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/DeleteQualityDecisionCode", ReplyAction="http://tempuri.org/ICompanyService/DeleteQualityDecisionCodeResponse")]
        System.Threading.Tasks.Task<bool> DeleteQualityDecisionCodeAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, int qualityDecisionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/UploadQualityDecisionList", ReplyAction="http://tempuri.org/ICompanyService/UploadQualityDecisionListResponse")]
        string UploadQualityDecisionList(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, int companyID, string fileName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/UploadQualityDecisionList", ReplyAction="http://tempuri.org/ICompanyService/UploadQualityDecisionListResponse")]
        System.Threading.Tasks.Task<string> UploadQualityDecisionListAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, int companyID, string fileName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/DownloadQualityDecisionsList", ReplyAction="http://tempuri.org/ICompanyService/DownloadQualityDecisionsListResponse")]
        string DownloadQualityDecisionsList(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.QualityDecisionFilter qualityDecisionFilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/DownloadQualityDecisionsList", ReplyAction="http://tempuri.org/ICompanyService/DownloadQualityDecisionsListResponse")]
        System.Threading.Tasks.Task<string> DownloadQualityDecisionsListAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.QualityDecisionFilter qualityDecisionFilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetObjectInfo", ReplyAction="http://tempuri.org/ICompanyService/GetObjectInfoResponse")]
        Vegam_MaintenanceModule.ipas_CompanyService.ObjectInfoList GetObjectInfo(Vegam_MaintenanceModule.ipas_CompanyService.ObjectInfoFilter objectFilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetObjectInfo", ReplyAction="http://tempuri.org/ICompanyService/GetObjectInfoResponse")]
        System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.ObjectInfoList> GetObjectInfoAsync(Vegam_MaintenanceModule.ipas_CompanyService.ObjectInfoFilter objectFilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/DeleteObjectInfo", ReplyAction="http://tempuri.org/ICompanyService/DeleteObjectInfoResponse")]
        bool DeleteObjectInfo(int objectID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/DeleteObjectInfo", ReplyAction="http://tempuri.org/ICompanyService/DeleteObjectInfoResponse")]
        System.Threading.Tasks.Task<bool> DeleteObjectInfoAsync(int objectID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/UploadObjectInfo", ReplyAction="http://tempuri.org/ICompanyService/UploadObjectInfoResponse")]
        string UploadObjectInfo(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.ObjectInfo objectInfo, string fileName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/UploadObjectInfo", ReplyAction="http://tempuri.org/ICompanyService/UploadObjectInfoResponse")]
        System.Threading.Tasks.Task<string> UploadObjectInfoAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.ObjectInfo objectInfo, string fileName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/DownloadObjectInfo", ReplyAction="http://tempuri.org/ICompanyService/DownloadObjectInfoResponse")]
        string DownloadObjectInfo(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.ObjectInfo objectInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/DownloadObjectInfo", ReplyAction="http://tempuri.org/ICompanyService/DownloadObjectInfoResponse")]
        System.Threading.Tasks.Task<string> DownloadObjectInfoAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.ObjectInfo objectInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetDynamicGridFieldInfo", ReplyAction="http://tempuri.org/ICompanyService/GetDynamicGridFieldInfoResponse")]
        Vegam_MaintenanceModule.ipas_CompanyService.DynamicGridFeatureFieldInfo GetDynamicGridFieldInfo(Vegam_MaintenanceModule.ipas_CompanyService.DynamicGridFilter basicInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetDynamicGridFieldInfo", ReplyAction="http://tempuri.org/ICompanyService/GetDynamicGridFieldInfoResponse")]
        System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.DynamicGridFeatureFieldInfo> GetDynamicGridFieldInfoAsync(Vegam_MaintenanceModule.ipas_CompanyService.DynamicGridFilter basicInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetDynamicGridContent", ReplyAction="http://tempuri.org/ICompanyService/GetDynamicGridContentResponse")]
        Vegam_MaintenanceModule.ipas_CompanyService.DynamicGridContentInfo GetDynamicGridContent(Vegam_MaintenanceModule.ipas_CompanyService.DynamicGridFilter gridfilter, Vegam_MaintenanceModule.ipas_CompanyService.DynamicGridContentFilter contentFilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetDynamicGridContent", ReplyAction="http://tempuri.org/ICompanyService/GetDynamicGridContentResponse")]
        System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.DynamicGridContentInfo> GetDynamicGridContentAsync(Vegam_MaintenanceModule.ipas_CompanyService.DynamicGridFilter gridfilter, Vegam_MaintenanceModule.ipas_CompanyService.DynamicGridContentFilter contentFilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetFilterTypeValues", ReplyAction="http://tempuri.org/ICompanyService/GetFilterTypeValuesResponse")]
        Vegam_MaintenanceModule.ipas_CompanyService.TypeValueInfo[] GetFilterTypeValues(Vegam_MaintenanceModule.ipas_CompanyService.DynamicGridFilter filter, Vegam_MaintenanceModule.ipas_CompanyService.DynamicGridTypeValueFilter typeValueFilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetFilterTypeValues", ReplyAction="http://tempuri.org/ICompanyService/GetFilterTypeValuesResponse")]
        System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.TypeValueInfo[]> GetFilterTypeValuesAsync(Vegam_MaintenanceModule.ipas_CompanyService.DynamicGridFilter filter, Vegam_MaintenanceModule.ipas_CompanyService.DynamicGridTypeValueFilter typeValueFilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/DynamicGridContentExcelDownload", ReplyAction="http://tempuri.org/ICompanyService/DynamicGridContentExcelDownloadResponse")]
        string DynamicGridContentExcelDownload(Vegam_MaintenanceModule.ipas_CompanyService.DynamicGridFilter filter, Vegam_MaintenanceModule.ipas_CompanyService.DynamicGridContentFilter contentFilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/DynamicGridContentExcelDownload", ReplyAction="http://tempuri.org/ICompanyService/DynamicGridContentExcelDownloadResponse")]
        System.Threading.Tasks.Task<string> DynamicGridContentExcelDownloadAsync(Vegam_MaintenanceModule.ipas_CompanyService.DynamicGridFilter filter, Vegam_MaintenanceModule.ipas_CompanyService.DynamicGridContentFilter contentFilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetUserViewFields", ReplyAction="http://tempuri.org/ICompanyService/GetUserViewFieldsResponse")]
        Vegam_MaintenanceModule.ipas_CompanyService.UserViewFieldInfo[] GetUserViewFields(Vegam_MaintenanceModule.ipas_CompanyService.DynamicGridFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetUserViewFields", ReplyAction="http://tempuri.org/ICompanyService/GetUserViewFieldsResponse")]
        System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.UserViewFieldInfo[]> GetUserViewFieldsAsync(Vegam_MaintenanceModule.ipas_CompanyService.DynamicGridFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/InserUserView", ReplyAction="http://tempuri.org/ICompanyService/InserUserViewResponse")]
        int InserUserView(Vegam_MaintenanceModule.ipas_CompanyService.DynamicGridFilter filter, Vegam_MaintenanceModule.ipas_CompanyService.UserViewInfo userViewInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/InserUserView", ReplyAction="http://tempuri.org/ICompanyService/InserUserViewResponse")]
        System.Threading.Tasks.Task<int> InserUserViewAsync(Vegam_MaintenanceModule.ipas_CompanyService.DynamicGridFilter filter, Vegam_MaintenanceModule.ipas_CompanyService.UserViewInfo userViewInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/DeleteUserView", ReplyAction="http://tempuri.org/ICompanyService/DeleteUserViewResponse")]
        bool DeleteUserView(Vegam_MaintenanceModule.ipas_CompanyService.DynamicGridFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/DeleteUserView", ReplyAction="http://tempuri.org/ICompanyService/DeleteUserViewResponse")]
        System.Threading.Tasks.Task<bool> DeleteUserViewAsync(Vegam_MaintenanceModule.ipas_CompanyService.DynamicGridFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetDepartmentsInfo", ReplyAction="http://tempuri.org/ICompanyService/GetDepartmentsInfoResponse")]
        Vegam_MaintenanceModule.ipas_CompanyService.DepartmentBasicInfo[] GetDepartmentsInfo(Vegam_MaintenanceModule.ipas_CompanyService.CompanyDepartmentBasicInfo companyDepartmentBasicInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetDepartmentsInfo", ReplyAction="http://tempuri.org/ICompanyService/GetDepartmentsInfoResponse")]
        System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.DepartmentBasicInfo[]> GetDepartmentsInfoAsync(Vegam_MaintenanceModule.ipas_CompanyService.CompanyDepartmentBasicInfo companyDepartmentBasicInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetDepartmentDetails", ReplyAction="http://tempuri.org/ICompanyService/GetDepartmentDetailsResponse")]
        Vegam_MaintenanceModule.ipas_CompanyService.DepartmentList GetDepartmentDetails(int userID, int companyID, Vegam_MaintenanceModule.ipas_CompanyService.DepartmentFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetDepartmentDetails", ReplyAction="http://tempuri.org/ICompanyService/GetDepartmentDetailsResponse")]
        System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.DepartmentList> GetDepartmentDetailsAsync(int userID, int companyID, Vegam_MaintenanceModule.ipas_CompanyService.DepartmentFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/InsertDepartment", ReplyAction="http://tempuri.org/ICompanyService/InsertDepartmentResponse")]
        int InsertDepartment(Vegam_MaintenanceModule.ipas_CompanyService.DepartmentInfo departmentinfo, Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/InsertDepartment", ReplyAction="http://tempuri.org/ICompanyService/InsertDepartmentResponse")]
        System.Threading.Tasks.Task<int> InsertDepartmentAsync(Vegam_MaintenanceModule.ipas_CompanyService.DepartmentInfo departmentinfo, Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/UpdateDepartment", ReplyAction="http://tempuri.org/ICompanyService/UpdateDepartmentResponse")]
        int UpdateDepartment(Vegam_MaintenanceModule.ipas_CompanyService.DepartmentInfo departmentInfo, Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/UpdateDepartment", ReplyAction="http://tempuri.org/ICompanyService/UpdateDepartmentResponse")]
        System.Threading.Tasks.Task<int> UpdateDepartmentAsync(Vegam_MaintenanceModule.ipas_CompanyService.DepartmentInfo departmentInfo, Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/DeleteDepartment", ReplyAction="http://tempuri.org/ICompanyService/DeleteDepartmentResponse")]
        int DeleteDepartment(int departmentID, Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/DeleteDepartment", ReplyAction="http://tempuri.org/ICompanyService/DeleteDepartmentResponse")]
        System.Threading.Tasks.Task<int> DeleteDepartmentAsync(int departmentID, Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetDepartmentsInfoForExistingRoles", ReplyAction="http://tempuri.org/ICompanyService/GetDepartmentsInfoForExistingRolesResponse")]
        Vegam_MaintenanceModule.ipas_CompanyService.Department[] GetDepartmentsInfoForExistingRoles(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, int companyID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetDepartmentsInfoForExistingRoles", ReplyAction="http://tempuri.org/ICompanyService/GetDepartmentsInfoForExistingRolesResponse")]
        System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.Department[]> GetDepartmentsInfoForExistingRolesAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, int companyID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetAccessLevelForRole", ReplyAction="http://tempuri.org/ICompanyService/GetAccessLevelForRoleResponse")]
        Vegam_MaintenanceModule.ipas_CompanyService.AccessLevelInfo[] GetAccessLevelForRole(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetAccessLevelForRole", ReplyAction="http://tempuri.org/ICompanyService/GetAccessLevelForRoleResponse")]
        System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.AccessLevelInfo[]> GetAccessLevelForRoleAsync(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetRolesForCompany", ReplyAction="http://tempuri.org/ICompanyService/GetRolesForCompanyResponse")]
        Vegam_MaintenanceModule.ipas_CompanyService.RoleInfo[] GetRolesForCompany(int siteID, int userID, int departmentID, int companyID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetRolesForCompany", ReplyAction="http://tempuri.org/ICompanyService/GetRolesForCompanyResponse")]
        System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.RoleInfo[]> GetRolesForCompanyAsync(int siteID, int userID, int departmentID, int companyID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/UpdateRoleOrder", ReplyAction="http://tempuri.org/ICompanyService/UpdateRoleOrderResponse")]
        bool UpdateRoleOrder(int siteID, int userID, Vegam_MaintenanceModule.ipas_CompanyService.Role[] roleList, int departmentID, int companyID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/UpdateRoleOrder", ReplyAction="http://tempuri.org/ICompanyService/UpdateRoleOrderResponse")]
        System.Threading.Tasks.Task<bool> UpdateRoleOrderAsync(int siteID, int userID, Vegam_MaintenanceModule.ipas_CompanyService.Role[] roleList, int departmentID, int companyID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/DeleteRole", ReplyAction="http://tempuri.org/ICompanyService/DeleteRoleResponse")]
        int DeleteRole(int userID, int roleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/DeleteRole", ReplyAction="http://tempuri.org/ICompanyService/DeleteRoleResponse")]
        System.Threading.Tasks.Task<int> DeleteRoleAsync(int userID, int roleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/CheckRoleExists", ReplyAction="http://tempuri.org/ICompanyService/CheckRoleExistsResponse")]
        bool CheckRoleExists(int siteID, int userID, string roleName, int departmentID, int companyID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/CheckRoleExists", ReplyAction="http://tempuri.org/ICompanyService/CheckRoleExistsResponse")]
        System.Threading.Tasks.Task<bool> CheckRoleExistsAsync(int siteID, int userID, string roleName, int departmentID, int companyID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/InsertRole", ReplyAction="http://tempuri.org/ICompanyService/InsertRoleResponse")]
        bool InsertRole(int siteID, Vegam_MaintenanceModule.ipas_CompanyService.RoleInfo roleInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/InsertRole", ReplyAction="http://tempuri.org/ICompanyService/InsertRoleResponse")]
        System.Threading.Tasks.Task<bool> InsertRoleAsync(int siteID, Vegam_MaintenanceModule.ipas_CompanyService.RoleInfo roleInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/InsertRoleTask", ReplyAction="http://tempuri.org/ICompanyService/InsertRoleTaskResponse")]
        bool InsertRoleTask(int siteID, int userID, Vegam_MaintenanceModule.ipas_CompanyService.RoleTaskInfo[] roleTaskInfoList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/InsertRoleTask", ReplyAction="http://tempuri.org/ICompanyService/InsertRoleTaskResponse")]
        System.Threading.Tasks.Task<bool> InsertRoleTaskAsync(int siteID, int userID, Vegam_MaintenanceModule.ipas_CompanyService.RoleTaskInfo[] roleTaskInfoList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetAllTasks", ReplyAction="http://tempuri.org/ICompanyService/GetAllTasksResponse")]
        Vegam_MaintenanceModule.ipas_CompanyService.RoleTaskInfo[] GetAllTasks(int siteID, int userID, int accessLevelID, int roleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetAllTasks", ReplyAction="http://tempuri.org/ICompanyService/GetAllTasksResponse")]
        System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.RoleTaskInfo[]> GetAllTasksAsync(int siteID, int userID, int accessLevelID, int roleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/DeleteRoleTask", ReplyAction="http://tempuri.org/ICompanyService/DeleteRoleTaskResponse")]
        bool DeleteRoleTask(int siteID, int userID, int roleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/DeleteRoleTask", ReplyAction="http://tempuri.org/ICompanyService/DeleteRoleTaskResponse")]
        System.Threading.Tasks.Task<bool> DeleteRoleTaskAsync(int siteID, int userID, int roleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetDepartments", ReplyAction="http://tempuri.org/ICompanyService/GetDepartmentsResponse")]
        Vegam_MaintenanceModule.ipas_CompanyService.Department[] GetDepartments(int siteID, int userID, string companyID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetDepartments", ReplyAction="http://tempuri.org/ICompanyService/GetDepartmentsResponse")]
        System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.Department[]> GetDepartmentsAsync(int siteID, int userID, string companyID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetRolesforDept", ReplyAction="http://tempuri.org/ICompanyService/GetRolesforDeptResponse")]
        Vegam_MaintenanceModule.ipas_CompanyService.DepartmentRole[] GetRolesforDept(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.DepartmentRolesFilter departmentRolesFilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetRolesforDept", ReplyAction="http://tempuri.org/ICompanyService/GetRolesforDeptResponse")]
        System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.DepartmentRole[]> GetRolesforDeptAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.DepartmentRolesFilter departmentRolesFilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetTasksforRole", ReplyAction="http://tempuri.org/ICompanyService/GetTasksforRoleResponse")]
        Vegam_MaintenanceModule.ipas_CompanyService.TaskInfo[] GetTasksforRole(int siteID, int userID, int accessLevelID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetTasksforRole", ReplyAction="http://tempuri.org/ICompanyService/GetTasksforRoleResponse")]
        System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.TaskInfo[]> GetTasksforRoleAsync(int siteID, int userID, int accessLevelID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetTaskCategries", ReplyAction="http://tempuri.org/ICompanyService/GetTaskCategriesResponse")]
        string[] GetTaskCategries(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.TaskCategoryFilter taskCategoryFilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetTaskCategries", ReplyAction="http://tempuri.org/ICompanyService/GetTaskCategriesResponse")]
        System.Threading.Tasks.Task<string[]> GetTaskCategriesAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.TaskCategoryFilter taskCategoryFilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetCategoryTasks", ReplyAction="http://tempuri.org/ICompanyService/GetCategoryTasksResponse")]
        Vegam_MaintenanceModule.ipas_CompanyService.RoleTaskInfo[] GetCategoryTasks(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.RoleTasksFilter roleTasksFilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetCategoryTasks", ReplyAction="http://tempuri.org/ICompanyService/GetCategoryTasksResponse")]
        System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.RoleTaskInfo[]> GetCategoryTasksAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.RoleTasksFilter roleTasksFilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/InsertOrUpdateRoleTaskAccess", ReplyAction="http://tempuri.org/ICompanyService/InsertOrUpdateRoleTaskAccessResponse")]
        bool InsertOrUpdateRoleTaskAccess(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.RoleTaskAccess roleTaskAccess);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/InsertOrUpdateRoleTaskAccess", ReplyAction="http://tempuri.org/ICompanyService/InsertOrUpdateRoleTaskAccessResponse")]
        System.Threading.Tasks.Task<bool> InsertOrUpdateRoleTaskAccessAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.RoleTaskAccess roleTaskAccess);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetCompanyTechnologyList", ReplyAction="http://tempuri.org/ICompanyService/GetCompanyTechnologyListResponse")]
        Vegam_MaintenanceModule.ipas_CompanyService.CompanyTechnologyList GetCompanyTechnologyList(Vegam_MaintenanceModule.ipas_CompanyService.CompanyTechnologyFilter filterInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetCompanyTechnologyList", ReplyAction="http://tempuri.org/ICompanyService/GetCompanyTechnologyListResponse")]
        System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.CompanyTechnologyList> GetCompanyTechnologyListAsync(Vegam_MaintenanceModule.ipas_CompanyService.CompanyTechnologyFilter filterInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/InsertCompanyTechnology", ReplyAction="http://tempuri.org/ICompanyService/InsertCompanyTechnologyResponse")]
        bool InsertCompanyTechnology(int companyID, int userID, Vegam_MaintenanceModule.ipas_CompanyService.CompanyTechnologyDetail CompanyTechnologyInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/InsertCompanyTechnology", ReplyAction="http://tempuri.org/ICompanyService/InsertCompanyTechnologyResponse")]
        System.Threading.Tasks.Task<bool> InsertCompanyTechnologyAsync(int companyID, int userID, Vegam_MaintenanceModule.ipas_CompanyService.CompanyTechnologyDetail CompanyTechnologyInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/UpdateCompanyTechnology", ReplyAction="http://tempuri.org/ICompanyService/UpdateCompanyTechnologyResponse")]
        bool UpdateCompanyTechnology(int companyID, int userID, Vegam_MaintenanceModule.ipas_CompanyService.CompanyTechnologyDetail CompanyTechnologyInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/UpdateCompanyTechnology", ReplyAction="http://tempuri.org/ICompanyService/UpdateCompanyTechnologyResponse")]
        System.Threading.Tasks.Task<bool> UpdateCompanyTechnologyAsync(int companyID, int userID, Vegam_MaintenanceModule.ipas_CompanyService.CompanyTechnologyDetail CompanyTechnologyInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/DeleteCompanyTechnology", ReplyAction="http://tempuri.org/ICompanyService/DeleteCompanyTechnologyResponse")]
        bool DeleteCompanyTechnology(int companyID, int userID, int technologyID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/DeleteCompanyTechnology", ReplyAction="http://tempuri.org/ICompanyService/DeleteCompanyTechnologyResponse")]
        System.Threading.Tasks.Task<bool> DeleteCompanyTechnologyAsync(int companyID, int userID, int technologyID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetCategoryTechnologyDetails", ReplyAction="http://tempuri.org/ICompanyService/GetCategoryTechnologyDetailsResponse")]
        Vegam_MaintenanceModule.ipas_CompanyService.CategoryTechnologyList GetCategoryTechnologyDetails(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.CategoryTechnologyFilter categoryTechnologyFilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetCategoryTechnologyDetails", ReplyAction="http://tempuri.org/ICompanyService/GetCategoryTechnologyDetailsResponse")]
        System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.CategoryTechnologyList> GetCategoryTechnologyDetailsAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.CategoryTechnologyFilter categoryTechnologyFilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/InsertOrUpdateCategoryTechnology", ReplyAction="http://tempuri.org/ICompanyService/InsertOrUpdateCategoryTechnologyResponse")]
        int InsertOrUpdateCategoryTechnology(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.CategoryTechnology categoryTechnology);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/InsertOrUpdateCategoryTechnology", ReplyAction="http://tempuri.org/ICompanyService/InsertOrUpdateCategoryTechnologyResponse")]
        System.Threading.Tasks.Task<int> InsertOrUpdateCategoryTechnologyAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.CategoryTechnology categoryTechnology);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/DeleteCategoryTechnology", ReplyAction="http://tempuri.org/ICompanyService/DeleteCategoryTechnologyResponse")]
        bool DeleteCategoryTechnology(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.CategoryTechnology categoryTechnology);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/DeleteCategoryTechnology", ReplyAction="http://tempuri.org/ICompanyService/DeleteCategoryTechnologyResponse")]
        System.Threading.Tasks.Task<bool> DeleteCategoryTechnologyAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.CategoryTechnology categoryTechnology);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetAllLanguageDetails", ReplyAction="http://tempuri.org/ICompanyService/GetAllLanguageDetailsResponse")]
        Vegam_MaintenanceModule.ipas_CompanyService.Language[] GetAllLanguageDetails(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetAllLanguageDetails", ReplyAction="http://tempuri.org/ICompanyService/GetAllLanguageDetailsResponse")]
        System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.Language[]> GetAllLanguageDetailsAsync(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/InsertOrUpdateLanguageDetails", ReplyAction="http://tempuri.org/ICompanyService/InsertOrUpdateLanguageDetailsResponse")]
        int InsertOrUpdateLanguageDetails(Vegam_MaintenanceModule.ipas_CompanyService.Language language, int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/InsertOrUpdateLanguageDetails", ReplyAction="http://tempuri.org/ICompanyService/InsertOrUpdateLanguageDetailsResponse")]
        System.Threading.Tasks.Task<int> InsertOrUpdateLanguageDetailsAsync(Vegam_MaintenanceModule.ipas_CompanyService.Language language, int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetLanguageInfo", ReplyAction="http://tempuri.org/ICompanyService/GetLanguageInfoResponse")]
        Vegam_MaintenanceModule.ipas_CompanyService.Language GetLanguageInfo(int languageID, int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetLanguageInfo", ReplyAction="http://tempuri.org/ICompanyService/GetLanguageInfoResponse")]
        System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.Language> GetLanguageInfoAsync(int languageID, int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/DeleteLanguageDetails", ReplyAction="http://tempuri.org/ICompanyService/DeleteLanguageDetailsResponse")]
        bool DeleteLanguageDetails(int languageID, int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/DeleteLanguageDetails", ReplyAction="http://tempuri.org/ICompanyService/DeleteLanguageDetailsResponse")]
        System.Threading.Tasks.Task<bool> DeleteLanguageDetailsAsync(int languageID, int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetAllCountry", ReplyAction="http://tempuri.org/ICompanyService/GetAllCountryResponse")]
        Vegam_MaintenanceModule.ipas_CompanyService.CountryDetails GetAllCountry(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.CountryFilter countryfilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetAllCountry", ReplyAction="http://tempuri.org/ICompanyService/GetAllCountryResponse")]
        System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.CountryDetails> GetAllCountryAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.CountryFilter countryfilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetAllRegionName", ReplyAction="http://tempuri.org/ICompanyService/GetAllRegionNameResponse")]
        Vegam_MaintenanceModule.ipas_CompanyService.CountryRegion[] GetAllRegionName(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetAllRegionName", ReplyAction="http://tempuri.org/ICompanyService/GetAllRegionNameResponse")]
        System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.CountryRegion[]> GetAllRegionNameAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetAllLanguageName", ReplyAction="http://tempuri.org/ICompanyService/GetAllLanguageNameResponse")]
        Vegam_MaintenanceModule.ipas_CompanyService.Language[] GetAllLanguageName(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetAllLanguageName", ReplyAction="http://tempuri.org/ICompanyService/GetAllLanguageNameResponse")]
        System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.Language[]> GetAllLanguageNameAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/InsertOrUpdateCompanyCountry", ReplyAction="http://tempuri.org/ICompanyService/InsertOrUpdateCompanyCountryResponse")]
        int InsertOrUpdateCompanyCountry(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.Country country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/InsertOrUpdateCompanyCountry", ReplyAction="http://tempuri.org/ICompanyService/InsertOrUpdateCompanyCountryResponse")]
        System.Threading.Tasks.Task<int> InsertOrUpdateCompanyCountryAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.Country country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetCountryInfo", ReplyAction="http://tempuri.org/ICompanyService/GetCountryInfoResponse")]
        Vegam_MaintenanceModule.ipas_CompanyService.Country GetCountryInfo(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, int countryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetCountryInfo", ReplyAction="http://tempuri.org/ICompanyService/GetCountryInfoResponse")]
        System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.Country> GetCountryInfoAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, int countryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/DeleteCompanyCountryDetails", ReplyAction="http://tempuri.org/ICompanyService/DeleteCompanyCountryDetailsResponse")]
        bool DeleteCompanyCountryDetails(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, int countryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/DeleteCompanyCountryDetails", ReplyAction="http://tempuri.org/ICompanyService/DeleteCompanyCountryDetailsResponse")]
        System.Threading.Tasks.Task<bool> DeleteCompanyCountryDetailsAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, int countryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetAllRegion", ReplyAction="http://tempuri.org/ICompanyService/GetAllRegionResponse")]
        Vegam_MaintenanceModule.ipas_CompanyService.RegionDetails GetAllRegion(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.RegionFilter regionfilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetAllRegion", ReplyAction="http://tempuri.org/ICompanyService/GetAllRegionResponse")]
        System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.RegionDetails> GetAllRegionAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.RegionFilter regionfilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/InsertOrUpdateRegionName", ReplyAction="http://tempuri.org/ICompanyService/InsertOrUpdateRegionNameResponse")]
        int InsertOrUpdateRegionName(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.Region regionInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/InsertOrUpdateRegionName", ReplyAction="http://tempuri.org/ICompanyService/InsertOrUpdateRegionNameResponse")]
        System.Threading.Tasks.Task<int> InsertOrUpdateRegionNameAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.Region regionInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetRegionNameForEdit", ReplyAction="http://tempuri.org/ICompanyService/GetRegionNameForEditResponse")]
        Vegam_MaintenanceModule.ipas_CompanyService.Region GetRegionNameForEdit(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, int regionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetRegionNameForEdit", ReplyAction="http://tempuri.org/ICompanyService/GetRegionNameForEditResponse")]
        System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.Region> GetRegionNameForEditAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, int regionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/DeleteRegionDetails", ReplyAction="http://tempuri.org/ICompanyService/DeleteRegionDetailsResponse")]
        bool DeleteRegionDetails(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.Region regionInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/DeleteRegionDetails", ReplyAction="http://tempuri.org/ICompanyService/DeleteRegionDetailsResponse")]
        System.Threading.Tasks.Task<bool> DeleteRegionDetailsAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.Region regionInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetAllSites", ReplyAction="http://tempuri.org/ICompanyService/GetAllSitesResponse")]
        Vegam_MaintenanceModule.ipas_CompanyService.CompanySiteList GetAllSites(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetAllSites", ReplyAction="http://tempuri.org/ICompanyService/GetAllSitesResponse")]
        System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.CompanySiteList> GetAllSitesAsync(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/UpdateUserDefaultSite", ReplyAction="http://tempuri.org/ICompanyService/UpdateUserDefaultSiteResponse")]
        Vegam_MaintenanceModule.ipas_CompanyService.DefaultSiteUpdateInfo UpdateUserDefaultSite(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/UpdateUserDefaultSite", ReplyAction="http://tempuri.org/ICompanyService/UpdateUserDefaultSiteResponse")]
        System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.DefaultSiteUpdateInfo> UpdateUserDefaultSiteAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetDownTimeCategoryDepartments", ReplyAction="http://tempuri.org/ICompanyService/GetDownTimeCategoryDepartmentsResponse")]
        Vegam_MaintenanceModule.ipas_CompanyService.DownTimeCategoryDepartment[] GetDownTimeCategoryDepartments(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetDownTimeCategoryDepartments", ReplyAction="http://tempuri.org/ICompanyService/GetDownTimeCategoryDepartmentsResponse")]
        System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.DownTimeCategoryDepartment[]> GetDownTimeCategoryDepartmentsAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetCompanyDownTimeInfo", ReplyAction="http://tempuri.org/ICompanyService/GetCompanyDownTimeInfoResponse")]
        Vegam_MaintenanceModule.ipas_CompanyService.CompanyCategoryDownTimeInfo GetCompanyDownTimeInfo(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.CompanyDownTimeFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetCompanyDownTimeInfo", ReplyAction="http://tempuri.org/ICompanyService/GetCompanyDownTimeInfoResponse")]
        System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.CompanyCategoryDownTimeInfo> GetCompanyDownTimeInfoAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.CompanyDownTimeFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/AddOrUpdateCompanyDownTime", ReplyAction="http://tempuri.org/ICompanyService/AddOrUpdateCompanyDownTimeResponse")]
        int AddOrUpdateCompanyDownTime(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.DownTime downTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/AddOrUpdateCompanyDownTime", ReplyAction="http://tempuri.org/ICompanyService/AddOrUpdateCompanyDownTimeResponse")]
        System.Threading.Tasks.Task<int> AddOrUpdateCompanyDownTimeAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.DownTime downTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/CheckCompanyDownTimeParentHasChild", ReplyAction="http://tempuri.org/ICompanyService/CheckCompanyDownTimeParentHasChildResponse")]
        bool CheckCompanyDownTimeParentHasChild(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, int downTimeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/CheckCompanyDownTimeParentHasChild", ReplyAction="http://tempuri.org/ICompanyService/CheckCompanyDownTimeParentHasChildResponse")]
        System.Threading.Tasks.Task<bool> CheckCompanyDownTimeParentHasChildAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, int downTimeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/CheckDownTimeUsedInAnyPline", ReplyAction="http://tempuri.org/ICompanyService/CheckDownTimeUsedInAnyPlineResponse")]
        bool CheckDownTimeUsedInAnyPline(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, int downTimeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/CheckDownTimeUsedInAnyPline", ReplyAction="http://tempuri.org/ICompanyService/CheckDownTimeUsedInAnyPlineResponse")]
        System.Threading.Tasks.Task<bool> CheckDownTimeUsedInAnyPlineAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, int downTimeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/DeleteCompanyDownTime", ReplyAction="http://tempuri.org/ICompanyService/DeleteCompanyDownTimeResponse")]
        bool DeleteCompanyDownTime(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, int downTimeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/DeleteCompanyDownTime", ReplyAction="http://tempuri.org/ICompanyService/DeleteCompanyDownTimeResponse")]
        System.Threading.Tasks.Task<bool> DeleteCompanyDownTimeAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, int downTimeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetDownTimeCategory", ReplyAction="http://tempuri.org/ICompanyService/GetDownTimeCategoryResponse")]
        Vegam_MaintenanceModule.ipas_CompanyService.DownTimeCategory[] GetDownTimeCategory(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetDownTimeCategory", ReplyAction="http://tempuri.org/ICompanyService/GetDownTimeCategoryResponse")]
        System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.DownTimeCategory[]> GetDownTimeCategoryAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetDownTimeCategoryForEdit", ReplyAction="http://tempuri.org/ICompanyService/GetDownTimeCategoryForEditResponse")]
        Vegam_MaintenanceModule.ipas_CompanyService.DownTimeCategory GetDownTimeCategoryForEdit(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, int categoryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetDownTimeCategoryForEdit", ReplyAction="http://tempuri.org/ICompanyService/GetDownTimeCategoryForEditResponse")]
        System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.DownTimeCategory> GetDownTimeCategoryForEditAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, int categoryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/InsertOrUpdteDownTimeCategory", ReplyAction="http://tempuri.org/ICompanyService/InsertOrUpdteDownTimeCategoryResponse")]
        int InsertOrUpdteDownTimeCategory(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.DownTimeCategory downTimeCategory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/InsertOrUpdteDownTimeCategory", ReplyAction="http://tempuri.org/ICompanyService/InsertOrUpdteDownTimeCategoryResponse")]
        System.Threading.Tasks.Task<int> InsertOrUpdteDownTimeCategoryAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.DownTimeCategory downTimeCategory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/DeleteDownTimeCategory", ReplyAction="http://tempuri.org/ICompanyService/DeleteDownTimeCategoryResponse")]
        int DeleteDownTimeCategory(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, int categoryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/DeleteDownTimeCategory", ReplyAction="http://tempuri.org/ICompanyService/DeleteDownTimeCategoryResponse")]
        System.Threading.Tasks.Task<int> DeleteDownTimeCategoryAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, int categoryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/CheckDepartmentIDUsedInAnyPline", ReplyAction="http://tempuri.org/ICompanyService/CheckDepartmentIDUsedInAnyPlineResponse")]
        bool CheckDepartmentIDUsedInAnyPline(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, int categoryID, int departmentID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/CheckDepartmentIDUsedInAnyPline", ReplyAction="http://tempuri.org/ICompanyService/CheckDepartmentIDUsedInAnyPlineResponse")]
        System.Threading.Tasks.Task<bool> CheckDepartmentIDUsedInAnyPlineAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, int categoryID, int departmentID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/InsertOrUpdateRegionUserInfo", ReplyAction="http://tempuri.org/ICompanyService/InsertOrUpdateRegionUserInfoResponse")]
        int InsertOrUpdateRegionUserInfo(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.UserBasicInfo userInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/InsertOrUpdateRegionUserInfo", ReplyAction="http://tempuri.org/ICompanyService/InsertOrUpdateRegionUserInfoResponse")]
        System.Threading.Tasks.Task<int> InsertOrUpdateRegionUserInfoAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.UserBasicInfo userInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetBasicRegionUserInfo", ReplyAction="http://tempuri.org/ICompanyService/GetBasicRegionUserInfoResponse")]
        Vegam_MaintenanceModule.ipas_CompanyService.UserBasicInfo GetBasicRegionUserInfo(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetBasicRegionUserInfo", ReplyAction="http://tempuri.org/ICompanyService/GetBasicRegionUserInfoResponse")]
        System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.UserBasicInfo> GetBasicRegionUserInfoAsync(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetUserSitesDepartmentRoles", ReplyAction="http://tempuri.org/ICompanyService/GetUserSitesDepartmentRolesResponse")]
        Vegam_MaintenanceModule.ipas_CompanyService.SiteRoleInfo[] GetUserSitesDepartmentRoles(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetUserSitesDepartmentRoles", ReplyAction="http://tempuri.org/ICompanyService/GetUserSitesDepartmentRolesResponse")]
        System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.SiteRoleInfo[]> GetUserSitesDepartmentRolesAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetRegionRoles", ReplyAction="http://tempuri.org/ICompanyService/GetRegionRolesResponse")]
        Vegam_MaintenanceModule.ipas_CompanyService.PlantLevelRoles[] GetRegionRoles(Vegam_MaintenanceModule.ipas_CompanyService.DepartmentRolesInfo departmentRolesInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetRegionRoles", ReplyAction="http://tempuri.org/ICompanyService/GetRegionRolesResponse")]
        System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.PlantLevelRoles[]> GetRegionRolesAsync(Vegam_MaintenanceModule.ipas_CompanyService.DepartmentRolesInfo departmentRolesInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetCountry", ReplyAction="http://tempuri.org/ICompanyService/GetCountryResponse")]
        Vegam_MaintenanceModule.ipas_CompanyService.CountryInfo[] GetCountry(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetCountry", ReplyAction="http://tempuri.org/ICompanyService/GetCountryResponse")]
        System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.CountryInfo[]> GetCountryAsync(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetSiteInformation", ReplyAction="http://tempuri.org/ICompanyService/GetSiteInformationResponse")]
        Vegam_MaintenanceModule.ipas_CompanyService.SiteInformation[] GetSiteInformation(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetSiteInformation", ReplyAction="http://tempuri.org/ICompanyService/GetSiteInformationResponse")]
        System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.SiteInformation[]> GetSiteInformationAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/RemoveUserSites", ReplyAction="http://tempuri.org/ICompanyService/RemoveUserSitesResponse")]
        int RemoveUserSites(Vegam_MaintenanceModule.ipas_CompanyService.DeleteSiteRole deleteSiteRole);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/RemoveUserSites", ReplyAction="http://tempuri.org/ICompanyService/RemoveUserSitesResponse")]
        System.Threading.Tasks.Task<int> RemoveUserSitesAsync(Vegam_MaintenanceModule.ipas_CompanyService.DeleteSiteRole deleteSiteRole);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetPasswordPolicyInfo", ReplyAction="http://tempuri.org/ICompanyService/GetPasswordPolicyInfoResponse")]
        Vegam_MaintenanceModule.ipas_CompanyService.PasswordPolicy GetPasswordPolicyInfo(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.PasswordFilter passwordFilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetPasswordPolicyInfo", ReplyAction="http://tempuri.org/ICompanyService/GetPasswordPolicyInfoResponse")]
        System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.PasswordPolicy> GetPasswordPolicyInfoAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.PasswordFilter passwordFilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/SavePasswordPolicy", ReplyAction="http://tempuri.org/ICompanyService/SavePasswordPolicyResponse")]
        bool SavePasswordPolicy(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.PasswordPolicy passwordPolicy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/SavePasswordPolicy", ReplyAction="http://tempuri.org/ICompanyService/SavePasswordPolicyResponse")]
        System.Threading.Tasks.Task<bool> SavePasswordPolicyAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.PasswordPolicy passwordPolicy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/InsertBusinessUnit", ReplyAction="http://tempuri.org/ICompanyService/InsertBusinessUnitResponse")]
        bool InsertBusinessUnit(Vegam_MaintenanceModule.ipas_CompanyService.BusinessUnitBasicParam businessUnitBasicParam, Vegam_MaintenanceModule.ipas_CompanyService.BusinessUnitDetails businessUnit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/InsertBusinessUnit", ReplyAction="http://tempuri.org/ICompanyService/InsertBusinessUnitResponse")]
        System.Threading.Tasks.Task<bool> InsertBusinessUnitAsync(Vegam_MaintenanceModule.ipas_CompanyService.BusinessUnitBasicParam businessUnitBasicParam, Vegam_MaintenanceModule.ipas_CompanyService.BusinessUnitDetails businessUnit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/UpdateBusinessUnit", ReplyAction="http://tempuri.org/ICompanyService/UpdateBusinessUnitResponse")]
        bool UpdateBusinessUnit(Vegam_MaintenanceModule.ipas_CompanyService.BusinessUnitBasicParam businessUnitBasicParam, Vegam_MaintenanceModule.ipas_CompanyService.BusinessUnitDetails businessUnit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/UpdateBusinessUnit", ReplyAction="http://tempuri.org/ICompanyService/UpdateBusinessUnitResponse")]
        System.Threading.Tasks.Task<bool> UpdateBusinessUnitAsync(Vegam_MaintenanceModule.ipas_CompanyService.BusinessUnitBasicParam businessUnitBasicParam, Vegam_MaintenanceModule.ipas_CompanyService.BusinessUnitDetails businessUnit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/DeleteBusinessUnit", ReplyAction="http://tempuri.org/ICompanyService/DeleteBusinessUnitResponse")]
        bool DeleteBusinessUnit(Vegam_MaintenanceModule.ipas_CompanyService.BusinessUnitBasicParam businessUnitBasicParam);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/DeleteBusinessUnit", ReplyAction="http://tempuri.org/ICompanyService/DeleteBusinessUnitResponse")]
        System.Threading.Tasks.Task<bool> DeleteBusinessUnitAsync(Vegam_MaintenanceModule.ipas_CompanyService.BusinessUnitBasicParam businessUnitBasicParam);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetBusinessUnitDetails", ReplyAction="http://tempuri.org/ICompanyService/GetBusinessUnitDetailsResponse")]
        Vegam_MaintenanceModule.ipas_CompanyService.BusinessUnitList GetBusinessUnitDetails(Vegam_MaintenanceModule.ipas_CompanyService.BusinessUnitFilter businessUnitFilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetBusinessUnitDetails", ReplyAction="http://tempuri.org/ICompanyService/GetBusinessUnitDetailsResponse")]
        System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.BusinessUnitList> GetBusinessUnitDetailsAsync(Vegam_MaintenanceModule.ipas_CompanyService.BusinessUnitFilter businessUnitFilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/InsertSubBusinessUnit", ReplyAction="http://tempuri.org/ICompanyService/InsertSubBusinessUnitResponse")]
        bool InsertSubBusinessUnit(Vegam_MaintenanceModule.ipas_CompanyService.BusinessUnitBasicParam businessUnitBasicParam, Vegam_MaintenanceModule.ipas_CompanyService.SubBusinessUnit subBusinessUnit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/InsertSubBusinessUnit", ReplyAction="http://tempuri.org/ICompanyService/InsertSubBusinessUnitResponse")]
        System.Threading.Tasks.Task<bool> InsertSubBusinessUnitAsync(Vegam_MaintenanceModule.ipas_CompanyService.BusinessUnitBasicParam businessUnitBasicParam, Vegam_MaintenanceModule.ipas_CompanyService.SubBusinessUnit subBusinessUnit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/UpdateSubBusinessUnit", ReplyAction="http://tempuri.org/ICompanyService/UpdateSubBusinessUnitResponse")]
        bool UpdateSubBusinessUnit(Vegam_MaintenanceModule.ipas_CompanyService.BusinessUnitBasicParam businessUnitBasicParam, Vegam_MaintenanceModule.ipas_CompanyService.SubBusinessUnit subBusinessUnit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/UpdateSubBusinessUnit", ReplyAction="http://tempuri.org/ICompanyService/UpdateSubBusinessUnitResponse")]
        System.Threading.Tasks.Task<bool> UpdateSubBusinessUnitAsync(Vegam_MaintenanceModule.ipas_CompanyService.BusinessUnitBasicParam businessUnitBasicParam, Vegam_MaintenanceModule.ipas_CompanyService.SubBusinessUnit subBusinessUnit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/DeleteSubBusinessUnit", ReplyAction="http://tempuri.org/ICompanyService/DeleteSubBusinessUnitResponse")]
        bool DeleteSubBusinessUnit(Vegam_MaintenanceModule.ipas_CompanyService.BusinessUnitBasicParam businessUnitBasicParam);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/DeleteSubBusinessUnit", ReplyAction="http://tempuri.org/ICompanyService/DeleteSubBusinessUnitResponse")]
        System.Threading.Tasks.Task<bool> DeleteSubBusinessUnitAsync(Vegam_MaintenanceModule.ipas_CompanyService.BusinessUnitBasicParam businessUnitBasicParam);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetSubBusinessUnitDetails", ReplyAction="http://tempuri.org/ICompanyService/GetSubBusinessUnitDetailsResponse")]
        Vegam_MaintenanceModule.ipas_CompanyService.SubBusinessUnitList GetSubBusinessUnitDetails(Vegam_MaintenanceModule.ipas_CompanyService.BusinessUnitFilter businessUnitFilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetSubBusinessUnitDetails", ReplyAction="http://tempuri.org/ICompanyService/GetSubBusinessUnitDetailsResponse")]
        System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.SubBusinessUnitList> GetSubBusinessUnitDetailsAsync(Vegam_MaintenanceModule.ipas_CompanyService.BusinessUnitFilter businessUnitFilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetBusinessUnitList", ReplyAction="http://tempuri.org/ICompanyService/GetBusinessUnitListResponse")]
        Vegam_MaintenanceModule.ipas_CompanyService.BusinessUnit[] GetBusinessUnitList(Vegam_MaintenanceModule.ipas_CompanyService.BusinessUnitBasicParam businessUnitBasicParam);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetBusinessUnitList", ReplyAction="http://tempuri.org/ICompanyService/GetBusinessUnitListResponse")]
        System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.BusinessUnit[]> GetBusinessUnitListAsync(Vegam_MaintenanceModule.ipas_CompanyService.BusinessUnitBasicParam businessUnitBasicParam);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetSubBusinessUnitList", ReplyAction="http://tempuri.org/ICompanyService/GetSubBusinessUnitListResponse")]
        Vegam_MaintenanceModule.ipas_CompanyService.BusinessUnit[] GetSubBusinessUnitList(Vegam_MaintenanceModule.ipas_CompanyService.BusinessUnitBasicParam businessUnitBasicParam);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetSubBusinessUnitList", ReplyAction="http://tempuri.org/ICompanyService/GetSubBusinessUnitListResponse")]
        System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.BusinessUnit[]> GetSubBusinessUnitListAsync(Vegam_MaintenanceModule.ipas_CompanyService.BusinessUnitBasicParam businessUnitBasicParam);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetBartenderConfigurationDetails", ReplyAction="http://tempuri.org/ICompanyService/GetBartenderConfigurationDetailsResponse")]
        Vegam_MaintenanceModule.ipas_CompanyService.BartederServerConfigurationInfo GetBartenderConfigurationDetails(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.BartenderServerInfoFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetBartenderConfigurationDetails", ReplyAction="http://tempuri.org/ICompanyService/GetBartenderConfigurationDetailsResponse")]
        System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.BartederServerConfigurationInfo> GetBartenderConfigurationDetailsAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.BartenderServerInfoFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetBartenderServerInfoForEdit", ReplyAction="http://tempuri.org/ICompanyService/GetBartenderServerInfoForEditResponse")]
        Vegam_MaintenanceModule.ipas_CompanyService.BartenderServerInfo GetBartenderServerInfoForEdit(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.BartenderServerInfoFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetBartenderServerInfoForEdit", ReplyAction="http://tempuri.org/ICompanyService/GetBartenderServerInfoForEditResponse")]
        System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.BartenderServerInfo> GetBartenderServerInfoForEditAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.BartenderServerInfoFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/InsertOrUpdateBartenderServerInfo", ReplyAction="http://tempuri.org/ICompanyService/InsertOrUpdateBartenderServerInfoResponse")]
        int InsertOrUpdateBartenderServerInfo(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.BartenderServerInfoFilter filter, Vegam_MaintenanceModule.ipas_CompanyService.BartenderServerInfo bartenderServerInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/InsertOrUpdateBartenderServerInfo", ReplyAction="http://tempuri.org/ICompanyService/InsertOrUpdateBartenderServerInfoResponse")]
        System.Threading.Tasks.Task<int> InsertOrUpdateBartenderServerInfoAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.BartenderServerInfoFilter filter, Vegam_MaintenanceModule.ipas_CompanyService.BartenderServerInfo bartenderServerInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/UpdateFailPrintAttemptAndReprintInterval", ReplyAction="http://tempuri.org/ICompanyService/UpdateFailPrintAttemptAndReprintIntervalRespon" +
            "se")]
        bool UpdateFailPrintAttemptAndReprintInterval(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.BartenderServerInfoFilter filter, Vegam_MaintenanceModule.ipas_CompanyService.BartenderServerFailPrintInfo failPrintInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/UpdateFailPrintAttemptAndReprintInterval", ReplyAction="http://tempuri.org/ICompanyService/UpdateFailPrintAttemptAndReprintIntervalRespon" +
            "se")]
        System.Threading.Tasks.Task<bool> UpdateFailPrintAttemptAndReprintIntervalAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.BartenderServerInfoFilter filter, Vegam_MaintenanceModule.ipas_CompanyService.BartenderServerFailPrintInfo failPrintInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/DeleteBartenderServerInfo", ReplyAction="http://tempuri.org/ICompanyService/DeleteBartenderServerInfoResponse")]
        bool DeleteBartenderServerInfo(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.BartenderServerInfoFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/DeleteBartenderServerInfo", ReplyAction="http://tempuri.org/ICompanyService/DeleteBartenderServerInfoResponse")]
        System.Threading.Tasks.Task<bool> DeleteBartenderServerInfoAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.BartenderServerInfoFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetBartenderServerErrorLogInfo", ReplyAction="http://tempuri.org/ICompanyService/GetBartenderServerErrorLogInfoResponse")]
        Vegam_MaintenanceModule.ipas_CompanyService.BartenderServerErrorDetails GetBartenderServerErrorLogInfo(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.BartenderServerErrorLogFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetBartenderServerErrorLogInfo", ReplyAction="http://tempuri.org/ICompanyService/GetBartenderServerErrorLogInfoResponse")]
        System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.BartenderServerErrorDetails> GetBartenderServerErrorLogInfoAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.BartenderServerErrorLogFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetCompanySites", ReplyAction="http://tempuri.org/ICompanyService/GetCompanySitesResponse")]
        Vegam_MaintenanceModule.ipas_CompanyService.CompanySites[] GetCompanySites(Vegam_MaintenanceModule.ipas_CompanyService.BartenderServerInfoFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetCompanySites", ReplyAction="http://tempuri.org/ICompanyService/GetCompanySitesResponse")]
        System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.CompanySites[]> GetCompanySitesAsync(Vegam_MaintenanceModule.ipas_CompanyService.BartenderServerInfoFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetPrintServers", ReplyAction="http://tempuri.org/ICompanyService/GetPrintServersResponse")]
        Vegam_MaintenanceModule.ipas_CompanyService.PrintServerBasicInfo[] GetPrintServers(Vegam_MaintenanceModule.ipas_CompanyService.BartenderServerInfoFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetPrintServers", ReplyAction="http://tempuri.org/ICompanyService/GetPrintServersResponse")]
        System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.PrintServerBasicInfo[]> GetPrintServersAsync(Vegam_MaintenanceModule.ipas_CompanyService.BartenderServerInfoFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetSitePrintServers", ReplyAction="http://tempuri.org/ICompanyService/GetSitePrintServersResponse")]
        Vegam_MaintenanceModule.ipas_CompanyService.SitePrintServerList GetSitePrintServers(Vegam_MaintenanceModule.ipas_CompanyService.SitePrintServerFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/GetSitePrintServers", ReplyAction="http://tempuri.org/ICompanyService/GetSitePrintServersResponse")]
        System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.SitePrintServerList> GetSitePrintServersAsync(Vegam_MaintenanceModule.ipas_CompanyService.SitePrintServerFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/AddOrUpdateSitePrintServer", ReplyAction="http://tempuri.org/ICompanyService/AddOrUpdateSitePrintServerResponse")]
        bool AddOrUpdateSitePrintServer(Vegam_MaintenanceModule.ipas_CompanyService.SitePrintServerInfo sitePrintServerInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/AddOrUpdateSitePrintServer", ReplyAction="http://tempuri.org/ICompanyService/AddOrUpdateSitePrintServerResponse")]
        System.Threading.Tasks.Task<bool> AddOrUpdateSitePrintServerAsync(Vegam_MaintenanceModule.ipas_CompanyService.SitePrintServerInfo sitePrintServerInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/DeleteSitePrintServer", ReplyAction="http://tempuri.org/ICompanyService/DeleteSitePrintServerResponse")]
        bool DeleteSitePrintServer(Vegam_MaintenanceModule.ipas_CompanyService.SitePrintServerFilter sitePrintServerFilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyService/DeleteSitePrintServer", ReplyAction="http://tempuri.org/ICompanyService/DeleteSitePrintServerResponse")]
        System.Threading.Tasks.Task<bool> DeleteSitePrintServerAsync(Vegam_MaintenanceModule.ipas_CompanyService.SitePrintServerFilter sitePrintServerFilter);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICompanyServiceChannel : Vegam_MaintenanceModule.ipas_CompanyService.ICompanyService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CompanyServiceClient : System.ServiceModel.ClientBase<Vegam_MaintenanceModule.ipas_CompanyService.ICompanyService>, Vegam_MaintenanceModule.ipas_CompanyService.ICompanyService {
        
        public CompanyServiceClient() {
        }
        
        public CompanyServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CompanyServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CompanyServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CompanyServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int InsertUpdateAttributeInfo(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.MeasuringAttributeInfo measuringAttributeInfo) {
            return base.Channel.InsertUpdateAttributeInfo(basicParam, measuringAttributeInfo);
        }
        
        public System.Threading.Tasks.Task<int> InsertUpdateAttributeInfoAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.MeasuringAttributeInfo measuringAttributeInfo) {
            return base.Channel.InsertUpdateAttributeInfoAsync(basicParam, measuringAttributeInfo);
        }
        
        public Vegam_MaintenanceModule.ipas_CompanyService.SensorTypeList GetSensorTypes(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.SensorTypeForFilter sensorTypeForEdit) {
            return base.Channel.GetSensorTypes(basicParam, sensorTypeForEdit);
        }
        
        public System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.SensorTypeList> GetSensorTypesAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.SensorTypeForFilter sensorTypeForEdit) {
            return base.Channel.GetSensorTypesAsync(basicParam, sensorTypeForEdit);
        }
        
        public Vegam_MaintenanceModule.ipas_CompanyService.MeasuringAttributeList GetMeasuringAttributeInfo(Vegam_MaintenanceModule.ipas_CompanyService.MeasuringAttributeFilter attributeFilter) {
            return base.Channel.GetMeasuringAttributeInfo(attributeFilter);
        }
        
        public System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.MeasuringAttributeList> GetMeasuringAttributeInfoAsync(Vegam_MaintenanceModule.ipas_CompanyService.MeasuringAttributeFilter attributeFilter) {
            return base.Channel.GetMeasuringAttributeInfoAsync(attributeFilter);
        }
        
        public Vegam_MaintenanceModule.ipas_CompanyService.MeasuringAttributeInfo GetConfiguredAttrInfoForEdit(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, int measuringAttributeID, int companyID) {
            return base.Channel.GetConfiguredAttrInfoForEdit(basicParam, measuringAttributeID, companyID);
        }
        
        public System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.MeasuringAttributeInfo> GetConfiguredAttrInfoForEditAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, int measuringAttributeID, int companyID) {
            return base.Channel.GetConfiguredAttrInfoForEditAsync(basicParam, measuringAttributeID, companyID);
        }
        
        public int DeleteAttributeInfo(int measuringAttributeID, int companyID, int userID) {
            return base.Channel.DeleteAttributeInfo(measuringAttributeID, companyID, userID);
        }
        
        public System.Threading.Tasks.Task<int> DeleteAttributeInfoAsync(int measuringAttributeID, int companyID, int userID) {
            return base.Channel.DeleteAttributeInfoAsync(measuringAttributeID, companyID, userID);
        }
        
        public Vegam_MaintenanceModule.ipas_CompanyService.SensorTypeUOMList GetSensorTypeUomList(Vegam_MaintenanceModule.ipas_CompanyService.MeasuringAttributeFilter filterForEdit) {
            return base.Channel.GetSensorTypeUomList(filterForEdit);
        }
        
        public System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.SensorTypeUOMList> GetSensorTypeUomListAsync(Vegam_MaintenanceModule.ipas_CompanyService.MeasuringAttributeFilter filterForEdit) {
            return base.Channel.GetSensorTypeUomListAsync(filterForEdit);
        }
        
        public int InsertUpdateSensorTypeUOMInfo(Vegam_MaintenanceModule.ipas_CompanyService.SensorTypeUOMInfo sensorTypeUOMInfo, Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam) {
            return base.Channel.InsertUpdateSensorTypeUOMInfo(sensorTypeUOMInfo, basicParam);
        }
        
        public System.Threading.Tasks.Task<int> InsertUpdateSensorTypeUOMInfoAsync(Vegam_MaintenanceModule.ipas_CompanyService.SensorTypeUOMInfo sensorTypeUOMInfo, Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam) {
            return base.Channel.InsertUpdateSensorTypeUOMInfoAsync(sensorTypeUOMInfo, basicParam);
        }
        
        public Vegam_MaintenanceModule.ipas_CompanyService.SensorTypeUOMInfo GetSensorTypeInfo(int sensorTypeID, int companyID) {
            return base.Channel.GetSensorTypeInfo(sensorTypeID, companyID);
        }
        
        public System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.SensorTypeUOMInfo> GetSensorTypeInfoAsync(int sensorTypeID, int companyID) {
            return base.Channel.GetSensorTypeInfoAsync(sensorTypeID, companyID);
        }
        
        public int DeleteSensorType(int sensorTypeID, int companyID, int userID) {
            return base.Channel.DeleteSensorType(sensorTypeID, companyID, userID);
        }
        
        public System.Threading.Tasks.Task<int> DeleteSensorTypeAsync(int sensorTypeID, int companyID, int userID) {
            return base.Channel.DeleteSensorTypeAsync(sensorTypeID, companyID, userID);
        }
        
        public int DeleteSensorTypeUOM(int uomID, int userID) {
            return base.Channel.DeleteSensorTypeUOM(uomID, userID);
        }
        
        public System.Threading.Tasks.Task<int> DeleteSensorTypeUOMAsync(int uomID, int userID) {
            return base.Channel.DeleteSensorTypeUOMAsync(uomID, userID);
        }
        
        public string DownloadMeasuringAttributeTemplate(Vegam_MaintenanceModule.ipas_CompanyService.MeasuringAttributeFilter attrFilter) {
            return base.Channel.DownloadMeasuringAttributeTemplate(attrFilter);
        }
        
        public System.Threading.Tasks.Task<string> DownloadMeasuringAttributeTemplateAsync(Vegam_MaintenanceModule.ipas_CompanyService.MeasuringAttributeFilter attrFilter) {
            return base.Channel.DownloadMeasuringAttributeTemplateAsync(attrFilter);
        }
        
        public string DownloadAllConfiguredMeasuringAttribute(Vegam_MaintenanceModule.ipas_CompanyService.MeasuringAttributeFilter attrFilter) {
            return base.Channel.DownloadAllConfiguredMeasuringAttribute(attrFilter);
        }
        
        public System.Threading.Tasks.Task<string> DownloadAllConfiguredMeasuringAttributeAsync(Vegam_MaintenanceModule.ipas_CompanyService.MeasuringAttributeFilter attrFilter) {
            return base.Channel.DownloadAllConfiguredMeasuringAttributeAsync(attrFilter);
        }
        
        public string SyncMeasuringAttributeFromExcel(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.MeasuringAttributeFilter attrFilter, string fileName) {
            return base.Channel.SyncMeasuringAttributeFromExcel(basicParam, attrFilter, fileName);
        }
        
        public System.Threading.Tasks.Task<string> SyncMeasuringAttributeFromExcelAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.MeasuringAttributeFilter attrFilter, string fileName) {
            return base.Channel.SyncMeasuringAttributeFromExcelAsync(basicParam, attrFilter, fileName);
        }
        
        public Vegam_MaintenanceModule.ipas_CompanyService.DefectListInfo GetDefectInfo(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.DefectInfoFilter defectInfoFilter) {
            return base.Channel.GetDefectInfo(basicParam, defectInfoFilter);
        }
        
        public System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.DefectListInfo> GetDefectInfoAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.DefectInfoFilter defectInfoFilter) {
            return base.Channel.GetDefectInfoAsync(basicParam, defectInfoFilter);
        }
        
        public int InsertOrUpdateDefectInfo(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.DefectInfo defectInfo) {
            return base.Channel.InsertOrUpdateDefectInfo(basicParam, defectInfo);
        }
        
        public System.Threading.Tasks.Task<int> InsertOrUpdateDefectInfoAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.DefectInfo defectInfo) {
            return base.Channel.InsertOrUpdateDefectInfoAsync(basicParam, defectInfo);
        }
        
        public bool DeleteDefect(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, int defectID) {
            return base.Channel.DeleteDefect(basicParam, defectID);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteDefectAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, int defectID) {
            return base.Channel.DeleteDefectAsync(basicParam, defectID);
        }
        
        public Vegam_MaintenanceModule.ipas_CompanyService.DefectAgencyInfoList GetDefectAgencyInfo(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.DefectAgencyFillter defectAgencyFillter) {
            return base.Channel.GetDefectAgencyInfo(basicParam, defectAgencyFillter);
        }
        
        public System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.DefectAgencyInfoList> GetDefectAgencyInfoAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.DefectAgencyFillter defectAgencyFillter) {
            return base.Channel.GetDefectAgencyInfoAsync(basicParam, defectAgencyFillter);
        }
        
        public int InsertOrUpdateDefectAgency(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.DefectAgency defectAgency) {
            return base.Channel.InsertOrUpdateDefectAgency(basicParam, defectAgency);
        }
        
        public System.Threading.Tasks.Task<int> InsertOrUpdateDefectAgencyAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.DefectAgency defectAgency) {
            return base.Channel.InsertOrUpdateDefectAgencyAsync(basicParam, defectAgency);
        }
        
        public bool DeleteDefectAgency(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, int defectAgencyID) {
            return base.Channel.DeleteDefectAgency(basicParam, defectAgencyID);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteDefectAgencyAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, int defectAgencyID) {
            return base.Channel.DeleteDefectAgencyAsync(basicParam, defectAgencyID);
        }
        
        public Vegam_MaintenanceModule.ipas_CompanyService.DefectSourceInfoList GetDefectSourceInfo(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.DefectSourceFilter defectSourceFilter) {
            return base.Channel.GetDefectSourceInfo(basicParam, defectSourceFilter);
        }
        
        public System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.DefectSourceInfoList> GetDefectSourceInfoAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.DefectSourceFilter defectSourceFilter) {
            return base.Channel.GetDefectSourceInfoAsync(basicParam, defectSourceFilter);
        }
        
        public int InsertOrUpdateDefectSources(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.DefectSource defectSource) {
            return base.Channel.InsertOrUpdateDefectSources(basicParam, defectSource);
        }
        
        public System.Threading.Tasks.Task<int> InsertOrUpdateDefectSourcesAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.DefectSource defectSource) {
            return base.Channel.InsertOrUpdateDefectSourcesAsync(basicParam, defectSource);
        }
        
        public bool DeleteDefectSource(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, int defectSourceID) {
            return base.Channel.DeleteDefectSource(basicParam, defectSourceID);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteDefectSourceAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, int defectSourceID) {
            return base.Channel.DeleteDefectSourceAsync(basicParam, defectSourceID);
        }
        
        public string UploadDefectInfo(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, int companyID, string fileName) {
            return base.Channel.UploadDefectInfo(basicParam, companyID, fileName);
        }
        
        public System.Threading.Tasks.Task<string> UploadDefectInfoAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, int companyID, string fileName) {
            return base.Channel.UploadDefectInfoAsync(basicParam, companyID, fileName);
        }
        
        public string DownloadDefectInfo(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.DefectInfoFilter defectInfoFilter) {
            return base.Channel.DownloadDefectInfo(basicParam, defectInfoFilter);
        }
        
        public System.Threading.Tasks.Task<string> DownloadDefectInfoAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.DefectInfoFilter defectInfoFilter) {
            return base.Channel.DownloadDefectInfoAsync(basicParam, defectInfoFilter);
        }
        
        public string UploadDefectSource(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, int companyID, string fileName) {
            return base.Channel.UploadDefectSource(basicParam, companyID, fileName);
        }
        
        public System.Threading.Tasks.Task<string> UploadDefectSourceAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, int companyID, string fileName) {
            return base.Channel.UploadDefectSourceAsync(basicParam, companyID, fileName);
        }
        
        public string DownloadDefectSource(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.DefectSourceFilter defectSourceFilter) {
            return base.Channel.DownloadDefectSource(basicParam, defectSourceFilter);
        }
        
        public System.Threading.Tasks.Task<string> DownloadDefectSourceAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.DefectSourceFilter defectSourceFilter) {
            return base.Channel.DownloadDefectSourceAsync(basicParam, defectSourceFilter);
        }
        
        public string UploadDefectAgency(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, int companyID, string fileName) {
            return base.Channel.UploadDefectAgency(basicParam, companyID, fileName);
        }
        
        public System.Threading.Tasks.Task<string> UploadDefectAgencyAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, int companyID, string fileName) {
            return base.Channel.UploadDefectAgencyAsync(basicParam, companyID, fileName);
        }
        
        public string DownloadDefectAgency(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.DefectAgencyFillter defectAgencyFilter) {
            return base.Channel.DownloadDefectAgency(basicParam, defectAgencyFilter);
        }
        
        public System.Threading.Tasks.Task<string> DownloadDefectAgencyAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.DefectAgencyFillter defectAgencyFilter) {
            return base.Channel.DownloadDefectAgencyAsync(basicParam, defectAgencyFilter);
        }
        
        public Vegam_MaintenanceModule.ipas_CompanyService.QualityDecisionList GetQualityDecisionInfo(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.QualityDecisionFilter qualityDecisionFilter) {
            return base.Channel.GetQualityDecisionInfo(basicParam, qualityDecisionFilter);
        }
        
        public System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.QualityDecisionList> GetQualityDecisionInfoAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.QualityDecisionFilter qualityDecisionFilter) {
            return base.Channel.GetQualityDecisionInfoAsync(basicParam, qualityDecisionFilter);
        }
        
        public Vegam_MaintenanceModule.ipas_CompanyService.QualityDecisionsFields GetQualityDecisionForEdit(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, int qualityDecisionID) {
            return base.Channel.GetQualityDecisionForEdit(basicParam, qualityDecisionID);
        }
        
        public System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.QualityDecisionsFields> GetQualityDecisionForEditAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, int qualityDecisionID) {
            return base.Channel.GetQualityDecisionForEditAsync(basicParam, qualityDecisionID);
        }
        
        public int InsertOrUpdateQualityDecisions(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.QualityDecisionsFields qualityDecisionsFields) {
            return base.Channel.InsertOrUpdateQualityDecisions(basicParam, qualityDecisionsFields);
        }
        
        public System.Threading.Tasks.Task<int> InsertOrUpdateQualityDecisionsAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.QualityDecisionsFields qualityDecisionsFields) {
            return base.Channel.InsertOrUpdateQualityDecisionsAsync(basicParam, qualityDecisionsFields);
        }
        
        public bool DeleteQualityDecisionCode(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, int qualityDecisionID) {
            return base.Channel.DeleteQualityDecisionCode(basicParam, qualityDecisionID);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteQualityDecisionCodeAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, int qualityDecisionID) {
            return base.Channel.DeleteQualityDecisionCodeAsync(basicParam, qualityDecisionID);
        }
        
        public string UploadQualityDecisionList(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, int companyID, string fileName) {
            return base.Channel.UploadQualityDecisionList(basicParam, companyID, fileName);
        }
        
        public System.Threading.Tasks.Task<string> UploadQualityDecisionListAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, int companyID, string fileName) {
            return base.Channel.UploadQualityDecisionListAsync(basicParam, companyID, fileName);
        }
        
        public string DownloadQualityDecisionsList(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.QualityDecisionFilter qualityDecisionFilter) {
            return base.Channel.DownloadQualityDecisionsList(basicParam, qualityDecisionFilter);
        }
        
        public System.Threading.Tasks.Task<string> DownloadQualityDecisionsListAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.QualityDecisionFilter qualityDecisionFilter) {
            return base.Channel.DownloadQualityDecisionsListAsync(basicParam, qualityDecisionFilter);
        }
        
        public Vegam_MaintenanceModule.ipas_CompanyService.ObjectInfoList GetObjectInfo(Vegam_MaintenanceModule.ipas_CompanyService.ObjectInfoFilter objectFilter) {
            return base.Channel.GetObjectInfo(objectFilter);
        }
        
        public System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.ObjectInfoList> GetObjectInfoAsync(Vegam_MaintenanceModule.ipas_CompanyService.ObjectInfoFilter objectFilter) {
            return base.Channel.GetObjectInfoAsync(objectFilter);
        }
        
        public bool DeleteObjectInfo(int objectID) {
            return base.Channel.DeleteObjectInfo(objectID);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteObjectInfoAsync(int objectID) {
            return base.Channel.DeleteObjectInfoAsync(objectID);
        }
        
        public string UploadObjectInfo(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.ObjectInfo objectInfo, string fileName) {
            return base.Channel.UploadObjectInfo(basicParam, objectInfo, fileName);
        }
        
        public System.Threading.Tasks.Task<string> UploadObjectInfoAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.ObjectInfo objectInfo, string fileName) {
            return base.Channel.UploadObjectInfoAsync(basicParam, objectInfo, fileName);
        }
        
        public string DownloadObjectInfo(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.ObjectInfo objectInfo) {
            return base.Channel.DownloadObjectInfo(basicParam, objectInfo);
        }
        
        public System.Threading.Tasks.Task<string> DownloadObjectInfoAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.ObjectInfo objectInfo) {
            return base.Channel.DownloadObjectInfoAsync(basicParam, objectInfo);
        }
        
        public Vegam_MaintenanceModule.ipas_CompanyService.DynamicGridFeatureFieldInfo GetDynamicGridFieldInfo(Vegam_MaintenanceModule.ipas_CompanyService.DynamicGridFilter basicInfo) {
            return base.Channel.GetDynamicGridFieldInfo(basicInfo);
        }
        
        public System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.DynamicGridFeatureFieldInfo> GetDynamicGridFieldInfoAsync(Vegam_MaintenanceModule.ipas_CompanyService.DynamicGridFilter basicInfo) {
            return base.Channel.GetDynamicGridFieldInfoAsync(basicInfo);
        }
        
        public Vegam_MaintenanceModule.ipas_CompanyService.DynamicGridContentInfo GetDynamicGridContent(Vegam_MaintenanceModule.ipas_CompanyService.DynamicGridFilter gridfilter, Vegam_MaintenanceModule.ipas_CompanyService.DynamicGridContentFilter contentFilter) {
            return base.Channel.GetDynamicGridContent(gridfilter, contentFilter);
        }
        
        public System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.DynamicGridContentInfo> GetDynamicGridContentAsync(Vegam_MaintenanceModule.ipas_CompanyService.DynamicGridFilter gridfilter, Vegam_MaintenanceModule.ipas_CompanyService.DynamicGridContentFilter contentFilter) {
            return base.Channel.GetDynamicGridContentAsync(gridfilter, contentFilter);
        }
        
        public Vegam_MaintenanceModule.ipas_CompanyService.TypeValueInfo[] GetFilterTypeValues(Vegam_MaintenanceModule.ipas_CompanyService.DynamicGridFilter filter, Vegam_MaintenanceModule.ipas_CompanyService.DynamicGridTypeValueFilter typeValueFilter) {
            return base.Channel.GetFilterTypeValues(filter, typeValueFilter);
        }
        
        public System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.TypeValueInfo[]> GetFilterTypeValuesAsync(Vegam_MaintenanceModule.ipas_CompanyService.DynamicGridFilter filter, Vegam_MaintenanceModule.ipas_CompanyService.DynamicGridTypeValueFilter typeValueFilter) {
            return base.Channel.GetFilterTypeValuesAsync(filter, typeValueFilter);
        }
        
        public string DynamicGridContentExcelDownload(Vegam_MaintenanceModule.ipas_CompanyService.DynamicGridFilter filter, Vegam_MaintenanceModule.ipas_CompanyService.DynamicGridContentFilter contentFilter) {
            return base.Channel.DynamicGridContentExcelDownload(filter, contentFilter);
        }
        
        public System.Threading.Tasks.Task<string> DynamicGridContentExcelDownloadAsync(Vegam_MaintenanceModule.ipas_CompanyService.DynamicGridFilter filter, Vegam_MaintenanceModule.ipas_CompanyService.DynamicGridContentFilter contentFilter) {
            return base.Channel.DynamicGridContentExcelDownloadAsync(filter, contentFilter);
        }
        
        public Vegam_MaintenanceModule.ipas_CompanyService.UserViewFieldInfo[] GetUserViewFields(Vegam_MaintenanceModule.ipas_CompanyService.DynamicGridFilter filter) {
            return base.Channel.GetUserViewFields(filter);
        }
        
        public System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.UserViewFieldInfo[]> GetUserViewFieldsAsync(Vegam_MaintenanceModule.ipas_CompanyService.DynamicGridFilter filter) {
            return base.Channel.GetUserViewFieldsAsync(filter);
        }
        
        public int InserUserView(Vegam_MaintenanceModule.ipas_CompanyService.DynamicGridFilter filter, Vegam_MaintenanceModule.ipas_CompanyService.UserViewInfo userViewInfo) {
            return base.Channel.InserUserView(filter, userViewInfo);
        }
        
        public System.Threading.Tasks.Task<int> InserUserViewAsync(Vegam_MaintenanceModule.ipas_CompanyService.DynamicGridFilter filter, Vegam_MaintenanceModule.ipas_CompanyService.UserViewInfo userViewInfo) {
            return base.Channel.InserUserViewAsync(filter, userViewInfo);
        }
        
        public bool DeleteUserView(Vegam_MaintenanceModule.ipas_CompanyService.DynamicGridFilter filter) {
            return base.Channel.DeleteUserView(filter);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteUserViewAsync(Vegam_MaintenanceModule.ipas_CompanyService.DynamicGridFilter filter) {
            return base.Channel.DeleteUserViewAsync(filter);
        }
        
        public Vegam_MaintenanceModule.ipas_CompanyService.DepartmentBasicInfo[] GetDepartmentsInfo(Vegam_MaintenanceModule.ipas_CompanyService.CompanyDepartmentBasicInfo companyDepartmentBasicInfo) {
            return base.Channel.GetDepartmentsInfo(companyDepartmentBasicInfo);
        }
        
        public System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.DepartmentBasicInfo[]> GetDepartmentsInfoAsync(Vegam_MaintenanceModule.ipas_CompanyService.CompanyDepartmentBasicInfo companyDepartmentBasicInfo) {
            return base.Channel.GetDepartmentsInfoAsync(companyDepartmentBasicInfo);
        }
        
        public Vegam_MaintenanceModule.ipas_CompanyService.DepartmentList GetDepartmentDetails(int userID, int companyID, Vegam_MaintenanceModule.ipas_CompanyService.DepartmentFilter filter) {
            return base.Channel.GetDepartmentDetails(userID, companyID, filter);
        }
        
        public System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.DepartmentList> GetDepartmentDetailsAsync(int userID, int companyID, Vegam_MaintenanceModule.ipas_CompanyService.DepartmentFilter filter) {
            return base.Channel.GetDepartmentDetailsAsync(userID, companyID, filter);
        }
        
        public int InsertDepartment(Vegam_MaintenanceModule.ipas_CompanyService.DepartmentInfo departmentinfo, Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam) {
            return base.Channel.InsertDepartment(departmentinfo, basicParam);
        }
        
        public System.Threading.Tasks.Task<int> InsertDepartmentAsync(Vegam_MaintenanceModule.ipas_CompanyService.DepartmentInfo departmentinfo, Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam) {
            return base.Channel.InsertDepartmentAsync(departmentinfo, basicParam);
        }
        
        public int UpdateDepartment(Vegam_MaintenanceModule.ipas_CompanyService.DepartmentInfo departmentInfo, Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam) {
            return base.Channel.UpdateDepartment(departmentInfo, basicParam);
        }
        
        public System.Threading.Tasks.Task<int> UpdateDepartmentAsync(Vegam_MaintenanceModule.ipas_CompanyService.DepartmentInfo departmentInfo, Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam) {
            return base.Channel.UpdateDepartmentAsync(departmentInfo, basicParam);
        }
        
        public int DeleteDepartment(int departmentID, Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam) {
            return base.Channel.DeleteDepartment(departmentID, basicParam);
        }
        
        public System.Threading.Tasks.Task<int> DeleteDepartmentAsync(int departmentID, Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam) {
            return base.Channel.DeleteDepartmentAsync(departmentID, basicParam);
        }
        
        public Vegam_MaintenanceModule.ipas_CompanyService.Department[] GetDepartmentsInfoForExistingRoles(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, int companyID) {
            return base.Channel.GetDepartmentsInfoForExistingRoles(basicParam, companyID);
        }
        
        public System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.Department[]> GetDepartmentsInfoForExistingRolesAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, int companyID) {
            return base.Channel.GetDepartmentsInfoForExistingRolesAsync(basicParam, companyID);
        }
        
        public Vegam_MaintenanceModule.ipas_CompanyService.AccessLevelInfo[] GetAccessLevelForRole(int userID) {
            return base.Channel.GetAccessLevelForRole(userID);
        }
        
        public System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.AccessLevelInfo[]> GetAccessLevelForRoleAsync(int userID) {
            return base.Channel.GetAccessLevelForRoleAsync(userID);
        }
        
        public Vegam_MaintenanceModule.ipas_CompanyService.RoleInfo[] GetRolesForCompany(int siteID, int userID, int departmentID, int companyID) {
            return base.Channel.GetRolesForCompany(siteID, userID, departmentID, companyID);
        }
        
        public System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.RoleInfo[]> GetRolesForCompanyAsync(int siteID, int userID, int departmentID, int companyID) {
            return base.Channel.GetRolesForCompanyAsync(siteID, userID, departmentID, companyID);
        }
        
        public bool UpdateRoleOrder(int siteID, int userID, Vegam_MaintenanceModule.ipas_CompanyService.Role[] roleList, int departmentID, int companyID) {
            return base.Channel.UpdateRoleOrder(siteID, userID, roleList, departmentID, companyID);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateRoleOrderAsync(int siteID, int userID, Vegam_MaintenanceModule.ipas_CompanyService.Role[] roleList, int departmentID, int companyID) {
            return base.Channel.UpdateRoleOrderAsync(siteID, userID, roleList, departmentID, companyID);
        }
        
        public int DeleteRole(int userID, int roleID) {
            return base.Channel.DeleteRole(userID, roleID);
        }
        
        public System.Threading.Tasks.Task<int> DeleteRoleAsync(int userID, int roleID) {
            return base.Channel.DeleteRoleAsync(userID, roleID);
        }
        
        public bool CheckRoleExists(int siteID, int userID, string roleName, int departmentID, int companyID) {
            return base.Channel.CheckRoleExists(siteID, userID, roleName, departmentID, companyID);
        }
        
        public System.Threading.Tasks.Task<bool> CheckRoleExistsAsync(int siteID, int userID, string roleName, int departmentID, int companyID) {
            return base.Channel.CheckRoleExistsAsync(siteID, userID, roleName, departmentID, companyID);
        }
        
        public bool InsertRole(int siteID, Vegam_MaintenanceModule.ipas_CompanyService.RoleInfo roleInfo) {
            return base.Channel.InsertRole(siteID, roleInfo);
        }
        
        public System.Threading.Tasks.Task<bool> InsertRoleAsync(int siteID, Vegam_MaintenanceModule.ipas_CompanyService.RoleInfo roleInfo) {
            return base.Channel.InsertRoleAsync(siteID, roleInfo);
        }
        
        public bool InsertRoleTask(int siteID, int userID, Vegam_MaintenanceModule.ipas_CompanyService.RoleTaskInfo[] roleTaskInfoList) {
            return base.Channel.InsertRoleTask(siteID, userID, roleTaskInfoList);
        }
        
        public System.Threading.Tasks.Task<bool> InsertRoleTaskAsync(int siteID, int userID, Vegam_MaintenanceModule.ipas_CompanyService.RoleTaskInfo[] roleTaskInfoList) {
            return base.Channel.InsertRoleTaskAsync(siteID, userID, roleTaskInfoList);
        }
        
        public Vegam_MaintenanceModule.ipas_CompanyService.RoleTaskInfo[] GetAllTasks(int siteID, int userID, int accessLevelID, int roleID) {
            return base.Channel.GetAllTasks(siteID, userID, accessLevelID, roleID);
        }
        
        public System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.RoleTaskInfo[]> GetAllTasksAsync(int siteID, int userID, int accessLevelID, int roleID) {
            return base.Channel.GetAllTasksAsync(siteID, userID, accessLevelID, roleID);
        }
        
        public bool DeleteRoleTask(int siteID, int userID, int roleID) {
            return base.Channel.DeleteRoleTask(siteID, userID, roleID);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteRoleTaskAsync(int siteID, int userID, int roleID) {
            return base.Channel.DeleteRoleTaskAsync(siteID, userID, roleID);
        }
        
        public Vegam_MaintenanceModule.ipas_CompanyService.Department[] GetDepartments(int siteID, int userID, string companyID) {
            return base.Channel.GetDepartments(siteID, userID, companyID);
        }
        
        public System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.Department[]> GetDepartmentsAsync(int siteID, int userID, string companyID) {
            return base.Channel.GetDepartmentsAsync(siteID, userID, companyID);
        }
        
        public Vegam_MaintenanceModule.ipas_CompanyService.DepartmentRole[] GetRolesforDept(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.DepartmentRolesFilter departmentRolesFilter) {
            return base.Channel.GetRolesforDept(basicParam, departmentRolesFilter);
        }
        
        public System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.DepartmentRole[]> GetRolesforDeptAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.DepartmentRolesFilter departmentRolesFilter) {
            return base.Channel.GetRolesforDeptAsync(basicParam, departmentRolesFilter);
        }
        
        public Vegam_MaintenanceModule.ipas_CompanyService.TaskInfo[] GetTasksforRole(int siteID, int userID, int accessLevelID) {
            return base.Channel.GetTasksforRole(siteID, userID, accessLevelID);
        }
        
        public System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.TaskInfo[]> GetTasksforRoleAsync(int siteID, int userID, int accessLevelID) {
            return base.Channel.GetTasksforRoleAsync(siteID, userID, accessLevelID);
        }
        
        public string[] GetTaskCategries(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.TaskCategoryFilter taskCategoryFilter) {
            return base.Channel.GetTaskCategries(basicParam, taskCategoryFilter);
        }
        
        public System.Threading.Tasks.Task<string[]> GetTaskCategriesAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.TaskCategoryFilter taskCategoryFilter) {
            return base.Channel.GetTaskCategriesAsync(basicParam, taskCategoryFilter);
        }
        
        public Vegam_MaintenanceModule.ipas_CompanyService.RoleTaskInfo[] GetCategoryTasks(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.RoleTasksFilter roleTasksFilter) {
            return base.Channel.GetCategoryTasks(basicParam, roleTasksFilter);
        }
        
        public System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.RoleTaskInfo[]> GetCategoryTasksAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.RoleTasksFilter roleTasksFilter) {
            return base.Channel.GetCategoryTasksAsync(basicParam, roleTasksFilter);
        }
        
        public bool InsertOrUpdateRoleTaskAccess(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.RoleTaskAccess roleTaskAccess) {
            return base.Channel.InsertOrUpdateRoleTaskAccess(basicParam, roleTaskAccess);
        }
        
        public System.Threading.Tasks.Task<bool> InsertOrUpdateRoleTaskAccessAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.RoleTaskAccess roleTaskAccess) {
            return base.Channel.InsertOrUpdateRoleTaskAccessAsync(basicParam, roleTaskAccess);
        }
        
        public Vegam_MaintenanceModule.ipas_CompanyService.CompanyTechnologyList GetCompanyTechnologyList(Vegam_MaintenanceModule.ipas_CompanyService.CompanyTechnologyFilter filterInfo) {
            return base.Channel.GetCompanyTechnologyList(filterInfo);
        }
        
        public System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.CompanyTechnologyList> GetCompanyTechnologyListAsync(Vegam_MaintenanceModule.ipas_CompanyService.CompanyTechnologyFilter filterInfo) {
            return base.Channel.GetCompanyTechnologyListAsync(filterInfo);
        }
        
        public bool InsertCompanyTechnology(int companyID, int userID, Vegam_MaintenanceModule.ipas_CompanyService.CompanyTechnologyDetail CompanyTechnologyInfo) {
            return base.Channel.InsertCompanyTechnology(companyID, userID, CompanyTechnologyInfo);
        }
        
        public System.Threading.Tasks.Task<bool> InsertCompanyTechnologyAsync(int companyID, int userID, Vegam_MaintenanceModule.ipas_CompanyService.CompanyTechnologyDetail CompanyTechnologyInfo) {
            return base.Channel.InsertCompanyTechnologyAsync(companyID, userID, CompanyTechnologyInfo);
        }
        
        public bool UpdateCompanyTechnology(int companyID, int userID, Vegam_MaintenanceModule.ipas_CompanyService.CompanyTechnologyDetail CompanyTechnologyInfo) {
            return base.Channel.UpdateCompanyTechnology(companyID, userID, CompanyTechnologyInfo);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateCompanyTechnologyAsync(int companyID, int userID, Vegam_MaintenanceModule.ipas_CompanyService.CompanyTechnologyDetail CompanyTechnologyInfo) {
            return base.Channel.UpdateCompanyTechnologyAsync(companyID, userID, CompanyTechnologyInfo);
        }
        
        public bool DeleteCompanyTechnology(int companyID, int userID, int technologyID) {
            return base.Channel.DeleteCompanyTechnology(companyID, userID, technologyID);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteCompanyTechnologyAsync(int companyID, int userID, int technologyID) {
            return base.Channel.DeleteCompanyTechnologyAsync(companyID, userID, technologyID);
        }
        
        public Vegam_MaintenanceModule.ipas_CompanyService.CategoryTechnologyList GetCategoryTechnologyDetails(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.CategoryTechnologyFilter categoryTechnologyFilter) {
            return base.Channel.GetCategoryTechnologyDetails(basicParam, categoryTechnologyFilter);
        }
        
        public System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.CategoryTechnologyList> GetCategoryTechnologyDetailsAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.CategoryTechnologyFilter categoryTechnologyFilter) {
            return base.Channel.GetCategoryTechnologyDetailsAsync(basicParam, categoryTechnologyFilter);
        }
        
        public int InsertOrUpdateCategoryTechnology(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.CategoryTechnology categoryTechnology) {
            return base.Channel.InsertOrUpdateCategoryTechnology(basicParam, categoryTechnology);
        }
        
        public System.Threading.Tasks.Task<int> InsertOrUpdateCategoryTechnologyAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.CategoryTechnology categoryTechnology) {
            return base.Channel.InsertOrUpdateCategoryTechnologyAsync(basicParam, categoryTechnology);
        }
        
        public bool DeleteCategoryTechnology(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.CategoryTechnology categoryTechnology) {
            return base.Channel.DeleteCategoryTechnology(basicParam, categoryTechnology);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteCategoryTechnologyAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.CategoryTechnology categoryTechnology) {
            return base.Channel.DeleteCategoryTechnologyAsync(basicParam, categoryTechnology);
        }
        
        public Vegam_MaintenanceModule.ipas_CompanyService.Language[] GetAllLanguageDetails(int userID) {
            return base.Channel.GetAllLanguageDetails(userID);
        }
        
        public System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.Language[]> GetAllLanguageDetailsAsync(int userID) {
            return base.Channel.GetAllLanguageDetailsAsync(userID);
        }
        
        public int InsertOrUpdateLanguageDetails(Vegam_MaintenanceModule.ipas_CompanyService.Language language, int userID) {
            return base.Channel.InsertOrUpdateLanguageDetails(language, userID);
        }
        
        public System.Threading.Tasks.Task<int> InsertOrUpdateLanguageDetailsAsync(Vegam_MaintenanceModule.ipas_CompanyService.Language language, int userID) {
            return base.Channel.InsertOrUpdateLanguageDetailsAsync(language, userID);
        }
        
        public Vegam_MaintenanceModule.ipas_CompanyService.Language GetLanguageInfo(int languageID, int userID) {
            return base.Channel.GetLanguageInfo(languageID, userID);
        }
        
        public System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.Language> GetLanguageInfoAsync(int languageID, int userID) {
            return base.Channel.GetLanguageInfoAsync(languageID, userID);
        }
        
        public bool DeleteLanguageDetails(int languageID, int userID) {
            return base.Channel.DeleteLanguageDetails(languageID, userID);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteLanguageDetailsAsync(int languageID, int userID) {
            return base.Channel.DeleteLanguageDetailsAsync(languageID, userID);
        }
        
        public Vegam_MaintenanceModule.ipas_CompanyService.CountryDetails GetAllCountry(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.CountryFilter countryfilter) {
            return base.Channel.GetAllCountry(basicParam, countryfilter);
        }
        
        public System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.CountryDetails> GetAllCountryAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.CountryFilter countryfilter) {
            return base.Channel.GetAllCountryAsync(basicParam, countryfilter);
        }
        
        public Vegam_MaintenanceModule.ipas_CompanyService.CountryRegion[] GetAllRegionName(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam) {
            return base.Channel.GetAllRegionName(basicParam);
        }
        
        public System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.CountryRegion[]> GetAllRegionNameAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam) {
            return base.Channel.GetAllRegionNameAsync(basicParam);
        }
        
        public Vegam_MaintenanceModule.ipas_CompanyService.Language[] GetAllLanguageName(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam) {
            return base.Channel.GetAllLanguageName(basicParam);
        }
        
        public System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.Language[]> GetAllLanguageNameAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam) {
            return base.Channel.GetAllLanguageNameAsync(basicParam);
        }
        
        public int InsertOrUpdateCompanyCountry(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.Country country) {
            return base.Channel.InsertOrUpdateCompanyCountry(basicParam, country);
        }
        
        public System.Threading.Tasks.Task<int> InsertOrUpdateCompanyCountryAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.Country country) {
            return base.Channel.InsertOrUpdateCompanyCountryAsync(basicParam, country);
        }
        
        public Vegam_MaintenanceModule.ipas_CompanyService.Country GetCountryInfo(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, int countryID) {
            return base.Channel.GetCountryInfo(basicParam, countryID);
        }
        
        public System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.Country> GetCountryInfoAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, int countryID) {
            return base.Channel.GetCountryInfoAsync(basicParam, countryID);
        }
        
        public bool DeleteCompanyCountryDetails(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, int countryID) {
            return base.Channel.DeleteCompanyCountryDetails(basicParam, countryID);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteCompanyCountryDetailsAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, int countryID) {
            return base.Channel.DeleteCompanyCountryDetailsAsync(basicParam, countryID);
        }
        
        public Vegam_MaintenanceModule.ipas_CompanyService.RegionDetails GetAllRegion(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.RegionFilter regionfilter) {
            return base.Channel.GetAllRegion(basicParam, regionfilter);
        }
        
        public System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.RegionDetails> GetAllRegionAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.RegionFilter regionfilter) {
            return base.Channel.GetAllRegionAsync(basicParam, regionfilter);
        }
        
        public int InsertOrUpdateRegionName(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.Region regionInfo) {
            return base.Channel.InsertOrUpdateRegionName(basicParam, regionInfo);
        }
        
        public System.Threading.Tasks.Task<int> InsertOrUpdateRegionNameAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.Region regionInfo) {
            return base.Channel.InsertOrUpdateRegionNameAsync(basicParam, regionInfo);
        }
        
        public Vegam_MaintenanceModule.ipas_CompanyService.Region GetRegionNameForEdit(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, int regionID) {
            return base.Channel.GetRegionNameForEdit(basicParam, regionID);
        }
        
        public System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.Region> GetRegionNameForEditAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, int regionID) {
            return base.Channel.GetRegionNameForEditAsync(basicParam, regionID);
        }
        
        public bool DeleteRegionDetails(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.Region regionInfo) {
            return base.Channel.DeleteRegionDetails(basicParam, regionInfo);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteRegionDetailsAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.Region regionInfo) {
            return base.Channel.DeleteRegionDetailsAsync(basicParam, regionInfo);
        }
        
        public Vegam_MaintenanceModule.ipas_CompanyService.CompanySiteList GetAllSites(int userID) {
            return base.Channel.GetAllSites(userID);
        }
        
        public System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.CompanySiteList> GetAllSitesAsync(int userID) {
            return base.Channel.GetAllSitesAsync(userID);
        }
        
        public Vegam_MaintenanceModule.ipas_CompanyService.DefaultSiteUpdateInfo UpdateUserDefaultSite(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam) {
            return base.Channel.UpdateUserDefaultSite(basicParam);
        }
        
        public System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.DefaultSiteUpdateInfo> UpdateUserDefaultSiteAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam) {
            return base.Channel.UpdateUserDefaultSiteAsync(basicParam);
        }
        
        public Vegam_MaintenanceModule.ipas_CompanyService.DownTimeCategoryDepartment[] GetDownTimeCategoryDepartments(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam) {
            return base.Channel.GetDownTimeCategoryDepartments(basicParam);
        }
        
        public System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.DownTimeCategoryDepartment[]> GetDownTimeCategoryDepartmentsAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam) {
            return base.Channel.GetDownTimeCategoryDepartmentsAsync(basicParam);
        }
        
        public Vegam_MaintenanceModule.ipas_CompanyService.CompanyCategoryDownTimeInfo GetCompanyDownTimeInfo(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.CompanyDownTimeFilter filter) {
            return base.Channel.GetCompanyDownTimeInfo(basicParam, filter);
        }
        
        public System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.CompanyCategoryDownTimeInfo> GetCompanyDownTimeInfoAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.CompanyDownTimeFilter filter) {
            return base.Channel.GetCompanyDownTimeInfoAsync(basicParam, filter);
        }
        
        public int AddOrUpdateCompanyDownTime(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.DownTime downTime) {
            return base.Channel.AddOrUpdateCompanyDownTime(basicParam, downTime);
        }
        
        public System.Threading.Tasks.Task<int> AddOrUpdateCompanyDownTimeAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.DownTime downTime) {
            return base.Channel.AddOrUpdateCompanyDownTimeAsync(basicParam, downTime);
        }
        
        public bool CheckCompanyDownTimeParentHasChild(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, int downTimeID) {
            return base.Channel.CheckCompanyDownTimeParentHasChild(basicParam, downTimeID);
        }
        
        public System.Threading.Tasks.Task<bool> CheckCompanyDownTimeParentHasChildAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, int downTimeID) {
            return base.Channel.CheckCompanyDownTimeParentHasChildAsync(basicParam, downTimeID);
        }
        
        public bool CheckDownTimeUsedInAnyPline(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, int downTimeID) {
            return base.Channel.CheckDownTimeUsedInAnyPline(basicParam, downTimeID);
        }
        
        public System.Threading.Tasks.Task<bool> CheckDownTimeUsedInAnyPlineAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, int downTimeID) {
            return base.Channel.CheckDownTimeUsedInAnyPlineAsync(basicParam, downTimeID);
        }
        
        public bool DeleteCompanyDownTime(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, int downTimeID) {
            return base.Channel.DeleteCompanyDownTime(basicParam, downTimeID);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteCompanyDownTimeAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, int downTimeID) {
            return base.Channel.DeleteCompanyDownTimeAsync(basicParam, downTimeID);
        }
        
        public Vegam_MaintenanceModule.ipas_CompanyService.DownTimeCategory[] GetDownTimeCategory(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam) {
            return base.Channel.GetDownTimeCategory(basicParam);
        }
        
        public System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.DownTimeCategory[]> GetDownTimeCategoryAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam) {
            return base.Channel.GetDownTimeCategoryAsync(basicParam);
        }
        
        public Vegam_MaintenanceModule.ipas_CompanyService.DownTimeCategory GetDownTimeCategoryForEdit(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, int categoryID) {
            return base.Channel.GetDownTimeCategoryForEdit(basicParam, categoryID);
        }
        
        public System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.DownTimeCategory> GetDownTimeCategoryForEditAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, int categoryID) {
            return base.Channel.GetDownTimeCategoryForEditAsync(basicParam, categoryID);
        }
        
        public int InsertOrUpdteDownTimeCategory(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.DownTimeCategory downTimeCategory) {
            return base.Channel.InsertOrUpdteDownTimeCategory(basicParam, downTimeCategory);
        }
        
        public System.Threading.Tasks.Task<int> InsertOrUpdteDownTimeCategoryAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.DownTimeCategory downTimeCategory) {
            return base.Channel.InsertOrUpdteDownTimeCategoryAsync(basicParam, downTimeCategory);
        }
        
        public int DeleteDownTimeCategory(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, int categoryID) {
            return base.Channel.DeleteDownTimeCategory(basicParam, categoryID);
        }
        
        public System.Threading.Tasks.Task<int> DeleteDownTimeCategoryAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, int categoryID) {
            return base.Channel.DeleteDownTimeCategoryAsync(basicParam, categoryID);
        }
        
        public bool CheckDepartmentIDUsedInAnyPline(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, int categoryID, int departmentID) {
            return base.Channel.CheckDepartmentIDUsedInAnyPline(basicParam, categoryID, departmentID);
        }
        
        public System.Threading.Tasks.Task<bool> CheckDepartmentIDUsedInAnyPlineAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, int categoryID, int departmentID) {
            return base.Channel.CheckDepartmentIDUsedInAnyPlineAsync(basicParam, categoryID, departmentID);
        }
        
        public int InsertOrUpdateRegionUserInfo(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.UserBasicInfo userInfo) {
            return base.Channel.InsertOrUpdateRegionUserInfo(basicParam, userInfo);
        }
        
        public System.Threading.Tasks.Task<int> InsertOrUpdateRegionUserInfoAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.UserBasicInfo userInfo) {
            return base.Channel.InsertOrUpdateRegionUserInfoAsync(basicParam, userInfo);
        }
        
        public Vegam_MaintenanceModule.ipas_CompanyService.UserBasicInfo GetBasicRegionUserInfo(int userID) {
            return base.Channel.GetBasicRegionUserInfo(userID);
        }
        
        public System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.UserBasicInfo> GetBasicRegionUserInfoAsync(int userID) {
            return base.Channel.GetBasicRegionUserInfoAsync(userID);
        }
        
        public Vegam_MaintenanceModule.ipas_CompanyService.SiteRoleInfo[] GetUserSitesDepartmentRoles(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam) {
            return base.Channel.GetUserSitesDepartmentRoles(basicParam);
        }
        
        public System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.SiteRoleInfo[]> GetUserSitesDepartmentRolesAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam) {
            return base.Channel.GetUserSitesDepartmentRolesAsync(basicParam);
        }
        
        public Vegam_MaintenanceModule.ipas_CompanyService.PlantLevelRoles[] GetRegionRoles(Vegam_MaintenanceModule.ipas_CompanyService.DepartmentRolesInfo departmentRolesInfo) {
            return base.Channel.GetRegionRoles(departmentRolesInfo);
        }
        
        public System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.PlantLevelRoles[]> GetRegionRolesAsync(Vegam_MaintenanceModule.ipas_CompanyService.DepartmentRolesInfo departmentRolesInfo) {
            return base.Channel.GetRegionRolesAsync(departmentRolesInfo);
        }
        
        public Vegam_MaintenanceModule.ipas_CompanyService.CountryInfo[] GetCountry(int userID) {
            return base.Channel.GetCountry(userID);
        }
        
        public System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.CountryInfo[]> GetCountryAsync(int userID) {
            return base.Channel.GetCountryAsync(userID);
        }
        
        public Vegam_MaintenanceModule.ipas_CompanyService.SiteInformation[] GetSiteInformation(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam) {
            return base.Channel.GetSiteInformation(basicParam);
        }
        
        public System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.SiteInformation[]> GetSiteInformationAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam) {
            return base.Channel.GetSiteInformationAsync(basicParam);
        }
        
        public int RemoveUserSites(Vegam_MaintenanceModule.ipas_CompanyService.DeleteSiteRole deleteSiteRole) {
            return base.Channel.RemoveUserSites(deleteSiteRole);
        }
        
        public System.Threading.Tasks.Task<int> RemoveUserSitesAsync(Vegam_MaintenanceModule.ipas_CompanyService.DeleteSiteRole deleteSiteRole) {
            return base.Channel.RemoveUserSitesAsync(deleteSiteRole);
        }
        
        public Vegam_MaintenanceModule.ipas_CompanyService.PasswordPolicy GetPasswordPolicyInfo(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.PasswordFilter passwordFilter) {
            return base.Channel.GetPasswordPolicyInfo(basicParam, passwordFilter);
        }
        
        public System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.PasswordPolicy> GetPasswordPolicyInfoAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.PasswordFilter passwordFilter) {
            return base.Channel.GetPasswordPolicyInfoAsync(basicParam, passwordFilter);
        }
        
        public bool SavePasswordPolicy(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.PasswordPolicy passwordPolicy) {
            return base.Channel.SavePasswordPolicy(basicParam, passwordPolicy);
        }
        
        public System.Threading.Tasks.Task<bool> SavePasswordPolicyAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.PasswordPolicy passwordPolicy) {
            return base.Channel.SavePasswordPolicyAsync(basicParam, passwordPolicy);
        }
        
        public bool InsertBusinessUnit(Vegam_MaintenanceModule.ipas_CompanyService.BusinessUnitBasicParam businessUnitBasicParam, Vegam_MaintenanceModule.ipas_CompanyService.BusinessUnitDetails businessUnit) {
            return base.Channel.InsertBusinessUnit(businessUnitBasicParam, businessUnit);
        }
        
        public System.Threading.Tasks.Task<bool> InsertBusinessUnitAsync(Vegam_MaintenanceModule.ipas_CompanyService.BusinessUnitBasicParam businessUnitBasicParam, Vegam_MaintenanceModule.ipas_CompanyService.BusinessUnitDetails businessUnit) {
            return base.Channel.InsertBusinessUnitAsync(businessUnitBasicParam, businessUnit);
        }
        
        public bool UpdateBusinessUnit(Vegam_MaintenanceModule.ipas_CompanyService.BusinessUnitBasicParam businessUnitBasicParam, Vegam_MaintenanceModule.ipas_CompanyService.BusinessUnitDetails businessUnit) {
            return base.Channel.UpdateBusinessUnit(businessUnitBasicParam, businessUnit);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateBusinessUnitAsync(Vegam_MaintenanceModule.ipas_CompanyService.BusinessUnitBasicParam businessUnitBasicParam, Vegam_MaintenanceModule.ipas_CompanyService.BusinessUnitDetails businessUnit) {
            return base.Channel.UpdateBusinessUnitAsync(businessUnitBasicParam, businessUnit);
        }
        
        public bool DeleteBusinessUnit(Vegam_MaintenanceModule.ipas_CompanyService.BusinessUnitBasicParam businessUnitBasicParam) {
            return base.Channel.DeleteBusinessUnit(businessUnitBasicParam);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteBusinessUnitAsync(Vegam_MaintenanceModule.ipas_CompanyService.BusinessUnitBasicParam businessUnitBasicParam) {
            return base.Channel.DeleteBusinessUnitAsync(businessUnitBasicParam);
        }
        
        public Vegam_MaintenanceModule.ipas_CompanyService.BusinessUnitList GetBusinessUnitDetails(Vegam_MaintenanceModule.ipas_CompanyService.BusinessUnitFilter businessUnitFilter) {
            return base.Channel.GetBusinessUnitDetails(businessUnitFilter);
        }
        
        public System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.BusinessUnitList> GetBusinessUnitDetailsAsync(Vegam_MaintenanceModule.ipas_CompanyService.BusinessUnitFilter businessUnitFilter) {
            return base.Channel.GetBusinessUnitDetailsAsync(businessUnitFilter);
        }
        
        public bool InsertSubBusinessUnit(Vegam_MaintenanceModule.ipas_CompanyService.BusinessUnitBasicParam businessUnitBasicParam, Vegam_MaintenanceModule.ipas_CompanyService.SubBusinessUnit subBusinessUnit) {
            return base.Channel.InsertSubBusinessUnit(businessUnitBasicParam, subBusinessUnit);
        }
        
        public System.Threading.Tasks.Task<bool> InsertSubBusinessUnitAsync(Vegam_MaintenanceModule.ipas_CompanyService.BusinessUnitBasicParam businessUnitBasicParam, Vegam_MaintenanceModule.ipas_CompanyService.SubBusinessUnit subBusinessUnit) {
            return base.Channel.InsertSubBusinessUnitAsync(businessUnitBasicParam, subBusinessUnit);
        }
        
        public bool UpdateSubBusinessUnit(Vegam_MaintenanceModule.ipas_CompanyService.BusinessUnitBasicParam businessUnitBasicParam, Vegam_MaintenanceModule.ipas_CompanyService.SubBusinessUnit subBusinessUnit) {
            return base.Channel.UpdateSubBusinessUnit(businessUnitBasicParam, subBusinessUnit);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateSubBusinessUnitAsync(Vegam_MaintenanceModule.ipas_CompanyService.BusinessUnitBasicParam businessUnitBasicParam, Vegam_MaintenanceModule.ipas_CompanyService.SubBusinessUnit subBusinessUnit) {
            return base.Channel.UpdateSubBusinessUnitAsync(businessUnitBasicParam, subBusinessUnit);
        }
        
        public bool DeleteSubBusinessUnit(Vegam_MaintenanceModule.ipas_CompanyService.BusinessUnitBasicParam businessUnitBasicParam) {
            return base.Channel.DeleteSubBusinessUnit(businessUnitBasicParam);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteSubBusinessUnitAsync(Vegam_MaintenanceModule.ipas_CompanyService.BusinessUnitBasicParam businessUnitBasicParam) {
            return base.Channel.DeleteSubBusinessUnitAsync(businessUnitBasicParam);
        }
        
        public Vegam_MaintenanceModule.ipas_CompanyService.SubBusinessUnitList GetSubBusinessUnitDetails(Vegam_MaintenanceModule.ipas_CompanyService.BusinessUnitFilter businessUnitFilter) {
            return base.Channel.GetSubBusinessUnitDetails(businessUnitFilter);
        }
        
        public System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.SubBusinessUnitList> GetSubBusinessUnitDetailsAsync(Vegam_MaintenanceModule.ipas_CompanyService.BusinessUnitFilter businessUnitFilter) {
            return base.Channel.GetSubBusinessUnitDetailsAsync(businessUnitFilter);
        }
        
        public Vegam_MaintenanceModule.ipas_CompanyService.BusinessUnit[] GetBusinessUnitList(Vegam_MaintenanceModule.ipas_CompanyService.BusinessUnitBasicParam businessUnitBasicParam) {
            return base.Channel.GetBusinessUnitList(businessUnitBasicParam);
        }
        
        public System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.BusinessUnit[]> GetBusinessUnitListAsync(Vegam_MaintenanceModule.ipas_CompanyService.BusinessUnitBasicParam businessUnitBasicParam) {
            return base.Channel.GetBusinessUnitListAsync(businessUnitBasicParam);
        }
        
        public Vegam_MaintenanceModule.ipas_CompanyService.BusinessUnit[] GetSubBusinessUnitList(Vegam_MaintenanceModule.ipas_CompanyService.BusinessUnitBasicParam businessUnitBasicParam) {
            return base.Channel.GetSubBusinessUnitList(businessUnitBasicParam);
        }
        
        public System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.BusinessUnit[]> GetSubBusinessUnitListAsync(Vegam_MaintenanceModule.ipas_CompanyService.BusinessUnitBasicParam businessUnitBasicParam) {
            return base.Channel.GetSubBusinessUnitListAsync(businessUnitBasicParam);
        }
        
        public Vegam_MaintenanceModule.ipas_CompanyService.BartederServerConfigurationInfo GetBartenderConfigurationDetails(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.BartenderServerInfoFilter filter) {
            return base.Channel.GetBartenderConfigurationDetails(basicParam, filter);
        }
        
        public System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.BartederServerConfigurationInfo> GetBartenderConfigurationDetailsAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.BartenderServerInfoFilter filter) {
            return base.Channel.GetBartenderConfigurationDetailsAsync(basicParam, filter);
        }
        
        public Vegam_MaintenanceModule.ipas_CompanyService.BartenderServerInfo GetBartenderServerInfoForEdit(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.BartenderServerInfoFilter filter) {
            return base.Channel.GetBartenderServerInfoForEdit(basicParam, filter);
        }
        
        public System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.BartenderServerInfo> GetBartenderServerInfoForEditAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.BartenderServerInfoFilter filter) {
            return base.Channel.GetBartenderServerInfoForEditAsync(basicParam, filter);
        }
        
        public int InsertOrUpdateBartenderServerInfo(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.BartenderServerInfoFilter filter, Vegam_MaintenanceModule.ipas_CompanyService.BartenderServerInfo bartenderServerInfo) {
            return base.Channel.InsertOrUpdateBartenderServerInfo(basicParam, filter, bartenderServerInfo);
        }
        
        public System.Threading.Tasks.Task<int> InsertOrUpdateBartenderServerInfoAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.BartenderServerInfoFilter filter, Vegam_MaintenanceModule.ipas_CompanyService.BartenderServerInfo bartenderServerInfo) {
            return base.Channel.InsertOrUpdateBartenderServerInfoAsync(basicParam, filter, bartenderServerInfo);
        }
        
        public bool UpdateFailPrintAttemptAndReprintInterval(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.BartenderServerInfoFilter filter, Vegam_MaintenanceModule.ipas_CompanyService.BartenderServerFailPrintInfo failPrintInfo) {
            return base.Channel.UpdateFailPrintAttemptAndReprintInterval(basicParam, filter, failPrintInfo);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateFailPrintAttemptAndReprintIntervalAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.BartenderServerInfoFilter filter, Vegam_MaintenanceModule.ipas_CompanyService.BartenderServerFailPrintInfo failPrintInfo) {
            return base.Channel.UpdateFailPrintAttemptAndReprintIntervalAsync(basicParam, filter, failPrintInfo);
        }
        
        public bool DeleteBartenderServerInfo(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.BartenderServerInfoFilter filter) {
            return base.Channel.DeleteBartenderServerInfo(basicParam, filter);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteBartenderServerInfoAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.BartenderServerInfoFilter filter) {
            return base.Channel.DeleteBartenderServerInfoAsync(basicParam, filter);
        }
        
        public Vegam_MaintenanceModule.ipas_CompanyService.BartenderServerErrorDetails GetBartenderServerErrorLogInfo(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.BartenderServerErrorLogFilter filter) {
            return base.Channel.GetBartenderServerErrorLogInfo(basicParam, filter);
        }
        
        public System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.BartenderServerErrorDetails> GetBartenderServerErrorLogInfoAsync(Vegam_MaintenanceModule.ipas_CompanyService.BasicParam basicParam, Vegam_MaintenanceModule.ipas_CompanyService.BartenderServerErrorLogFilter filter) {
            return base.Channel.GetBartenderServerErrorLogInfoAsync(basicParam, filter);
        }
        
        public Vegam_MaintenanceModule.ipas_CompanyService.CompanySites[] GetCompanySites(Vegam_MaintenanceModule.ipas_CompanyService.BartenderServerInfoFilter filter) {
            return base.Channel.GetCompanySites(filter);
        }
        
        public System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.CompanySites[]> GetCompanySitesAsync(Vegam_MaintenanceModule.ipas_CompanyService.BartenderServerInfoFilter filter) {
            return base.Channel.GetCompanySitesAsync(filter);
        }
        
        public Vegam_MaintenanceModule.ipas_CompanyService.PrintServerBasicInfo[] GetPrintServers(Vegam_MaintenanceModule.ipas_CompanyService.BartenderServerInfoFilter filter) {
            return base.Channel.GetPrintServers(filter);
        }
        
        public System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.PrintServerBasicInfo[]> GetPrintServersAsync(Vegam_MaintenanceModule.ipas_CompanyService.BartenderServerInfoFilter filter) {
            return base.Channel.GetPrintServersAsync(filter);
        }
        
        public Vegam_MaintenanceModule.ipas_CompanyService.SitePrintServerList GetSitePrintServers(Vegam_MaintenanceModule.ipas_CompanyService.SitePrintServerFilter filter) {
            return base.Channel.GetSitePrintServers(filter);
        }
        
        public System.Threading.Tasks.Task<Vegam_MaintenanceModule.ipas_CompanyService.SitePrintServerList> GetSitePrintServersAsync(Vegam_MaintenanceModule.ipas_CompanyService.SitePrintServerFilter filter) {
            return base.Channel.GetSitePrintServersAsync(filter);
        }
        
        public bool AddOrUpdateSitePrintServer(Vegam_MaintenanceModule.ipas_CompanyService.SitePrintServerInfo sitePrintServerInfo) {
            return base.Channel.AddOrUpdateSitePrintServer(sitePrintServerInfo);
        }
        
        public System.Threading.Tasks.Task<bool> AddOrUpdateSitePrintServerAsync(Vegam_MaintenanceModule.ipas_CompanyService.SitePrintServerInfo sitePrintServerInfo) {
            return base.Channel.AddOrUpdateSitePrintServerAsync(sitePrintServerInfo);
        }
        
        public bool DeleteSitePrintServer(Vegam_MaintenanceModule.ipas_CompanyService.SitePrintServerFilter sitePrintServerFilter) {
            return base.Channel.DeleteSitePrintServer(sitePrintServerFilter);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteSitePrintServerAsync(Vegam_MaintenanceModule.ipas_CompanyService.SitePrintServerFilter sitePrintServerFilter) {
            return base.Channel.DeleteSitePrintServerAsync(sitePrintServerFilter);
        }
    }
}
