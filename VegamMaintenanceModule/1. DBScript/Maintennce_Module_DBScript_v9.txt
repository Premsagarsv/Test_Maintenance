 ALTER TABLE LDB1_COUNTRY_SITES ADD FENABLEMAINTENANCE CHAR(1) DEFAULT 'N';
 
ALTER TABLE LDB1_OBJECTFIELD ADD FSQLINPUTPARAMETERNAME VARCHAR2(30);
CREATE INDEX INDX_PLANTMAT_UPDDATE ON LDB1_PLANTMATERIAL(FSITEID,FUPDATEDON);


 -----inlcude LDB1_PLANTMATERIAL table
ALTER TABLE LDB1_PLANTMATERIAL ADD FMATCATEGORY NUMBER(10,0);

/* NO MORE USED
INSERT INTO LDB1_TASKS(FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FSTATUS,FCATEGORY)
VALUES(SEQUENCE_TASK_ID.NEXTVAL,1,'Configure Maintenance Master Data',10000,'A','A','Configure Maintenance Master');
INSERT INTO LDB1_TASKS(FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FSTATUS,FCATEGORY)
VALUES(SEQUENCE_TASK_ID.NEXTVAL,2,'Configure Maintenance Master Data',10000,'A','A','Configure Maintenance Master');
INSERT INTO LDB1_TASKS(FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FSTATUS,FCATEGORY)
VALUES(SEQUENCE_TASK_ID.NEXTVAL,3,'Configure Maintenance Master Data',10000,'A','A','Configure Maintenance Master');
INSERT INTO LDB1_TASKS(FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FSTATUS,FCATEGORY)
VALUES(SEQUENCE_TASK_ID.NEXTVAL,4,'Configure Maintenance Master Data',10000,'A','A','Configure Maintenance Master');
INSERT INTO LDB1_TASKS(FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FSTATUS,FCATEGORY)
VALUES(SEQUENCE_TASK_ID.NEXTVAL,5,'Configure Maintenance Master Data',10000,'A','A','Configure Maintenance Master');
*/

INSERT INTO LDB1_TASKS(FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FSTATUS,FCATEGORY)
VALUES(SEQUENCE_TASK_ID.NEXTVAL,1,'Configure Functional Location',10001,'A','A','Configure Maintenance Master');
INSERT INTO LDB1_TASKS(FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FSTATUS,FCATEGORY)
VALUES(SEQUENCE_TASK_ID.NEXTVAL,2,'Configure Functional Location',10001,'A','A','Configure Maintenance Master');
INSERT INTO LDB1_TASKS(FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FSTATUS,FCATEGORY)
VALUES(SEQUENCE_TASK_ID.NEXTVAL,3,'Configure Functional Location',10001,'A','A','Configure Maintenance Master');
INSERT INTO LDB1_TASKS(FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FSTATUS,FCATEGORY)
VALUES(SEQUENCE_TASK_ID.NEXTVAL,4,'Configure Functional Location',10001,'A','A','Configure Maintenance Master');
INSERT INTO LDB1_TASKS(FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FSTATUS,FCATEGORY)
VALUES(SEQUENCE_TASK_ID.NEXTVAL,5,'Configure Functional Location',10001,'A','A','Configure Maintenance Master');

INSERT INTO LDB1_TASKS(FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FSTATUS,FCATEGORY)
VALUES(SEQUENCE_TASK_ID.NEXTVAL,1,'Configure Equipment Models',10002,'A','A','Configure Maintenance Master');
INSERT INTO LDB1_TASKS(FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FSTATUS,FCATEGORY)
VALUES(SEQUENCE_TASK_ID.NEXTVAL,2,'Configure Equipment Models',10002,'A','A','Configure Maintenance Master');
INSERT INTO LDB1_TASKS(FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FSTATUS,FCATEGORY)
VALUES(SEQUENCE_TASK_ID.NEXTVAL,3,'Configure Equipment Models',10002,'A','A','Configure Maintenance Master');
INSERT INTO LDB1_TASKS(FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FSTATUS,FCATEGORY)
VALUES(SEQUENCE_TASK_ID.NEXTVAL,4,'Configure Equipment Models',10002,'A','A','Configure Maintenance Master');
INSERT INTO LDB1_TASKS(FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FSTATUS,FCATEGORY)
VALUES(SEQUENCE_TASK_ID.NEXTVAL,5,'Configure Equipment Models',10002,'A','A','Configure Maintenance Master');

INSERT INTO LDB1_TASKS(FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FSTATUS,FCATEGORY)
VALUES(SEQUENCE_TASK_ID.NEXTVAL,1,'Configure Equipments',10003,'A','A','Configure Maintenance Master');
INSERT INTO LDB1_TASKS(FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FSTATUS,FCATEGORY)
VALUES(SEQUENCE_TASK_ID.NEXTVAL,2,'Configure Equipments',10003,'A','A','Configure Maintenance Master');
INSERT INTO LDB1_TASKS(FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FSTATUS,FCATEGORY)
VALUES(SEQUENCE_TASK_ID.NEXTVAL,3,'Configure Equipments',10003,'A','A','Configure Maintenance Master');
INSERT INTO LDB1_TASKS(FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FSTATUS,FCATEGORY)
VALUES(SEQUENCE_TASK_ID.NEXTVAL,4,'Configure Equipments',10003,'A','A','Configure Maintenance Master');
INSERT INTO LDB1_TASKS(FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FSTATUS,FCATEGORY)
VALUES(SEQUENCE_TASK_ID.NEXTVAL,5,'Configure Equipments',10003,'A','A','Configure Maintenance Master');


INSERT INTO LDB1_TASKS(FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FSTATUS,FCATEGORY)
VALUES(SEQUENCE_TASK_ID.NEXTVAL,1,'Configure Measuring Points',10004,'A','A','Configure Maintenance Master');
INSERT INTO LDB1_TASKS(FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FSTATUS,FCATEGORY)
VALUES(SEQUENCE_TASK_ID.NEXTVAL,2,'Configure Measuring Points',10004,'A','A','Configure Maintenance Master');
INSERT INTO LDB1_TASKS(FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FSTATUS,FCATEGORY)
VALUES(SEQUENCE_TASK_ID.NEXTVAL,3,'Configure Measuring Points',10004,'A','A','Configure Maintenance Master');
INSERT INTO LDB1_TASKS(FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FSTATUS,FCATEGORY)
VALUES(SEQUENCE_TASK_ID.NEXTVAL,4,'Configure Measuring Points',10004,'A','A','Configure Maintenance Master');
INSERT INTO LDB1_TASKS(FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FSTATUS,FCATEGORY)
VALUES(SEQUENCE_TASK_ID.NEXTVAL,5,'Configure Measuring Points',10004,'A','A','Configure Maintenance Master');

INSERT INTO LDB1_TASKS(FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FSTATUS,FCATEGORY)
VALUES(SEQUENCE_TASK_ID.NEXTVAL,1,'Manage Maintenance Task Group',10005,'A','A','Configure Maintenance Master');
INSERT INTO LDB1_TASKS(FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FSTATUS,FCATEGORY)
VALUES(SEQUENCE_TASK_ID.NEXTVAL,2,'Manage Maintenance Task Group',10005,'A','A','Configure Maintenance Master');
INSERT INTO LDB1_TASKS(FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FSTATUS,FCATEGORY)
VALUES(SEQUENCE_TASK_ID.NEXTVAL,3,'Manage Maintenance Task Group',10005,'A','A','Configure Maintenance Master');
INSERT INTO LDB1_TASKS(FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FSTATUS,FCATEGORY)
VALUES(SEQUENCE_TASK_ID.NEXTVAL,4,'Manage Maintenance Task Group',10005,'A','A','Configure Maintenance Master');
INSERT INTO LDB1_TASKS(FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FSTATUS,FCATEGORY)
VALUES(SEQUENCE_TASK_ID.NEXTVAL,5,'Manage Maintenance Task Group',10005,'A','A','Configure Maintenance Master');


INSERT INTO LDB1_TASKS(FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FSTATUS,FCATEGORY)
VALUES(SEQUENCE_TASK_ID.NEXTVAL,1,'Approve Maintenance Task Group',10006,'A','A','Configure Maintenance Master');
INSERT INTO LDB1_TASKS(FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FSTATUS,FCATEGORY)
VALUES(SEQUENCE_TASK_ID.NEXTVAL,2,'Approve Maintenance Task Group',10006,'A','A','Configure Maintenance Master');
INSERT INTO LDB1_TASKS(FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FSTATUS,FCATEGORY)
VALUES(SEQUENCE_TASK_ID.NEXTVAL,3,'Approve Maintenance Task Group',10006,'A','A','Configure Maintenance Master');
INSERT INTO LDB1_TASKS(FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FSTATUS,FCATEGORY)
VALUES(SEQUENCE_TASK_ID.NEXTVAL,4,'Approve Maintenance Task Group',10006,'A','A','Configure Maintenance Master');
INSERT INTO LDB1_TASKS(FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FSTATUS,FCATEGORY)
VALUES(SEQUENCE_TASK_ID.NEXTVAL,5,'Approve Maintenance Task Group',10006,'A','A','Configure Maintenance Master');

INSERT INTO LDB1_TASKS(FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FSTATUS,FCATEGORY)
VALUES(SEQUENCE_TASK_ID.NEXTVAL,1,'Configure Equipment Maintenance Tools',10007,'A','A','Configure Maintenance Master');
INSERT INTO LDB1_TASKS(FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FSTATUS,FCATEGORY)
VALUES(SEQUENCE_TASK_ID.NEXTVAL,2,'Configure Equipment Maintenance Tools',10007,'A','A','Configure Maintenance Master');
INSERT INTO LDB1_TASKS(FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FSTATUS,FCATEGORY)
VALUES(SEQUENCE_TASK_ID.NEXTVAL,3,'Configure Equipment Maintenance Tools',10007,'A','A','Configure Maintenance Master');
INSERT INTO LDB1_TASKS(FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FSTATUS,FCATEGORY)
VALUES(SEQUENCE_TASK_ID.NEXTVAL,4,'Configure Equipment Maintenance Tools',10007,'A','A','Configure Maintenance Master');
INSERT INTO LDB1_TASKS(FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FSTATUS,FCATEGORY)
VALUES(SEQUENCE_TASK_ID.NEXTVAL,5,'Configure Equipment Maintenance Tools',10007,'A','A','Configure Maintenance Master');


INSERT INTO LDB1_TASKS(FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FSTATUS,FCATEGORY)
VALUES(SEQUENCE_TASK_ID.NEXTVAL,1,'Configure Work Group',10008,'A','A','Configure Maintenance Master');
INSERT INTO LDB1_TASKS(FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FSTATUS,FCATEGORY)
VALUES(SEQUENCE_TASK_ID.NEXTVAL,2,'Configure Work Group',10008,'A','A','Configure Maintenance Master');
INSERT INTO LDB1_TASKS(FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FSTATUS,FCATEGORY)
VALUES(SEQUENCE_TASK_ID.NEXTVAL,3,'Configure Work Group',10008,'A','A','Configure Maintenance Master');
INSERT INTO LDB1_TASKS(FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FSTATUS,FCATEGORY)
VALUES(SEQUENCE_TASK_ID.NEXTVAL,4,'Configure Work Group',10008,'A','A','Configure Maintenance Master');
INSERT INTO LDB1_TASKS(FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FSTATUS,FCATEGORY)
VALUES(SEQUENCE_TASK_ID.NEXTVAL,5,'Configure Work Group',10008,'A','A','Configure Maintenance Master');

INSERT INTO LDB1_TASKS(FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FSTATUS,FCATEGORY)
VALUES(SEQUENCE_TASK_ID.NEXTVAL,1,'Manage Preventive Maintenance Schedule',10009,'M','A','Maintenance');
INSERT INTO LDB1_TASKS(FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FSTATUS,FCATEGORY)
VALUES(SEQUENCE_TASK_ID.NEXTVAL,2,'Manage Preventive Maintenance Schedule',10009,'M','A','Maintenance');
INSERT INTO LDB1_TASKS(FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FSTATUS,FCATEGORY)
VALUES(SEQUENCE_TASK_ID.NEXTVAL,3,'Manage Preventive Maintenance Schedule',10009,'M','A','Maintenance');
INSERT INTO LDB1_TASKS(FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FSTATUS,FCATEGORY)
VALUES(SEQUENCE_TASK_ID.NEXTVAL,4,'Manage Preventive Maintenance Schedule',10009,'M','A','Maintenance');
INSERT INTO LDB1_TASKS(FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FSTATUS,FCATEGORY)
VALUES(SEQUENCE_TASK_ID.NEXTVAL,5,'Manage Preventive Maintenance Schedule',10009,'M','A','Maintenance');

INSERT INTO LDB1_TASKS(FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FSTATUS,FCATEGORY)
VALUES(SEQUENCE_TASK_ID.NEXTVAL,1,'Manage Maintenance Work Orders',10010,'M','A','Maintenance');
INSERT INTO LDB1_TASKS(FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FSTATUS,FCATEGORY)
VALUES(SEQUENCE_TASK_ID.NEXTVAL,2,'Manage Maintenance Work Order',10010,'M','A','Maintenance');  
INSERT INTO LDB1_TASKS(FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FSTATUS,FCATEGORY)
VALUES(SEQUENCE_TASK_ID.NEXTVAL,3,'Manage Maintenance Work Order',10010,'M','A','Maintenance');
INSERT INTO LDB1_TASKS(FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FSTATUS,FCATEGORY)
VALUES(SEQUENCE_TASK_ID.NEXTVAL,4,'Manage Maintenance Work Order',10010,'M','A','Maintenance');
INSERT INTO LDB1_TASKS(FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FSTATUS,FCATEGORY)
VALUES(SEQUENCE_TASK_ID.NEXTVAL,5,'Manage Maintenance Work Order',10010,'M','A','Maintenance');

INSERT INTO LDB1_TASKS(FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FSTATUS,FCATEGORY)
VALUES(SEQUENCE_TASK_ID.NEXTVAL,1,'Manage Checklist',10011,'M','A','Maintenance');  
INSERT INTO LDB1_TASKS(FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FSTATUS,FCATEGORY)
VALUES(SEQUENCE_TASK_ID.NEXTVAL,2,'Manage Checklist',10011,'M','A','Maintenance');  
INSERT INTO LDB1_TASKS(FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FSTATUS,FCATEGORY)
VALUES(SEQUENCE_TASK_ID.NEXTVAL,3,'Manage Checklist',10011,'M','A','Maintenance');  
INSERT INTO LDB1_TASKS(FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FSTATUS,FCATEGORY)
VALUES(SEQUENCE_TASK_ID.NEXTVAL,4,'Manage Checklist',10011,'M','A','Maintenance');
INSERT INTO LDB1_TASKS(FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FSTATUS,FCATEGORY)
VALUES(SEQUENCE_TASK_ID.NEXTVAL,5,'Manage Checklist',10011,'M','A','Maintenance');


INSERT INTO LDB1_TASKS (FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FCATEGORY) 
VALUES (SEQUENCE_TASK_ID.NEXTVAL,1,'Work Order Calendar',10012,'M','Maintenance');
INSERT INTO LDB1_TASKS (FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FCATEGORY) 
VALUES (SEQUENCE_TASK_ID.NEXTVAL,2,'Work Order Calendar',10012,'M','Maintenance');
INSERT INTO LDB1_TASKS (FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FCATEGORY) 
VALUES (SEQUENCE_TASK_ID.NEXTVAL,3,'Work Order Calendar',10012,'M','Maintenance');
INSERT INTO LDB1_TASKS (FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FCATEGORY) 
VALUES (SEQUENCE_TASK_ID.NEXTVAL,4,'Work Order Calendar',10012,'M','Maintenance');
INSERT INTO LDB1_TASKS (FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FCATEGORY) 
VALUES (SEQUENCE_TASK_ID.NEXTVAL,5,'Work Order Calendar',10012,'M','Maintenance');

INSERT INTO LDB1_TASKS (FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FCATEGORY) 
VALUES (SEQUENCE_TASK_ID.NEXTVAL,1,'View Work Order Info',10013,'M','Maintenance');
INSERT INTO LDB1_TASKS (FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FCATEGORY) 
VALUES (SEQUENCE_TASK_ID.NEXTVAL,2,'View Work Order Info',10013,'M','Maintenance');
INSERT INTO LDB1_TASKS (FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FCATEGORY) 
VALUES (SEQUENCE_TASK_ID.NEXTVAL,3,'View Work Order Info',10013,'M','Maintenance');
INSERT INTO LDB1_TASKS (FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FCATEGORY) 
VALUES (SEQUENCE_TASK_ID.NEXTVAL,4,'View Work Order Info',10013,'M','Maintenance');
INSERT INTO LDB1_TASKS (FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FCATEGORY) 
VALUES (SEQUENCE_TASK_ID.NEXTVAL,5,'View Work Order Info',10013,'M','Maintenance');

INSERT INTO LDB1_TASKS(FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FSTATUS,FCATEGORY)
VALUES(SEQUENCE_TASK_ID.NEXTVAL,1,'Configure Maintenance Type',10014,'M','A','Maintenance');  
INSERT INTO LDB1_TASKS(FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FSTATUS,FCATEGORY)
VALUES(SEQUENCE_TASK_ID.NEXTVAL,2,'Configure Maintenance Type',10014,'M','A','Maintenance');  
INSERT INTO LDB1_TASKS(FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FSTATUS,FCATEGORY)
VALUES(SEQUENCE_TASK_ID.NEXTVAL,3,'Configure Maintenance Type',10014,'M','A','Maintenance');  
INSERT INTO LDB1_TASKS(FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FSTATUS,FCATEGORY)
VALUES(SEQUENCE_TASK_ID.NEXTVAL,4,'Configure Maintenance Type',10014,'M','A','Maintenance');  
INSERT INTO LDB1_TASKS(FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FSTATUS,FCATEGORY)
VALUES(SEQUENCE_TASK_ID.NEXTVAL,5,'Configure Maintenance Type',10014,'M','A','Maintenance');

INSERT INTO LDB1_TASKS(FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FSTATUS,FCATEGORY)
VALUES(SEQUENCE_TASK_ID.NEXTVAL,1,'Configure Spare Parts',10015,'A','A','Configure Maintenance Master');
INSERT INTO LDB1_TASKS(FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FSTATUS,FCATEGORY)
VALUES(SEQUENCE_TASK_ID.NEXTVAL,2,'Configure Spare Parts',10015,'A','A','Configure Maintenance Master');
INSERT INTO LDB1_TASKS(FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FSTATUS,FCATEGORY)
VALUES(SEQUENCE_TASK_ID.NEXTVAL,3,'Configure Spare Parts',10015,'A','A','Configure Maintenance Master');
INSERT INTO LDB1_TASKS(FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FSTATUS,FCATEGORY)
VALUES(SEQUENCE_TASK_ID.NEXTVAL,4,'Configure Spare Parts',10015,'A','A','Configure Maintenance Master');
INSERT INTO LDB1_TASKS(FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FSTATUS,FCATEGORY)
VALUES(SEQUENCE_TASK_ID.NEXTVAL,5,'Configure Spare Parts',10015,'A','A','Configure Maintenance Master');

INSERT INTO LDB1_TASKS (FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FCATEGORY) 
VALUES (SEQUENCE_TASK_ID.NEXTVAL,1,'Manage Notification',10016,'M','Maintenance');
INSERT INTO LDB1_TASKS (FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FCATEGORY) 
VALUES (SEQUENCE_TASK_ID.NEXTVAL,2,'Manage Notification',10016,'M','Maintenance');
INSERT INTO LDB1_TASKS (FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FCATEGORY) 
VALUES (SEQUENCE_TASK_ID.NEXTVAL,3,'Manage Notification',10016,'M','Maintenance');
INSERT INTO LDB1_TASKS (FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FCATEGORY) 
VALUES (SEQUENCE_TASK_ID.NEXTVAL,4,'Manage Notification',10016,'M','Maintenance');
INSERT INTO LDB1_TASKS (FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FCATEGORY) 
VALUES (SEQUENCE_TASK_ID.NEXTVAL,5,'Manage Notification',10016,'M','Maintenance');

INSERT INTO LDB1_TASKS(FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FSTATUS,FCATEGORY)
VALUES(SEQUENCE_TASK_ID.NEXTVAL,1,'View Equipment Info',10017,'M','A','Maintenance');
INSERT INTO LDB1_TASKS(FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FSTATUS,FCATEGORY)
VALUES(SEQUENCE_TASK_ID.NEXTVAL,2,'View Equipment Info',10017,'M','A','Maintenance');
INSERT INTO LDB1_TASKS(FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FSTATUS,FCATEGORY)
VALUES(SEQUENCE_TASK_ID.NEXTVAL,3,'View Equipment Info',10017,'M','A','Maintenance');
INSERT INTO LDB1_TASKS(FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FSTATUS,FCATEGORY)
VALUES(SEQUENCE_TASK_ID.NEXTVAL,4,'View Equipment Info',10017,'M','A','Maintenance');
INSERT INTO LDB1_TASKS(FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FSTATUS,FCATEGORY)
VALUES(SEQUENCE_TASK_ID.NEXTVAL,5,'View Equipment Info',10017,'M','A','Maintenance');

INSERT INTO LDB1_TASKS(FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FSTATUS,FCATEGORY)
VALUES(SEQUENCE_TASK_ID.NEXTVAL,1,'Manage Release',10018,'M','A','Maintenance');
INSERT INTO LDB1_TASKS(FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FSTATUS,FCATEGORY)
VALUES(SEQUENCE_TASK_ID.NEXTVAL,2,'Manage Release',10018,'M','A','Maintenance');
INSERT INTO LDB1_TASKS(FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FSTATUS,FCATEGORY)
VALUES(SEQUENCE_TASK_ID.NEXTVAL,3,'Manage Release',10018,'M','A','Maintenance');
INSERT INTO LDB1_TASKS(FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FSTATUS,FCATEGORY)
VALUES(SEQUENCE_TASK_ID.NEXTVAL,4,'Manage Release',10018,'M','A','Maintenance');
INSERT INTO LDB1_TASKS(FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FSTATUS,FCATEGORY)
VALUES(SEQUENCE_TASK_ID.NEXTVAL,5,'Manage Release',10018,'M','A','Maintenance');

INSERT INTO LDB1_TASKS(FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FSTATUS,FCATEGORY)
VALUES(SEQUENCE_TASK_ID.NEXTVAL,1,'Configure Email Templates',10019,'A','A','Configure Maintenance Master');
INSERT INTO LDB1_TASKS(FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FSTATUS,FCATEGORY)
VALUES(SEQUENCE_TASK_ID.NEXTVAL,2,'Configure Email Templates',10019,'A','A','Configure Maintenance Master');
INSERT INTO LDB1_TASKS(FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FSTATUS,FCATEGORY)
VALUES(SEQUENCE_TASK_ID.NEXTVAL,3,'Configure Email Templates',10019,'A','A','Configure Maintenance Master');
INSERT INTO LDB1_TASKS(FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FSTATUS,FCATEGORY)
VALUES(SEQUENCE_TASK_ID.NEXTVAL,4,'Configure Email Templates',10019,'A','A','Configure Maintenance Master');
INSERT INTO LDB1_TASKS(FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FSTATUS,FCATEGORY)
VALUES(SEQUENCE_TASK_ID.NEXTVAL,5,'Configure Email Templates',10019,'A','A','Configure Maintenance Master');



/*
INSERT INTO LDB1_TASKS (FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FCATEGORY) 
VALUES (SEQUENCE_TASK_ID.NEXTVAL,1,'Maintenance Schedule',10016,'M','Maintenance');
INSERT INTO LDB1_TASKS (FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FCATEGORY) 
VALUES (SEQUENCE_TASK_ID.NEXTVAL,2,'Maintenance Schedule',10016,'M','Maintenance');
INSERT INTO LDB1_TASKS (FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FCATEGORY) 
VALUES (SEQUENCE_TASK_ID.NEXTVAL,3,'Maintenance Schedule',10016,'M','Maintenance');
INSERT INTO LDB1_TASKS (FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FCATEGORY) 
VALUES (SEQUENCE_TASK_ID.NEXTVAL,4,'Maintenance Schedule',10016,'M','Maintenance');
INSERT INTO LDB1_TASKS (FTASKID,FACCESSLEVELID,FTASKNAME,FIDNUM,FISMASTERDATA,FCATEGORY) 
VALUES (SEQUENCE_TASK_ID.NEXTVAL,5,'Maintenance Schedule',10016,'M','Maintenance');
*/

--------------------------------------------------------------------------------------------------------------------------------

INSERT INTO LDB1_FEATURES(FFEATUREID,FFEATURETYPE,FFEATURENAME)
VALUES(1001,'MAINTENANCE_INFO','FUNCTIONAL_LOCATION');

INSERT INTO LDB1_FEATURES(FFEATUREID,FFEATURETYPE,FFEATURENAME)
VALUES(1002,'MAINTENANCE_INFO','EQUIPMENT_MODELS');

INSERT INTO LDB1_FEATURES(FFEATUREID,FFEATURETYPE,FFEATURENAME)
VALUES(1003,'MAINTENANCE_INFO','EQUIPMENTS');

INSERT INTO LDB1_FEATURES(FFEATUREID,FFEATURETYPE,FFEATURENAME)
VALUES(1004,'MAINTENANCE_INFO','MEASURING_POINTS');

INSERT INTO LDB1_FEATURES(FFEATUREID,FFEATURETYPE,FFEATURENAME)
VALUES(1005,'MAINTENANCE_INFO','TASKGROUP');

INSERT INTO LDB1_FEATURES(FFEATUREID,FFEATURETYPE,FFEATURENAME)
VALUES(1006,'MAINTENANCE_SCHEDULE','MANAGE_SCHEDULE');

INSERT INTO LDB1_FEATURES(FFEATUREID,FFEATURETYPE,FFEATURENAME)
VALUES(1007,'MAINTENANCE_SCHEDULE','MANAGE_WORKORDER');

INSERT INTO LDB1_FEATURES ( FFEATUREID, FFEATURETYPE,FFEATURENAME )
VALUES(1008,'MAINTENANCE_SCHEDULE','MANAGE_CHECKLIST');

INSERT INTO LDB1_FEATURES(FFEATUREID,FFEATURETYPE,FFEATURENAME)
VALUES(1009,'MAINTENANCE_CALENDAR','WORKORDER_DAYVIEW');

INSERT INTO LDB1_FEATURES(FFEATUREID,FFEATURETYPE,FFEATURENAME)
VALUES(1010,'MAINTENANCE_CALENDAR','WORKORDER_ORDERVIEW');

INSERT INTO LDB1_FEATURES(FFEATUREID,FFEATURETYPE,FFEATURENAME)
VALUES(1011,'MAINTENANCE_CALENDAR','WORKORDER_RESOURCEVIEW');

INSERT INTO LDB1_FEATURES ( FFEATUREID, FFEATURETYPE,FFEATURENAME )
VALUES(1012,'MAINT_SPARE_PARTS','MAINT_SPARE_PARTS');

INSERT INTO LDB1_FEATURES ( FFEATUREID, FFEATURETYPE,FFEATURENAME )
VALUES(1013,'MAINT_NOTIFICATION','MANAGE_NOTIFICATION');

INSERT INTO LDB1_FEATURES ( FFEATUREID, FFEATURETYPE,FFEATURENAME )
VALUES(1014,'MAINTENANCE_CALENDAR','VIEWMEASPNTREADINGS');
-------------------------------Object------------------------------------------------------------------------------------
INSERT INTO LDB1_OBJECT(FOBJECTID,FOBJECTNAME,FVIEWNAME)
VALUES(1001,'Maintenance Measuring Point','VW_MAINT_MEASURING_POINT');

INSERT INTO LDB1_OBJECT(FOBJECTID,FOBJECTNAME,FVIEWNAME)
VALUES(1002,'Maintenance Equipment Model','VW_MAINT_EQUIPMENTMODEL');

INSERT INTO LDB1_OBJECT(FOBJECTID,FOBJECTNAME,FVIEWNAME)
VALUES(1003,'Manage Maintenance Task SOP','VW_MAINT_TASKGROUPMODEL');

INSERT INTO LDB1_OBJECT(FOBJECTID,FOBJECTNAME,FVIEWNAME,FHDRSTATUSTYPE)
VALUES(1004,'Manage Preventive Maintenance Schedules','VW_MAINT_MANAGESCHEDULE','');

INSERT INTO LDB1_OBJECT(FOBJECTID,FOBJECTNAME,FVIEWNAME,FHDRSTATUSTYPE)
VALUES(1005,'Manage Maintenance Work Orders','VW_MAINT_MANAGEWORKORDER','');

INSERT INTO LDB1_OBJECT(FOBJECTID,FOBJECTNAME,FVIEWNAME,FHDRSTATUSTYPE)
VALUES(1006,'Manage Maintenance Checklist','VW_MAINT_MANAGECHECKLIST','');

INSERT INTO LDB1_OBJECT(FOBJECTID,FOBJECTNAME,FVIEWNAME,FHDRSTATUSTYPE)
VALUES (1007,'Work Order Day View Calendar','VW_MAINT_WORKORDER_DAYVIEW','MAINT_WORKORDERSTATUS');

INSERT INTO LDB1_OBJECT(FOBJECTID,FOBJECTNAME,FVIEWNAME,FHDRSTATUSTYPE)
VALUES (1008,'Work Order Order View Calendar','VW_MAINT_WORKORDER_ORDERVIEW','');

INSERT INTO LDB1_OBJECT(FOBJECTID,FOBJECTNAME,FVIEWNAME)
VALUES(1009,'Manage Maintenance Spare Parts','VW_MAINT_SPARE_PARTS');

INSERT INTO LDB1_OBJECT(FOBJECTID,FOBJECTNAME,FVIEWNAME)
VALUES(1010,'Manage Notification','VW_MAINT_NOTIFICATION');

INSERT INTO LDB1_OBJECT(FOBJECTID,FOBJECTNAME,FVIEWNAME)
VALUES(1011,'Maintenance Plant User Measuring Point','VW_MAINT_PLNTUSR_MEASURPOINT');

INSERT INTO LDB1_OBJECT(FOBJECTID,FOBJECTNAME,FVIEWNAME)
VALUES(1012,'Manage Plant User Preventive Maintenance Schedules','VW_MAINT_PLNTUSR_MANAGSCHEDULE');

INSERT INTO LDB1_OBJECT(FOBJECTID,FOBJECTNAME,FVIEWNAME)
VALUES(1013,'Manage Plant User Maintenance Work Orders','VW_MAINT_PLNTUSR_MANAGEWORKODR');

INSERT INTO LDB1_OBJECT(FOBJECTID,FOBJECTNAME,FVIEWNAME,FHDRSTATUSTYPE)
VALUES (1014,'Work Order Plant User Day View Calendar','VW_MAINT_PLNTUSR_WORKODR_DAYVW','MAINT_WORKORDERSTATUS');

INSERT INTO LDB1_OBJECT(FOBJECTID,FOBJECTNAME,FVIEWNAME,FHDRSTATUSTYPE)
VALUES (1015,'Work Order Plant User Order View Calendar','VW_MAINT_PLNTUSR_WORKODR_ODRVW','');

INSERT INTO LDB1_OBJECT(FOBJECTID,FOBJECTNAME,FVIEWNAME,FHDRSTATUSTYPE)
VALUES (1016,'Measuring Point Readings','VW_MAINT_MEASPNTREADINGS','');


INSERT INTO LDB1_OBJECT(FOBJECTID,FOBJECTNAME,FVIEWNAME,FSTATUS) 
VALUES (1017,'Manage Plant User Maintenance Checklist','VW_MAINT_PLNTUSR_MANAGECHECKLT','A');
--------------------------------Plant Feature----------------------------------------------------------------------------

INSERT INTO LDB1_PLANTFEATURE(FFEATUREID,FCOMPANYID,FSITEID,FPLINEID,FOBJECTID,FPAGETOLOAD) 
VALUES(1001,1,0,0,0,'/Preventive/FunctionalLocationList.aspx');--57

INSERT INTO LDB1_PLANTFEATURE(FFEATUREID,FCOMPANYID,FSITEID,FPLINEID,FOBJECTID,FPAGETOLOAD)  
VALUES(1002,1,0,0,1002,'/Preventive/EquipmentModelList.aspx');--58

INSERT INTO LDB1_PLANTFEATURE(FFEATUREID,FCOMPANYID,FSITEID,FPLINEID,FOBJECTID,FPAGETOLOAD)  
VALUES(1003,1,0,0,0,'/Preventive/EquipmentList.aspx');--59

INSERT INTO LDB1_PLANTFEATURE(FFEATUREID,FCOMPANYID,FSITEID,FPLINEID,FOBJECTID,FPAGETOLOAD)  
VALUES(1004,1,0,0,1001,'/Preventive/MeasuringPointList.aspx'); --60

INSERT INTO LDB1_PLANTFEATURE(FFEATUREID,FCOMPANYID,FSITEID,FPLINEID,FOBJECTID,FPAGETOLOAD,FADDITIONALINFO)  
VALUES(1004,1,0,0,1011,'/Preventive/MeasuringPointList.aspx','PLANTUSER');

INSERT INTO LDB1_PLANTFEATURE(FFEATUREID,FCOMPANYID,FSITEID,FPLINEID,FOBJECTID,FPAGETOLOAD)
VALUES(1005,1,0,0,1003,'/Preventive/TaskGroupList.aspx');

INSERT INTO LDB1_PLANTFEATURE(FFEATUREID,FCOMPANYID,FSITEID,FPLINEID,FOBJECTID,FPAGETOLOAD)
VALUES(1006,1,0,0,1004,'/Preventive/ManageSchedule.aspx');

INSERT INTO LDB1_PLANTFEATURE(FFEATUREID,FCOMPANYID,FSITEID,FPLINEID,FOBJECTID,FPAGETOLOAD,FADDITIONALINFO)  
VALUES(1006,1,0,0,1012,'/Preventive/ManageSchedule.aspx','PLANTUSER');

INSERT INTO LDB1_PLANTFEATURE(FFEATUREID,FCOMPANYID,FSITEID,FPLINEID,FOBJECTID,FPAGETOLOAD)
VALUES(1007,1,0,0,1005,'/Preventive/ManageWorkOrder.aspx');

INSERT INTO LDB1_PLANTFEATURE(FFEATUREID,FCOMPANYID,FSITEID,FPLINEID,FOBJECTID,FPAGETOLOAD,FADDITIONALINFO)
VALUES(1007,1,0,0,1013,'/Preventive/ManageWorkOrder.aspx','PLANTUSER');

INSERT INTO LDB1_PLANTFEATURE( FFEATUREID,FCOMPANYID, FSITEID, FPLINEID, FOBJECTID,FPAGETOLOAD,FADDITIONALINFO)
VALUES(1008,1,0,0,1006,'/PREVENTIVE/MANAGEMEASUREMENTDOCUMENT.ASPX','ADMINUSER');

INSERT INTO LDB1_PLANTFEATURE(FFEATUREID,FCOMPANYID,FSITEID,FOBJECTID,FPAGETOLOAD)
VALUES(1009,1,0,1007,'/Preventive/WorkOrderDayView.aspx');

INSERT INTO LDB1_PLANTFEATURE(FFEATUREID,FCOMPANYID,FSITEID,FOBJECTID,FPAGETOLOAD,FADDITIONALINFO)
VALUES(1009,1,0,1014,'/Preventive/WorkOrderDayView.aspx','PLANTUSER');

INSERT INTO LDB1_PLANTFEATURE(FFEATUREID,FCOMPANYID,FSITEID,FOBJECTID,FPAGETOLOAD)
VALUES(1010,1,0,1008,'/Preventive/WorkOrderOrderView.aspx');

INSERT INTO LDB1_PLANTFEATURE(FFEATUREID,FCOMPANYID,FSITEID,FOBJECTID,FPAGETOLOAD,FADDITIONALINFO)
VALUES(1010,1,0,1015,'/Preventive/WorkOrderOrderView.aspx','PLANTUSER');

INSERT INTO LDB1_PLANTFEATURE(FFEATUREID,FCOMPANYID,FSITEID,FOBJECTID,FPAGETOLOAD)
VALUES(1011,1,0,0,'/Preventive/WorkOrderResourceView.aspx');

INSERT INTO LDB1_PLANTFEATURE( FFEATUREID,FCOMPANYID, FSITEID, FPLINEID, FOBJECTID,FPAGETOLOAD)
VALUES(1012,1,0,0,1009,'/Preventive/ConfigureSpareParts.aspx');

INSERT INTO LDB1_PLANTFEATURE( FFEATUREID,FCOMPANYID, FSITEID, FPLINEID, FOBJECTID,FPAGETOLOAD)
VALUES(1013,1,0,0,1010,'/Preventive/ManageNotification.aspx');

INSERT INTO LDB1_PLANTFEATURE( FFEATUREID,FCOMPANYID, FSITEID, FPLINEID, FOBJECTID,FPAGETOLOAD)
VALUES(1014,1,0,0,1016,'/Preventive/ViewWorkOrderInfo.aspx');


INSERT INTO LDB1_PLANTFEATURE(FFEATUREID,FCOMPANYID,FSITEID,FPLINEID,FOBJECTID,FPAGETOLOAD,FADDITIONALINFO)
VALUES (1008,1,0,0,1017,'/PREVENTIVE/MANAGEMEASUREMENTDOCUMENT.ASPX','PLANTUSER');

--Updating AdditionalInfo as 'ADMINUSER' for existing plant feature
UPDATE LDB1_PLANTFEATURE SET FADDITIONALINFO='ADMINUSER' WHERE FFEATUREID IN (1004,1006,1007,1009,1010);

------------------------------------------------------------------------------------------------------------------------------
ALTER TABLE LDB1_EMAILTEMPLATES ADD FISMAINTENANCEEMAILTEMPLATE CHAR(1) DEFAULT 'N'; 


INSERT INTO LDB1_EMAILMODULE (FEMAILTYPEID,FIDNUM,FEMAILTYPENAME,FMODULE)
VALUES (SEQUENCE_EMAILMODULE_ID.NEXTVAL,7,'EMAIL ON SCHEDULE NOTIFICATION','T');

INSERT INTO LDB1_EMAILMODULE (FEMAILTYPEID,FIDNUM,FEMAILTYPENAME,FMODULE)
VALUES (SEQUENCE_EMAILMODULE_ID.NEXTVAL,8,'EMAIL ON WORK STATEMENT','T');

INSERT INTO LDB1_EMAILMODULE (FEMAILTYPEID,FIDNUM,FEMAILTYPENAME,FMODULE)
VALUES (SEQUENCE_EMAILMODULE_ID.NEXTVAL,9,'EMAIL ON COMPLETE','T');

INSERT INTO LDB1_EMAILMODULE (FEMAILTYPEID,FIDNUM,FEMAILTYPENAME,FMODULE)
VALUES (SEQUENCE_EMAILMODULE_ID.NEXTVAL,10,'EMAIL ON REPORT ISSUE','T');

INSERT INTO LDB1_EMAILMODULE (FEMAILTYPEID,FIDNUM,FEMAILTYPENAME,FMODULE)
VALUES (SEQUENCE_EMAILMODULE_ID.NEXTVAL,11,'EMAIL ON DOWNTIME','T');
-------------------------------------------------------------------------------------------------------------------------
INSERT INTO LDB1_ENUMTYPE(FTYPE,FVALUE,FTEXT) VALUES('MAINT_TASKGROUPSTATUS','D','DRAFT');
INSERT INTO LDB1_ENUMTYPE(FTYPE,FVALUE,FTEXT) VALUES('MAINT_TASKGROUPSTATUS','A','APPROVED');
INSERT INTO LDB1_ENUMTYPE(FTYPE,FVALUE,FTEXT) VALUES('MAINT_TASKGROUPSTATUS','M','MODIFIED');

INSERT INTO LDB1_ENUMTYPE(FTYPE,FVALUE,FTEXT,FIMAGENAME) VALUES('MAINT_WORKORDER_TASK_STATUS','N','Not Started','Maint_NotStarted.png');
INSERT INTO LDB1_ENUMTYPE(FTYPE,FVALUE,FTEXT,FIMAGENAME) VALUES('MAINT_WORKORDER_TASK_STATUS','P','In Progress','Maint_InProgress.png');
INSERT INTO LDB1_ENUMTYPE(FTYPE,FVALUE,FTEXT,FIMAGENAME) VALUES('MAINT_WORKORDER_TASK_STATUS','C','Completed','Maint_Completed.png');

INSERT INTO LDB1_ENUMTYPE(FTYPE,FVALUE,FTEXT) VALUES ('MAINT_PRIORITY_TYPE','HIGHEST','Highest');
INSERT INTO LDB1_ENUMTYPE(FTYPE,FVALUE,FTEXT) VALUES ('MAINT_PRIORITY_TYPE','HIGH','High');
INSERT INTO LDB1_ENUMTYPE(FTYPE,FVALUE,FTEXT) VALUES ('MAINT_PRIORITY_TYPE','MEDIUM','Medium');
INSERT INTO LDB1_ENUMTYPE(FTYPE,FVALUE,FTEXT) VALUES ('MAINT_PRIORITY_TYPE','LOW','Low');
INSERT INTO LDB1_ENUMTYPE(FTYPE,FVALUE,FTEXT) VALUES ('MAINT_PRIORITY_TYPE','LOWEST','Lowest');


INSERT INTO LDB1_ENUMTYPE(FTYPE,FVALUE,FTEXT) VALUES ('MAINT_SCHEDULESTATUS','CREATED','Created');
INSERT INTO LDB1_ENUMTYPE(FTYPE,FVALUE,FTEXT) VALUES('MAINT_SCHEDULESTATUS','RELEASED','Released'); 
INSERT INTO LDB1_ENUMTYPE(FTYPE,FVALUE,FTEXT) VALUES('MAINT_SCHEDULESTATUS','CANCELLED','Cancelled');
INSERT INTO LDB1_ENUMTYPE(FTYPE,FVALUE,FTEXT) VALUES('MAINT_SCHEDULESTATUS','SCHEDULING','Scheduling');

INSERT INTO LDB1_ENUMTYPE(FTYPE,FVALUE,FTEXT,FIMAGENAME) VALUES('MAINT_WORKORDERSTATUS','CREATED','Created','Maint_Created.png');
INSERT INTO LDB1_ENUMTYPE(FTYPE,FVALUE,FTEXT,FIMAGENAME) VALUES('MAINT_WORKORDERSTATUS','SCHEDULED','Scheduled','Maint_Scheduled.png');
INSERT INTO LDB1_ENUMTYPE(FTYPE,FVALUE,FTEXT,FIMAGENAME) VALUES('MAINT_WORKORDERSTATUS','INPROGRESS','In Progress','Maint_InProgress.png');
INSERT INTO LDB1_ENUMTYPE(FTYPE,FVALUE,FTEXT,FIMAGENAME) VALUES('MAINT_WORKORDERSTATUS','COMPLETED','Completed','Maint_Completed.png');
INSERT INTO LDB1_ENUMTYPE(FTYPE,FVALUE,FTEXT,FIMAGENAME) VALUES('MAINT_WORKORDERSTATUS','OVERDUE','Overdue','Maint_Overdue.png');
INSERT INTO LDB1_ENUMTYPE(FTYPE,FVALUE,FTEXT,FIMAGENAME) VALUES('MAINT_WORKORDERSTATUS','CANCELLED','Cancelled','Maint_Cancelled.png');
INSERT INTO LDB1_ENUMTYPE(FTYPE,FVALUE,FTEXT,FIMAGENAME) VALUES('MAINT_WORKORDERSTATUS','CLOSED','Closed','Maint_Closed.png');

INSERT INTO LDB1_ENUMTYPE(FTYPE,FVALUE,FTEXT) VALUES('MAINT_NOTIFICATION_STATUS','CREATED','Created');
INSERT INTO LDB1_ENUMTYPE(FTYPE,FVALUE,FTEXT) VALUES('MAINT_NOTIFICATION_STATUS','ASSIGNED','Work Order Assigned'); 
INSERT INTO LDB1_ENUMTYPE(FTYPE,FVALUE,FTEXT) VALUES('MAINT_NOTIFICATION_STATUS','REJECTED','Rejected');
INSERT INTO LDB1_ENUMTYPE(FTYPE,FVALUE,FTEXT) VALUES('MAINT_NOTIFICATION_STATUS','COMPLETED','Completed');
INSERT INTO LDB1_ENUMTYPE(FTYPE,FVALUE,FTEXT) VALUES('MAINT_NOTIFICATION_STATUS','INPROGRESS','In-Progress');
-------------------------------------------------------------------------------------------------------
--ALREADY PART OF CORE PROJECT. HENCE NO NEED TO EXECUTE
/*
CREATE TABLE LDB1_USER_OBJECTVIEW 
(
 FUSEROBJECTVIEWID       NUMBER(8)    CONSTRAINT pk_userobjectview_id PRIMARY KEY
,FUSERID                 NUMBER(6)    NOT NULL
,FOBJECTID               NUMBER(8)    NOT NULL
,FVIEWNAME               NVARCHAR2(40) NOT NULL
,FIS_SHAREDVIEW CHAR(1) DEFAULT 'N'
,FTIMESTAMP		          TIMESTAMP			DEFAULT CURRENT_TIMESTAMP
); 

CREATE INDEX indx_userobjectview_oid ON LDB1_USER_OBJECTVIEW(FOBJECTID,FUSERID);


CREATE SEQUENCE SEQUENCE_USEROBJECTVIEW_ID 
START WITH     1
INCREMENT BY   1
NOCACHE
NOCYCLE;
----------------------------------------------------------------------------------
--
CREATE TABLE LDB1_USEROBJECTVIEWFIELD
(	
 FUSEROBJECTVIEWID      NUMBER(10)  NOT NULL
,FFIELDID               NUMBER(10)  NOT NULL
,FISFILTER              CHAR(1)
,FGROUPBYORDER          NUMBER(1) DEFAULT 0
,FSORTTYPE              CHAR(1)   DEFAULT 'N'
,FDISPLAYORDER          NUMBER(3)
,FTIMESTAMP		          TIMESTAMP			   DEFAULT CURRENT_TIMESTAMP
);
CREATE INDEX indx_userobjectfield_id ON LDB1_USEROBJECTVIEWFIELD(FUSEROBJECTVIEWID);
----------------------------------------------------------------------------------

CREATE TABLE LDB1_USEROBJECT_DEFAULTVIEW
(
FUSERID             NUMBER(6) NOT NULL,
FOBJECTID           NUMBER(8) NOT NULL,
FUSEROBJECTVIEWID   NUMBER(8) NOT NULL,
FTIMESTAMP		          TIMESTAMP			   DEFAULT CURRENT_TIMESTAMP
);

CREATE INDEX indx_userdefaultview_id ON LDB1_USEROBJECT_DEFAULTVIEW(FUSERID,FOBJECTID);
*/

-----------------------------------------------------------------------------------------------
CREATE TABLE LDB1_MAINT_USERPREFERENCE 
( 
   FUSERID            NUMBER(6,0) CONSTRAINT PK_MAINT_USERPREFERENCE_ID PRIMARY KEY
  ,FLOCATIONIDS       NVARCHAR2(200)
  ,FEQUIPMENTIDS      NVARCHAR2(200)
  ,FLASTUPDATEDON     NUMBER(8,0) 
  ,FLASTUPDATEDTIME   NUMBER(6,0) 	    
  ,FTIMESTAMP         TIMESTAMP (6) DEFAULT CURRENT_TIMESTAMP
);
----------------------------------------------------------------------------------------------------------
CREATE TABLE LDB1_MAINT_MASTER
(
	 FMASTERID 		    NUMBER(10,0)    NOT NULL
	,FSITEID 		      NUMBER(8,0)     NOT NULL 
	,FNAME 			      NVARCHAR2(50)   NOT NULL
	,FDESCRIPTION 		NVARCHAR2(100)  NULL
	,FTYPE	        	VARCHAR2(50)    NOT NULL -- M:MANUFACTURER,T:EQUIPTYPE,C:EQUPCLASS,P:MEASPOINTCATEGORY,G:MPSELECTIONGROUP,S:TASKGROUPTYPE
	,FSTATUS 		      CHAR(1 BYTE)    DEFAULT 'A' -- (A-Active,I-In-Active)	        
	,FCREATEDBY 		  NUMBER(6,0)     NULL
	,FCREATEDON 		  NUMBER(8,0)     DEFAULT 0
	,FCREATEDTIME		  NUMBER (6,0)    DEFAULT 0
  ,FUPDATEDBY 		  NUMBER(6,0)     NULL
	,FUPDATEDON 		  NUMBER(8,0)     DEFAULT 0 
	,FUPDATEDTIME		  NUMBER (6,0)    DEFAULT 0
	,FTIMESTAMP 		  TIMESTAMP    DEFAULT CURRENT_TIMESTAMP
	,CONSTRAINT 		  PK_MAINT_MASTER PRIMARY KEY (FMASTERID)
	--,CONSTRAINT 		  FK_MAINT_MASTER_SITEID FOREIGN KEY (FSITEID)  REFERENCES LDB1_COUNTRY_SITES(FSITEID)
);

CREATE INDEX INDX_MAINTMASTERTYPE ON LDB1_MAINT_MASTER(FSITEID,FTYPE);
CREATE INDEX INDX_MAINTMASTER_UPDDATE ON LDB1_MAINT_MASTER(FSITEID,FUPDATEDON);

CREATE SEQUENCE SEQUENCE_MAINTMASTER_ID
START WITH 1	
INCREMENT BY 1
NOCACHE
NOCYCLE;

INSERT INTO LDB1_MAINT_MASTER(FMASTERID,FSITEID,FNAME,FDESCRIPTION,FTYPE)
VALUES (SEQUENCE_MAINTMASTER_ID.NEXTVAL,0,'Highest',NULL,'R');
INSERT INTO LDB1_MAINT_MASTER(FMASTERID,FSITEID,FNAME,FDESCRIPTION,FTYPE)
VALUES (SEQUENCE_MAINTMASTER_ID.NEXTVAL,0,'High',NULL,'R');
INSERT INTO LDB1_MAINT_MASTER(FMASTERID,FSITEID,FNAME,FDESCRIPTION,FTYPE)
VALUES (SEQUENCE_MAINTMASTER_ID.NEXTVAL,0,'Medium',null,'R');
INSERT INTO LDB1_MAINT_MASTER(FMASTERID,FSITEID,FNAME,FDESCRIPTION,FTYPE)
VALUES (SEQUENCE_MAINTMASTER_ID.NEXTVAL,0,'Low',NULL,'R');
INSERT INTO LDB1_MAINT_MASTER(FMASTERID,FSITEID,FNAME,FDESCRIPTION,FTYPE)
VALUES (SEQUENCE_MAINTMASTER_ID.NEXTVAL,0,'Lowest',null,'R');
------------------------------------------------------------------------------------------------------------
CREATE TABLE LDB1_MAINT_SELGRP_CODE
(
     FMASTERID            NUMBER(10,0) 	  NOT NULL
    ,FITEMID              NUMBER(4,0) 	  NOT NULL 
    ,FDISPLAYNAME 		    NVARCHAR2(50)   NOT NULL
    ,FSITEID 			        NUMBER(8,0)     NOT NULL
    ,FCREATEDBY 			    NUMBER(6,0)
    ,FCREATEDDATE 		    NUMBER(8,0) 
    ,FCREATEDTIME 		    NUMBER(6,0)     DEFAULT 0
    ,FUPDATEDBY 		      NUMBER(6,0)     NULL
    ,FUPDATEDON 		      NUMBER(8,0)     DEFAULT 0 
    ,FUPDATEDTIME		      NUMBER (6,0)    DEFAULT 0
    ,FSTATUS              CHAR(1) DEFAULT 'A'
    ,FTIMESTAMP 			    TIMESTAMP  DEFAULT CURRENT_TIMESTAMP 
    ,CONSTRAINT PK_SELECTIONGRPITEM_ID PRIMARY KEY (FMASTERID, FITEMID)
);

CREATE INDEX INDX_MASTER_SELGRP_SITEID ON LDB1_MAINT_SELGRP_CODE(FSITEID);
CREATE INDEX INDX_MASTER_SELGRP_UPDDATE ON LDB1_MAINT_SELGRP_CODE(FSITEID,FUPDATEDON);

----------------------------------------------------------------------------------
CREATE TABLE LDB1_MAINT_LOCATIONS
( 
 FLOCATIONID    	      NUMBER(10,0) 
,FSITEID        	      NUMBER(8,0)       NOT NULL
,FLOCATIONNAME  	      NVARCHAR2(50)     NOT NULL 
,FLOCATIONDESC  	      NVARCHAR2(200)    NULL
,FLOCATIONCODE          VARCHAR2(10)
,FPARENTLOCATIONID      NUMBER(10,0)      NULL
,FIMAGENAME     	      NVARCHAR2(200)    NULL
,FSTATUS		            CHAR(1 BYTE)      DEFAULT 'A'   -- (A-Active,I-In-Active)
,FCREATEDBY		          NUMBER(6,0)	      NULL	
,FCREATEDON		          NUMBER(8,0)	      DEFAULT 0	-- ALWAYS IN YYYYMMDD FORMAT
,FCREATEDTIME		        NUMBER(6,0)	      DEFAULT 0	
,FUPDATEDBY		          NUMBER(6,0)	      NULL	
,FUPDATEDON		          NUMBER(8,0)	      DEFAULT 0	-- ALWAYS IN YYYYMMDD FORMAT
,FUPDATEDTIME		        NUMBER(6,0)	      DEFAULT 0	
,FTIMESTAMP     	      TIMESTAMP     DEFAULT CURRENT_TIMESTAMP
,CONSTRAINT 	          PK_MAINT_LOCATION PRIMARY KEY (FLOCATIONID)	
,CONSTRAINT             FK_MAINT_LOCATION_SITEID FOREIGN KEY (FSITEID) REFERENCES LDB1_COUNTRY_SITES(FSITEID)
);

CREATE INDEX INDX_MAINTFUNLOCATIONNAME ON LDB1_MAINT_LOCATIONS(FSITEID,UPPER(FLOCATIONNAME));
CREATE INDEX INDX_MAINTFUNLOC_PARENTID ON LDB1_MAINT_LOCATIONS(FSITEID,FPARENTLOCATIONID);
CREATE INDEX INDX_MAINTFUNLOC_UPDDATE ON LDB1_MAINT_LOCATIONS(FSITEID,FUPDATEDON);
CREATE INDEX INDX_MAINTFUNLOC_LOCCODE ON LDB1_MAINT_LOCATIONS(FLOCATIONCODE);
---------------------------------------------------------------------------------------------------------------------
CREATE TABLE LDB1_MAINT_EQUIPMENT
(
  FEQUIPMENTID           NUMBER(10,0)
 ,FSITEID                NUMBER(8,0)         NOT NULL
 ,FEQUIPMENTCODE         VARCHAR2(10)        NULL
 ,FEQUIPMENTNAME         NVARCHAR2(50)       NOT NULL
 ,FDESCRIPTION           NVARCHAR2 (1000)     NULL
 ,FMANUFID               NUMBER(10,0)        DEFAULT 0  
 ,FCATEGORYID            NUMBER(8,0)         DEFAULT 0  
 ,FCLASSID               NUMBER(8,0)         DEFAULT 0
 ,FIMAGENAME             NVARCHAR2(200)      NULL
 ,FINFOTYPE              CHAR(1 BYTE)        DEFAULT 'N' --E-EQUIPMENT,M-MODEL
 ,FLOCATIONID            NUMBER(10,0)        DEFAULT 0
 ,FRESOURCEID            NUMBER(10,0)        DEFAULT 0
 ,FMODELREFERENCEID      NUMBER(10,0)        DEFAULT 0
 ,FMODELNUMBER           NVARCHAR2(50)       NULL
 ,FSERIALNUMBER          NVARCHAR2(200)      NULL
 ,FWARRANTYNUMBER        NVARCHAR2(100)      NULL
 ,FWARRANTYSTARTDATE	 NUMBER(8,0)           NULL
 ,FWARRANTYEXPIREDDATE	 NUMBER(8,0)	       NULL
 ,FPURCHASEDATE          NUMBER(8,0)	       NULL
 ,FINSTALLDATE           NUMBER(8,0)	       NULL
 ,FPARENTEQUIPMENTID     NUMBER (10,0)       DEFAULT 0
 ,FSTATUS                CHAR(1 BYTE)        DEFAULT 'N' --(A-Active,I-In-Active)
 ,FCREATEDBY             NUMBER(6,0)         NULL 
 ,FCREATEDON             NUMBER(8,0)         DEFAULT 0
 ,FCREATEDTIME           NUMBER(6,0)         DEFAULT 0
 ,FUPDATEDBY             NUMBER(6,0)         NULL
 ,FUPDATEDON             NUMBER(8,0)         DEFAULT 0
 ,FUPDATEDTIME           NUMBER(6,0)         DEFAULT 0
 ,FTIMESTAMP             TIMESTAMP      DEFAULT CURRENT_TIMESTAMP
 ,CONSTRAINT  PK_MAINT_EQUIPMENT         PRIMARY KEY (FEQUIPMENTID)	
 ,CONSTRAINT  FK_MAINT_EQUIPMENT_SITEID  FOREIGN KEY (FSITEID)     REFERENCES LDB1_COUNTRY_SITES(FSITEID) 
);

CREATE INDEX INDX_MAINTEQUIPMENT_MODEL ON LDB1_MAINT_EQUIPMENT(FSITEID,UPPER(FEQUIPMENTNAME));
CREATE INDEX INDX_MAINTEQUIPMENT_LOCATION ON LDB1_MAINT_EQUIPMENT(FSITEID,FLOCATIONID);
CREATE INDEX INDX_MAINTEQUIPMENT_REFID ON LDB1_MAINT_EQUIPMENT(FSITEID,FMODELREFERENCEID);
CREATE INDEX INDX_MAINTEQUIPMENT_UPDDATE ON LDB1_MAINT_EQUIPMENT(FSITEID,FUPDATEDON);

CREATE SEQUENCE SEQUENCE_MAINT_EQUIPMENT_ID --using for Flocation,Equipment,Equipment Model
START WITH 1
INCREMENT BY 1
NOCACHE
NOCYCLE;
----------------------------------------------------------------------------------------------
CREATE TABLE LDB1_MAINT_SUPPORT
( 
  FSUPPORTID          NUMBER(10,0)      NOT NULL
 ,FEQUIPMENTID        NUMBER(10,0)      NOT NULL
 ,FSITEID             NUMBER (8,0)      NOT NULL
 ,FSUPPORTNAME        NVARCHAR2(50) NOT NULL  
 ,FSUPPORTNUMBER      VARCHAR2(50 BYTE) NULL
 ,FSUPPORTEMAILID     NVARCHAR2(200)    NULL
 ,FSUPPORTTYPE        CHAR(1)           DEFAULT 'H'  --H - InHouse, T - Third Party   
 ,FSTATUS	            CHAR(1)           DEFAULT 'A'
 ,FCREATEDBY          NUMBER(6,0)       NULL
 ,FCREATEDON          NUMBER(8,0)       DEFAULT 0
 ,FCREATEDTIME        NUMBER(6,0)       DEFAULT 0
 ,FUPDATEDBY          NUMBER(6,0)       NULL
 ,FUPDATEDON          NUMBER(8,0)       DEFAULT 0
 ,FUPDATEDTIME        NUMBER(6,0)       DEFAULT 0
 ,FTIMESTAMP          TIMESTAMP         DEFAULT CURRENT_TIMESTAMP
 ,CONSTRAINT PK_SUPPORT_ID     PRIMARY KEY (FSUPPORTID)
 ,CONSTRAINT FK_SUPPORT_SITEID FOREIGN KEY (FSITEID) REFERENCES LDB1_COUNTRY_SITES(FSITEID)
);

CREATE INDEX INDX_MAINTSUPPORT_EQUIPID ON LDB1_MAINT_SUPPORT(FSITEID,FEQUIPMENTID);
CREATE INDEX INDX_MAINTSUPPORT_UPDDATE ON LDB1_MAINT_SUPPORT(FSITEID,FUPDATEDON);

CREATE SEQUENCE SEQUENCE_MAINTSUPPORT_ID
START WITH 1
INCREMENT BY 1
NOCACHE
NOCYCLE;
----------------------------------------------------------------------------------------------------------
CREATE TABLE LDB1_MAINT_AUTH_GROUP
(
 FREFERENCEID       NUMBER(10)
,FTYPE              VARCHAR(15) --LOCATION, EQUIPMENT
,FWORKGROUPID       NUMBER(10)
,FSITEID            NUMBER(5)
,FSTATUS            CHAR(1)        DEFAULT 'A'
,FUPDATEDBY         NUMBER(6)
,FUPDATEDDATE       NUMBER(8)
,FUPDATEDTIME       NUMBER(6)
,CONSTRAINT PK_MAINTAUTH_ID     PRIMARY KEY (FREFERENCEID,FWORKGROUPID,FTYPE)
);

CREATE INDEX INDX_MAINTAUTH_GRPID ON LDB1_MAINT_AUTH_GROUP(FSITEID);
CREATE INDEX INDX_MAINTAUTH_UPDDATE ON LDB1_MAINT_AUTH_GROUP(FSITEID,FUPDATEDDATE);

----------------------------------------------------------------------------------------------


CREATE TABLE LDB1_MAINT_MEASURINGPOINT
(
	 FMEASURINGPOINTID 	        NUMBER(10,0)  NOT NULL
	,FSITEID 		                NUMBER(8,0)   NOT NULL
	,FMEASURINGPOINTCODE        VARCHAR2(10)  NULL
	,FPARENTID 		              NUMBER(10,0)  DEFAULT 0
	,FPARENTTYPE 		            CHAR(1 BYTE)       --M:EquipmentModel,E:Equipment,L:Location	
	,FMEASURINGPOINTNAME	      NVARCHAR2(50) NOT NULL
	,FDESCRIPTION		            NVARCHAR2(200) NULL
	,FPOSITION		              NVARCHAR2(100) NULL
	,FCATEGORYID 		            NUMBER(10,0) NOT NULL
	,FSENSORTYPEUOMID	          NUMBER(8,0) NULL
	,FIMAGENAME     		        NVARCHAR2(200) NULL
	,FISCOUNTER 		            CHAR(1 BYTE)
	,FREADINGTYPE		            CHAR(1 BYTE) DEFAULT 'T' -- T:TEXT,D:DIGIT,S:SELECTION
	,FDECIMALPLACES 		        NUMBER(10,3) DEFAULT 0	
	,FLOWERLIMIT	 	            NUMBER(10,3) DEFAULT 0
	,FUPPERLIMIT	 	            NUMBER(10,3) DEFAULT 0
	,FLOWERLIMITWARNING 	      NUMBER(10,3) DEFAULT 0
	,FUPPERLIMITWARNING 	      NUMBER(10,3) DEFAULT 0
	,FMAXTEXTLENGTH		          NUMBER(8,0) DEFAULT 0
	,FGROUPID 		              NUMBER(10,0) NULL
	,FOPCTAGID 		              NVARCHAR2(500)
	,FUUID			                NUMBER(8,0) DEFAULT 0 NOT NULL
	,FSTATUS 		                CHAR(1 BYTE) DEFAULT 'A'  -- A:Activate,I:InActive,N:NotActivated      
	,FCREATEDBY 		            NUMBER(6,0) NULL
	,FCREATEDON 		            NUMBER(8,0) DEFAULT 0
	,FCREATEDTIME		            NUMBER (6,0) DEFAULT 0
  ,FUPDATEDBY 		            NUMBER(6,0) NULL
	,FUPDATEDON 		            NUMBER(8,0) DEFAULT 0 
	,FUPDATEDTIME		            NUMBER (6,0) DEFAULT 0
	,FTIMESTAMP 		            TIMESTAMP DEFAULT CURRENT_TIMESTAMP
	,CONSTRAINT 		            PK_MAINT_MP PRIMARY KEY (FMEASURINGPOINTID)
	,CONSTRAINT 		            FK_MAINT_MP_SENSUOMID FOREIGN KEY (FSENSORTYPEUOMID)  REFERENCES LDB1_SENSORTYPE_UOM(FSENSORTYPEUOMID)
);

CREATE INDEX INDX_MAINTMPNAME ON LDB1_MAINT_MEASURINGPOINT(FSITEID,UPPER(FMEASURINGPOINTNAME));
CREATE INDEX INDX_MAINTMPCODE ON LDB1_MAINT_MEASURINGPOINT(FSITEID,FMEASURINGPOINTCODE);
CREATE INDEX INDX_MAINTMPCODE_UPDDATE ON LDB1_MAINT_MEASURINGPOINT(FSITEID,FUPDATEDON);
CREATE INDEX INDX_MAINTMPCODE_PID ON LDB1_MAINT_MEASURINGPOINT(FSITEID,FPARENTID);

CREATE SEQUENCE SEQUENCE_MAINT_MP_ID
START WITH 1	
INCREMENT BY 1
NOCACHE
NOCYCLE;
---------------------------------------------------------------------------------------------------------------
CREATE TABLE LDB1_MAINT_DOCUMENTS 
(
  FDOCUMENTID           NUMBER(10,0)           NOT NULL
 ,FSITEID               NUMBER(8,0)            NOT NULL
 ,FREFERENCEID          NUMBER(10,0)           NOT NULL
 ,FREF_TYPE		          VARCHAR2(30) 	         NOT NULL       --TASK,SCHEDULE ATTACHMENT (WORK ORDER DOCS)
 ,FDOCUMENTTYPE         CHAR (1 BYTE)          DEFAULT 'N'
 ,FDOCUMENTNAME         NVARCHAR2(200)         NOT NULL
 ,FSTATUS               CHAR(1 BYTE)           DEFAULT 'N'
 ,FCREATEDBY            NUMBER(6,0)            NULL
 ,FCREATEDON            NUMBER(8,0)            DEFAULT 0
 ,FCREATEDTIME	        NUMBER(6,0)            DEFAULT 0
 ,FUPDATEDBY            NUMBER(6,0)            NULL
 ,FUPDATEDON 		        NUMBER(8,0)            DEFAULT 0 
 ,FUPDATEDTIME		      NUMBER(6,0)            DEFAULT 0
 ,FTIMESTAMP 		        TIMESTAMP          DEFAULT CURRENT_TIMESTAMP
 ,CONSTRAINT  PK_MAINT_DOCUMENTS      	 PRIMARY KEY (FDOCUMENTID)
 ,CONSTRAINT  FK_MAINT_DOCUMENTS_SITEID  FOREIGN KEY (FSITEID)  REFERENCES LDB1_COUNTRY_SITES(FSITEID)
);

CREATE INDEX INDX_MAINT_DOC_SITE ON LDB1_MAINT_DOCUMENTS(FSITEID,FREFERENCEID);
CREATE INDEX INDX_MAINT_DOC_UPDDATE ON LDB1_MAINT_DOCUMENTS(FSITEID,FUPDATEDON);

CREATE SEQUENCE SEQUENCE_MAINT_DOC_ID
START WITH 1	
INCREMENT BY 1
NOCACHE
NOCYCLE; 
-----------------------------------------------------------------------------------------------------
----------------SEQUENCE  --------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------
CREATE SEQUENCE SEQUENCE_GENERATERANDOM_ID -- Generating unique code for label
START WITH 1	
INCREMENT BY 1
NOCACHE
NOCYCLE;
--------------------------------------------------------------------------------------------------------------
CREATE TABLE LDB1_MAINT_TOOLS
(
	 FTOOLSID			       NUMBER(10,0) NOT NULL
	,FSITEID             NUMBER(8,0)  NOT NULL
	,FTOOLSDESC          NVARCHAR2(200)
	,FTOOLSIMAGENAME     NVARCHAR2(500)	
	,FSTATUS             CHAR(1) DEFAULT 'A'  -- A-ACTIVE; I-INACTIVE
	,FCREATEDBY          NUMBER(6,0)
	,FCREATEDDATE        NUMBER(8,0) DEFAULT 0
	,FUPDATEDBY          NUMBER(6,0)
	,FUPDATEDATE         NUMBER(8,0) DEFAULT 0
	,FTIMESTAMP          TIMESTAMP DEFAULT CURRENT_TIMESTAMP
	,CONSTRAINT  PK_TOOLS_ID  PRIMARY KEY (FTOOLSID)
	,CONSTRAINT FK_MAINT_TOOLS_SITEID FOREIGN KEY (FSITEID) REFERENCES LDB1_COUNTRY_SITES (FSITEID) 	
);

CREATE INDEX INDX_MAINT_TOOLS ON LDB1_MAINT_TOOLS(FSITEID);
CREATE INDEX INDX_MAINT_TOOLS_UPDDATE ON LDB1_MAINT_TOOLS(FSITEID,FUPDATEDATE);

CREATE SEQUENCE SEQUENCE_MAINT_TOOLS_ID
START WITH 1
INCREMENT BY 1
NOCACHE
NOCYCLE;
-----------------------------------------------------------------------------------------------------
CREATE TABLE LDB1_MAINT_TASKGROUP
(
	 FTASKGROUPID		      NUMBER(10,0) NOT NULL
	,FTASKGROUPNAME		    NVARCHAR2(200) NOT NULL
	,FTASKGROUPTYPEID	    NUMBER(10,0) NOT NULL
	,FVERSION			        NUMBER(10,0)  NOT NULL
	,FIDENTIFIER			    NUMBER(10,0) NOT NULL
	,FSITEID				      NUMBER(8,0) NOT NULL
	,FSTATUS				      CHAR(1) DEFAULT 'D'     -- D-Draft, A-Approved, I- Inactive
	,FAPPROVEDON			    NUMBER(8,0) DEFAULT 0 NOT NULL
	,FAPPROVEDTIME		    NUMBER(6,0) DEFAULT 0 NOT NULL
	,FAPPROVEDBY			    NUMBER(10,0) DEFAULT NULL
	,FREF_TYPE 				    VARCHAR2(30) NOT NULL
	,FREFERENCEID 			  NUMBER(10,0) DEFAULT 0
	,FCREATEDON			      NUMBER(8,0) DEFAULT 0 NOT NULL
	,FCREATEDTIME		      NUMBER(6,0) DEFAULT 0 NOT NULL
	,FCREATEDBY			      NUMBER(10,0) DEFAULT NULL
	,FUPDATEDON			      NUMBER(8,0) DEFAULT 0 NOT NULL
	,FUPDATEDTIME		      NUMBER(6,0) DEFAULT 0 NOT NULL
	,FUPDATEDBY         	NUMBER(10,0) DEFAULT NULL
	,FTIMESTAMP			      TIMESTAMP  DEFAULT CURRENT_TIMESTAMP
	,CONSTRAINT 	PK_MAINT_TASKGROUP_ID PRIMARY KEY (FTASKGROUPID)
	,CONSTRAINT FK_MAINT_TASKGROUP_SITEID FOREIGN KEY (FSITEID) REFERENCES LDB1_COUNTRY_SITES (FSITEID)
);

CREATE INDEX INDX_MAINTTASKGRPNAME ON LDB1_MAINT_TASKGROUP(FSITEID,UPPER(FTASKGROUPNAME));
CREATE INDEX INDX_MAINTTASKGRPIDENTIFIER ON LDB1_MAINT_TASKGROUP(FSITEID,FIDENTIFIER);
CREATE INDEX INDX_MAINT_TASKGRP_UPDDATE ON LDB1_MAINT_TASKGROUP(FSITEID,FUPDATEDON);

CREATE SEQUENCE SEQUENCE_MAINT_TASKGRP_ID 
START WITH 1	
INCREMENT BY 1
NOCACHE
NOCYCLE;

CREATE SEQUENCE SEQUENCE_MAINT_TASKGRP_IDENTID  
START WITH 1	
INCREMENT BY 1
NOCACHE
NOCYCLE;
----------------------------------------------------------------------------------------------------------

CREATE TABLE LDB1_MAINT_TASKS
(
   FTASKID				      NUMBER(10,0)      NOT NULL	
	,FREFERENCEID  		    NUMBER(10,0)      NOT NULL
	,FTASKNAME			      NVARCHAR2(200)    NOT NULL
	,FDESCRIPTION		      NVARCHAR2(2000)    DEFAULT NULL
	,FSAFETYDESCRIPTION	  NVARCHAR2(1000)   DEFAULT NULL
	,FESTIMATEDTIME		    NUMBER(20,0)      DEFAULT 0
	,FUNIT				        CHAR(1)           DEFAULT 'M'    -- S-Seconds, M-Minutes, H-Hours
	,FREMARKENABLED		    CHAR(1)           DEFAULT 'N'
	,FREMARKMANDATORY	    CHAR(1)           DEFAULT 'N'
	,FPICTUREENABLED		  CHAR(1)           DEFAULT 'N'
	,FPICTUREMANDATORY	  CHAR(1)           DEFAULT 'N'
	,FSEQUENCENUM		      NUMBER(2,0)       NOT NULL
	,FSITEID 			        NUMBER(8,0)       NOT NULL
	,FSTATUS 				      CHAR(1) DEFAULT 'A'
	,FCREATEDON			      NUMBER(8,0)       DEFAULT 0 NOT NULL
	,FCREATEDTIME		      NUMBER(6,0)       DEFAULT 0 NOT NULL
	,FCREATEDBY			      NUMBER(10,0)      DEFAULT NULL
	,FUPDATEDON			      NUMBER(8,0)       DEFAULT 0 NOT NULL
	,FUPDATEDTIME		      NUMBER(6,0)       DEFAULT 0 NOT NULL
	,FUPDATEDBY         	NUMBER(10,0)      DEFAULT NULL
	,FTIMESTAMP			      TIMESTAMP     DEFAULT CURRENT_TIMESTAMP
	,CONSTRAINT 	        PK_MAINT_TASKS_ID PRIMARY KEY (FTASKID)
	,CONSTRAINT FK_MAINT_TASK_SITEID FOREIGN KEY (FSITEID) REFERENCES LDB1_COUNTRY_SITES (FSITEID)
  );

CREATE INDEX INDX_MAINTTASK ON LDB1_MAINT_TASKS(FSITEID,FREFERENCEID);
CREATE INDEX INDX_MAINT_TASKS_UPDDATE ON LDB1_MAINT_TASKS(FSITEID,FUPDATEDON);
CREATE INDEX INDX_MAINTTASKNAME ON LDB1_MAINT_TASKS(FSITEID,UPPER(FTASKNAME));

CREATE SEQUENCE SEQUENCE_MAINT_TASKS
START WITH 1
INCREMENT BY 1
NOCACHE
NOCYCLE;
-------------------------------------------------------------------------------------------------------------------
CREATE TABLE LDB1_MAINT_TASKSPPE
( 
	 FTASKPPEID			      NUMBER(10,0) NOT NULL
	,FPPEID				        NUMBER(10,0) NOT NULL
	,FTASKGROUPID		      NUMBER(10,0) NOT NULL	
	,FREFERENCEID		      NUMBER(10,0) NOT NULL       ---taskid
	,FSITEID 			        NUMBER(8,0) NOT NULL
	,FSTATUS 				      CHAR(1) DEFAULT 'A'   
	,FCREATEDON			      NUMBER(8,0) DEFAULT 0 NOT NULL
	,FCREATEDTIME       	NUMBER(6,0) DEFAULT 0 NOT NULL
	,FCREATEDBY         	NUMBER(10,0) DEFAULT NULL
	,FUPDATEDON				    NUMBER(8,0) DEFAULT 0 NOT NULL
	,FUPDATEDTIME 			  NUMBER(6,0) DEFAULT 0 NOT NULL
	,FUPDATEDBY 			    NUMBER(10,0) DEFAULT NULL
	,FTIMESTAMP			      TIMESTAMP  DEFAULT CURRENT_TIMESTAMP
	,CONSTRAINT PK_MAINT_TASKPPE_ID PRIMARY KEY (FTASKPPEID)
	,CONSTRAINT FK_MAINT_TASKSPPE_GRPID FOREIGN KEY (FTASKGROUPID) REFERENCES LDB1_MAINT_TASKGROUP (FTASKGROUPID)
	,CONSTRAINT FK_MAINT_TASKPPE_SITEID FOREIGN KEY (FSITEID) REFERENCES LDB1_COUNTRY_SITES (FSITEID)
);

CREATE INDEX INDX_MAINTTASK_TASKGRP ON LDB1_MAINT_TASKSPPE(FSITEID,FTASKGROUPID);
CREATE INDEX INDX_MAINTTASK_TASKID ON LDB1_MAINT_TASKSPPE(FSITEID,FREFERENCEID);
CREATE INDEX INDX_MAINT_TASKPPE_UPDDATE ON LDB1_MAINT_TASKSPPE(FSITEID,FUPDATEDON);

CREATE SEQUENCE PK_MAINT_TASKPPE_ID
START WITH 1	
INCREMENT BY 1
NOCACHE
NOCYCLE;

-------------------------------------------------------------------------------------------------------------

CREATE TABLE LDB1_MAINT_TASKSTOOLS
( 
	 FTASKTOOLSID		      NUMBER(10,0) NOT NULL
	,FTOOLSID			        NUMBER(10,0) NOT NULL
	,FTASKGROUPID		      NUMBER(10,0) NOT NULL	
	,FREFERENCEID		      NUMBER(10,0) NOT NULL
	,FSITEID 			        NUMBER(8,0) NOT NULL
	,FSTATUS 				      CHAR(1) DEFAULT 'A'
	,FCREATEDON			      NUMBER(8,0) DEFAULT 0 NOT NULL
	,FCREATEDTIME       	NUMBER(6,0) DEFAULT 0 NOT NULL
	,FCREATEDBY         	NUMBER(10,0) DEFAULT NULL
	,FUPDATEDON				    NUMBER(8,0) DEFAULT 0 NOT NULL
	,FUPDATEDTIME 			  NUMBER(6,0) DEFAULT 0 NOT NULL
	,FUPDATEDBY 			    NUMBER(10,0) DEFAULT NULL
	,FTIMESTAMP			      TIMESTAMP DEFAULT CURRENT_TIMESTAMP
	,CONSTRAINT PK_MAINT_TASKTOOLS_ID  PRIMARY KEY (FTASKTOOLSID)
	,CONSTRAINT FK_MAINT_TASKSTOOLS_GRPID FOREIGN KEY (FTASKGROUPID) REFERENCES LDB1_MAINT_TASKGROUP (FTASKGROUPID)
	,CONSTRAINT FK_MAINT_TASKSTOOLS_SITEID FOREIGN KEY (FSITEID) REFERENCES LDB1_COUNTRY_SITES (FSITEID)
);
CREATE INDEX INDX_MAINTTASK_TOOLS ON LDB1_MAINT_TASKSTOOLS(FSITEID,FREFERENCEID);
CREATE INDEX INDX_MAINTTASKTOOL_TSKGRP ON LDB1_MAINT_TASKSTOOLS(FSITEID,FTASKGROUPID);
CREATE INDEX INDX_MAINT_TASKTOOL_UPDDATE ON LDB1_MAINT_TASKSTOOLS(FSITEID,FUPDATEDON);

CREATE SEQUENCE PK_MAINT_TASKTOOLS_ID
START WITH 1	
INCREMENT BY 1
NOCACHE
NOCYCLE;
-----------------------------------------------------------------------------------------------------------------
CREATE TABLE LDB1_MAINT_TASKSPARAM
(
	 FPARAMETERID		      NUMBER(10,0) NOT NULL
	,FTASKGROUPID		      NUMBER(10,0) NOT NULL	
	,FREFERENCEID		      NUMBER(10,0) NOT NULL
	,FPARAMNAME			      NVARCHAR2(200) NOT NULL
	,FISMANDATORY		      CHAR(1) DEFAULT 'N'
	,FTYPE				        CHAR(1) DEFAULT 'S'		-- S-SingleLine, M-Multi-Line, N-Number, D-Decimal, T-Selection Type
	,FSELECTIONGROUPID	  NUMBER(10,0) DEFAULT 0
	,FSITEID        		  NUMBER(8,0) NOT NULL
	,FSTATUS 				      CHAR(1) DEFAULT 'A'
	,FCREATEDON			      NUMBER(8,0) DEFAULT 0 NOT NULL
	,FCREATEDTIME       	NUMBER(6,0) DEFAULT 0 NOT NULL
	,FCREATEDBY         	NUMBER(10,0) DEFAULT NULL
	,FUPDATEDON         	NUMBER(8,0) DEFAULT 0 NOT NULL
	,FUPDATEDTIME       	NUMBER(6,0) DEFAULT 0 NOT NULL
	,FUPDATEDBY         	NUMBER(10,0) DEFAULT NULL
	,FTIMESTAMP			      TIMESTAMP DEFAULT CURRENT_TIMESTAMP
	,CONSTRAINT PK_MAINT_TASKPARAM_ID  PRIMARY KEY (FPARAMETERID)
	,CONSTRAINT FK_MAINT_TASKSPARAM_GRPID FOREIGN KEY (FTASKGROUPID) REFERENCES LDB1_MAINT_TASKGROUP (FTASKGROUPID)
	,CONSTRAINT FK_MAINT_TASKSPARAM_SITEID FOREIGN KEY (FSITEID) REFERENCES LDB1_COUNTRY_SITES (FSITEID)
);

CREATE INDEX INDX_MAINTTASK_PARAM ON LDB1_MAINT_TASKSPARAM(FSITEID,FREFERENCEID);
CREATE INDEX INDX_MAINTTASKPARAM_GRPID ON LDB1_MAINT_TASKSPARAM(FSITEID,FTASKGROUPID);
CREATE INDEX INDX_MAINT_TASKPARAM_UPDDATE ON LDB1_MAINT_TASKSPARAM(FSITEID,FUPDATEDON);

CREATE SEQUENCE SEQUENCE_MAINT_TASKSPARAM_ID
START WITH 1	
INCREMENT BY 1
NOCACHE
NOCYCLE;
-------------------------------------------------------------------------------------------------------------------
 CREATE TABLE LDB1_MAINT_WORKGROUPUSER
(	
   FWORKGROUPID         NUMBER(10,0)
	,FITEMID              NUMBER(6,0)
	,FUSERID              NUMBER(6,0) 
	,FSITEID              NUMBER(8,0) 
	,FSCH_NOTIFY          CHAR(1) DEFAULT 'N'
	,FWORKSTART_NOTIFY    CHAR(1) DEFAULT 'N'
	,FWORKFINISH_NOTIFY   CHAR(1) DEFAULT 'N'
	,FREPORTISSUE_NOTIFY  CHAR(1) DEFAULT 'N'
	,FDOWNTIME_NOTIFY     CHAR(1) DEFAULT 'N'
	,FUSERTYPE            CHAR(1)
	,FCREATEDBY           NUMBER(6,0) 
	,FCREATEDDATE         NUMBER(8,0) DEFAULT 0
	,FCREATEDTIME         NUMBER(6,0) DEFAULT 0
	,FSTATUS              CHAR(1) DEFAULT 'A'
	,FUPDATEDBY           NUMBER(6,0)
	,FUPDATEDON           NUMBER(8,0) DEFAULT 0
	,FUPDATEDTIME         NUMBER(6,0) DEFAULT 0
  ,FTIMESTAMP			      TIMESTAMP DEFAULT CURRENT_TIMESTAMP
	,CONSTRAINT  FK_MAINT_WORKGROUP_SITEID FOREIGN KEY (FSITEID) REFERENCES LDB1_COUNTRY_SITES(FSITEID)
  ,CONSTRAINT INDX_MAINTWORKGROUP_ID PRIMARY KEY (FWORKGROUPID,FITEMID)
);

CREATE INDEX INDX_MAINTWORKGROUP_SITEID ON LDB1_MAINT_WORKGROUPUSER(FSITEID,FUSERID);
CREATE INDEX INDX_MAINTWORKGROUP_UPDDATE ON LDB1_MAINT_WORKGROUPUSER(FSITEID,FUPDATEDON);
-------------------------------------------------------------------------------------------------------------

CREATE TABLE LDB1_MAINT_SCHEDULE
( 
 FSCHEDULEID    	        NUMBER(10,0) 
,FSITEID        	        NUMBER(8,0)        NOT NULL
,FMAINTENANCENAME   	    NVARCHAR2(200)     NOT NULL 
,FMAINDESCRIPTION	        NVARCHAR2(2000)    NULL
,FSCHEDULE_TYPE     	    CHAR (1)           DEFAULT 'S' -- (S-Maint Schedule,W-Work Order,I-Inspection,N-Notification)
,FMAINTYPEID        	    NUMBER(10,0)
,FPRIORITYTYPE            VARCHAR2(20)    
,FLOCATIONID       	      NUMBER(10,0)
,FEQUIPMENTID       	    NUMBER(10,0)
,FWORKGROUPID       	    NUMBER(10,0)
,FTASKGROUPIDENTIFIER     NUMBER(10,0)
,FSCHD_RULE_DESC_TYPE	    NUMBER(2,0)
,FSCHD_RULE_DESC	        VARCHAR2(200)
,FSCHEDULESTATUS	        VARCHAR2(15)      DEFAULT 'CREATED' --(CREATED,ASSIGNED, SCHEDULING,RELEASED,,I-Cancelled,REJECTED)
,FTASKGROUPID             NUMBER(18,0)      DEFAULT 0
,FSTATUS		              CHAR (1 BYTE)     DEFAULT 'A'   -- (A-Active,I-In-Active)
,FCREATEDBY		            NUMBER (6,0)	    NULL	
,FCREATEDON		            NUMBER (8,0)	    DEFAULT 0	-- ALWAYS IN YYYYMMDD FORMAT
,FCREATEDTIME   	        NUMBER (6,0)	    DEFAULT 0	
,FUPDATEDBY	      	      NUMBER (6,0)	    NULL	
,FUPDATEDON		            NUMBER (8,0)	    DEFAULT 0	-- ALWAYS IN YYYYMMDD FORMAT
,FUPDATEDTIME	     	      NUMBER (6,0)	    DEFAULT 0		
,FINST_UPDATEDBY	        NUMBER (6,0)	    NULL	
,FINST_UPDATEDON	        NUMBER (8,0)	    DEFAULT 0	-- ALWAYS IN YYYYMMDD FORMAT
,FINST_UPDATEDTIME	      NUMBER (6,0)	    DEFAULT 0	
,FNOTIFY_WORK_ORDERID     VARCHAR2(12)      
,FNOTIFY_TYPEID           NUMBER(10,0) DEFAULT 0
,FREMARKS                 NVARCHAR2(500) NULL
,FTIMESTAMP     	        TIMESTAMP     DEFAULT CURRENT_TIMESTAMP
,CONSTRAINT 	            PK_MAINT_SCHEDULE PRIMARY KEY (FSCHEDULEID)	
,CONSTRAINT               FK_MAINT_SCHEDULE_SITEID FOREIGN KEY (FSITEID) REFERENCES LDB1_COUNTRY_SITES(FSITEID)
);


CREATE INDEX INDX_MAINTSCHEDULENAME ON LDB1_MAINT_SCHEDULE(FSITEID,UPPER(FMAINTENANCENAME));
CREATE INDEX INDX_MAINTSCHEDULE_STATUS ON LDB1_MAINT_SCHEDULE(FSITEID,FSCHEDULESTATUS);
CREATE INDEX INDX_MAINTSCHEDULE_UPDDATE ON LDB1_MAINT_SCHEDULE(FSITEID,FUPDATEDON);
CREATE INDEX INDX_MAINTSCHEDULE_TASKID ON LDB1_MAINT_SCHEDULE(FSITEID,FTASKGROUPIDENTIFIER);
CREATE INDEX INDX_MAINTSCHEDULE_NOTIFY ON LDB1_MAINT_SCHEDULE(FSITEID,FNOTIFY_WORK_ORDERID);

CREATE SEQUENCE SEQUENCE_MAINT_SCHEDULE_ID 
START WITH 1 
INCREMENT BY 1 
NOCYCLE 
NOCACHE;
------------------------------------------------------------------------------------------------------------

CREATE TABLE LDB1_MAINT_SCHEDULE_DTL
(
 FSCHEDULE_DTL_ID	          NUMBER(10,0) NOT NULL
,FSITEID		                NUMBER(8,0) NOT NULL
,FSCHEDULEID		            NUMBER(10,0) NOT NULL
,FITEM_ID		                NUMBER(2,0) NOT NULL
,FFREQUENCY		              VARCHAR2(10) --HOURLY,DAILY,WEEKLY,MONTHLY,YEARLY
,FINTERVAL		              NUMBER(3,0) --EVERY 'N' DAYS
,FBASEDONPERFDATE	          CHAR(1) DEFAULT 'N'
,FSTARTDATE		              NUMBER(8,0) 
,FSTARTTIME		              NUMBER(6,0)
,FENDDATE		                NUMBER(8,0) 
,FENDNUM_OCCURENCE	        NUMBER(8,0) --NO. OF OCCURENCES
,FWEEK_DAY		              VARCHAR2(50) --SUN,MON,TUE
,FMONTH_OPTION		          NUMBER(1,0) --1.MONTH BY DATE 2.MONTH BY DAY
,FMONTH_DAY		              VARCHAR2(100) --1,2,3,4..
,FMONTH_POSITION	          VARCHAR2(50) -- FIRST,SECOND,THIRD,FOUTRH,LAST
,FYEAR_OPTION		            NUMBER(1,0) --1.YEAR BY DATE 2.YEAR BY DAY
,FYEAR_MONTH		            VARCHAR2(100) --JAN,FEB,MAR,APR..
,FNOTIFYDAY		              NUMBER(2,0)
,FCREATEDBY		              NUMBER(8,0)
,FCREATEDON		              NUMBER(8,0)
,FCREATEDTIME		            NUMBER(6,0)
,FUPDATEDBY		              NUMBER(8,0)
,FUPDATEDON		              NUMBER(8,0)
,FUPDATEDTIME		            NUMBER(6,0)
,FSTATUS		                CHAR(1) DEFAULT 'A'
,FTIMESTAMP		              TIMESTAMP DEFAULT CURRENT_TIMESTAMP
,CONSTRAINT PK_MAINTSCHEDULE_DTL_ID PRIMARY KEY (FSCHEDULE_DTL_ID)
);

CREATE INDEX INDX_MAINT_SCHDDTL_SCHD_ID ON LDB1_MAINT_SCHEDULE_DTL(FSITEID,FSCHEDULEID);
CREATE INDEX INDX_MAINT_SCHDDTL_SCHD_UPDDATE ON LDB1_MAINT_SCHEDULE_DTL(FSITEID,FUPDATEDON);

CREATE SEQUENCE SEQUENCE_MAINTSCHEDULE_DTLID 
START WITH 1 
INCREMENT BY 1 
NOCYCLE 
NOCACHE;
------------------------------------------------------------------------------------------------------
CREATE TABLE LDB1_MAINT_SCHEDULE_SPAREPARTS
(
 FSITEID			    NUMBER(8,0) NOT NULL
,FSCHEDULEID 	    NUMBER(10,0) NOT NULL
,FIDHID			      VARCHAR2(18) NOT NULL
,FQTY			        NUMBER(13,3)
,FCREATEDBY		    NUMBER(8,0)
,FCREATEDON		    NUMBER(8,0)
,FCREATEDTIME	    NUMBER(6,0)
,FUPDATEDBY		    NUMBER(8,0)
,FUPDATEDON		    NUMBER(8,0)
,FUPDATEDTIME	    NUMBER(6,0)
,FSTATUS		      CHAR(1 BYTE)	    DEFAULT 'A'
,FTIMESTAMP		    TIMESTAMP(6) DEFAULT CURRENT_TIMESTAMP
,CONSTRAINT 	    PK_MAINT_SCHD_SPAREPART_ID PRIMARY KEY (FSITEID,FSCHEDULEID,FIDHID)
);

CREATE INDEX INDX_MAINT_SCH_SPARE_UPDDATE ON LDB1_MAINT_SCHEDULE_SPAREPARTS(FSITEID,FUPDATEDON);
---------------------------------------------------------------------------------------------------------------
/*CREATE TABLE LDB1_MAINT_SCHEDULE_ATTACHMENT
(
 FATTACHMENTID	        NUMBER(10,0)   NOT NULL
,FSITEID		            NUMBER(8,0)    NOT NULL
,FSCHEDULEID 	          NUMBER(10,0)   NOT NULL
,FATTACHMENTNAME	      NVARCHAR2(100) NOT NULL
,FCREATEDBY		          NUMBER(8,0)
,FCREATEDON		          NUMBER(8,0)
,FCREATEDTIME	          NUMBER(6,0)
,FUPDATEDBY		          NUMBER(8,0)
,FUPDATEDON		          NUMBER(8,0)
,FUPDATEDTIME	          NUMBER(6,0)
,FSTATUS                CHAR(1)   DEFAULT 'A'
,FTIMESTAMP		          TIMESTAMP(6) DEFAULT CURRENT_TIMESTAMP
,CONSTRAINT 	          PK_MAINT_SCHD_ATTACH_ID PRIMARY KEY (FATTACHMENTID)
);

CREATE INDEX INDX_MAINT_SCHD_ATTACH_SCHDLID ON LDB1_MAINT_SCHEDULE_ATTACHMENT(FSITEID,FSCHEDULEID);
CREATE INDEX INDX_MAINT_SCHD_ATTACH_UPDDATE ON LDB1_MAINT_SCHEDULE_ATTACHMENT(FSITEID,FUPDATEDON);

CREATE SEQUENCE SEQUENCE_MAINT_SCHDL_ATTACHID 
START WITH 1 
INCREMENT BY 1 
NOCACHE NOCYCLE;
*/
---------------------------------------------------------------------------------------------------------------------

CREATE TABLE LDB1_MAINT_WORKORDER
(
 FWORK_ORDERID		      VARCHAR2(12) NOT NULL
,FSITEID		            NUMBER(8,0) NOT NULL
,FREF_SCHEDULE_DTL_ID	  NUMBER(10,0) NOT NULL
,FREF_SCHEDULEID	      NUMBER(10,0)	
,FSCHEDULEDATE		      NUMBER(8,0)   DEFAULT 0
,FSCHEDULETIME		      NUMBER(6,0)   DEFAULT 0
,FPLANNEDDATE		        NUMBER(8,0)   DEFAULT 0
,FPLANNEDTIME		        NUMBER(6,0)   DEFAULT 0
,FSTARTDATE		          NUMBER(8,0)   DEFAULT 0
,FSTARTTIME		          NUMBER(6,0)   DEFAULT 0
,FENDDATE		            NUMBER(8,0)   DEFAULT 0
,FENDTIME		            NUMBER(6,0)   DEFAULT 0
,FERP_WORKORDER         VARCHAR2(15)
,FSTARTEDBY             NUMBER(6,0)   DEFAULT 0
,FENDEDBY               NUMBER(6,0)   default 0
,FTASKGROUPID		        NUMBER(10,0)  DEFAULT 0
,FISNOTIFICATIONORDER   CHAR(1 BYTE) DEFAULT 'N'      -- --('Y' - Yes, 'N' - NO);
,FWORKORDERSTATUS		    VARCHAR2(15) DEFAULT 'SCHEDULED' --CREATED, SCHEDULED,INPROGRESS,COMPLETED,INACTIVE,CANCELLED,CLOSED, OVERDUE 
,FCREATEDBY		          NUMBER(8,0)  DEFAULT 0
,FCREATEDON		          NUMBER(8,0)  DEFAULT 0
,FCREATEDTIME	          NUMBER(6,0)  DEFAULT 0
,FUPDATEDBY		          NUMBER(8,0)  DEFAULT 0
,FUPDATEDON		          NUMBER(8,0)  DEFAULT 0
,FUPDATEDTIME	          NUMBER(6,0)  DEFAULT 0 
,FTIMETAKEN             NUMBER(20) DEFAULT 0
,FTIMETAKENUNIT         CHAR(1) DEFAULT 0
,FTIMECONFIRMEDBY       NUMBER(6) DEFAULT 0
,FTIMESTAMP 		        TIMESTAMP DEFAULT CURRENT_TIMESTAMP
,CONSTRAINT PK_MAINT_WORKORDER_ID PRIMARY KEY (FWORK_ORDERID)
);

CREATE INDEX INDX_MAINTWORKORDER_SDTLID ON LDB1_MAINT_WORKORDER(FSITEID,FREF_SCHEDULE_DTL_ID);
CREATE INDEX INDX_MAINTWORKORDER_SID ON LDB1_MAINT_WORKORDER(FSITEID,FREF_SCHEDULEID);
CREATE INDEX INDX_MAINTWORKORDER_UPDDATE ON LDB1_MAINT_WORKORDER(FSITEID,FUPDATEDON);
CREATE INDEX INDX_MAINTWORKORDER_SCHDATE ON LDB1_MAINT_WORKORDER(FSITEID,FSCHEDULEDATE);
CREATE INDEX INDX_MAINTWORKORDER_ENDATE ON LDB1_MAINT_WORKORDER(FSITEID,FENDDATE);

CREATE SEQUENCE SEQUENCE_MAINTWORKORDER_ID 
START WITH 1 
INCREMENT BY 1 
NOCYCLE 
NOCACHE;

----------------------------------------------------------------------------------------------
CREATE TABLE LDB1_MAINT_MEAS_DOCS
( 
 FSCHEDULEID    	        NUMBER(10,0) 
,FSITEID        	        NUMBER(8,0)       NOT NULL
,FITEMID                  NUMBER(10,0)
,FMEASURINGPOINTID        NUMBER(10,0)
,FUPDATEDON               NUMBER(8,0)
,FUPDATEDTIME             NUMBER(6,0)
,FUPDATEDBY               NUMBER(6,0)
,FSTATUS		              CHAR(1 BYTE)	    DEFAULT 'A'
,FTIMESTAMP     	        TIMESTAMP      DEFAULT CURRENT_TIMESTAMP
,CONSTRAINT 	            PK_MAINT_MEAS_DOCS PRIMARY KEY (FSITEID,FSCHEDULEID,FMEASURINGPOINTID)	
,CONSTRAINT               FK_MAINT_MEAS_DOCS_SITEID FOREIGN KEY (FSITEID) REFERENCES LDB1_COUNTRY_SITES(FSITEID)
);

-----------------------------------------------------------------------------------------------------------------------
CREATE TABLE LDB1_MAINT_WORKORDER_TASK
(
FWORK_ORDERID       VARCHAR2(12)        NOT NULL
,FSITEID            NUMBER(8,0)         NOT NULL
,FTASKID            NUMBER(10,0)        NOT NULL
,FSEQUENCENUM 		  NUMBER(2)
,FREMARKS           NVARCHAR2(300)
,FISSAFETYCONFIRMED CHAR(1)				DEFAULT 'N'
,FSTARTEDBY         NUMBER(10,0)
,FSTARTDATE         NUMBER(8,0)
,FSTARTTIME         NUMBER(6,0)
,FENDEDBY           NUMBER(10,0)
,FENDDATE           NUMBER(8,0)
,FENDTIME           NUMBER(6,0)
,FCREATEDON		      NUMBER (8,0)	    DEFAULT 0	-- ALWAYS IN YYYYMMDD FORMAT
,FCREATEDTIME   	  NUMBER (6,0)	    DEFAULT 0	
,FUPDATEDON		      NUMBER (8,0)	    DEFAULT 0	-- ALWAYS IN YYYYMMDD FORMAT
,FUPDATEDTIME	     	NUMBER (6,0)	    DEFAULT 0	
,FTIMESTAMP     	  TIMESTAMP(6)         DEFAULT CURRENT_TIMESTAMP
);
CREATE INDEX INDX_MAINT_WO_TASK ON LDB1_MAINT_WORKORDER_TASK(FSITEID,FWORK_ORDERID);
CREATE INDEX INDX_MAINT_WO_TASK_UPDDATE ON LDB1_MAINT_WORKORDER_TASK(FSITEID,FUPDATEDON);
----------------------------------------------------------------------------------------------------------------
CREATE TABLE LDB1_MAINT_WORKORDER_TASKPARAM
(
 FWORK_ORDERID       VARCHAR2(12)       NOT NULL
,FSITEID            NUMBER(8,0)         NOT NULL
,FTASKID            NUMBER(10,0)        NOT NULL
,FPARAMETERID       NUMBER(10,0)        NOT NULL
,FVALUE             NVARCHAR2(300)
,FSELECTCODEITEM 	  NUMBER(4)
,FRECORDEDBY        NUMBER(10,0)
,FRECORDEDDATE      NUMBER(8,0)
,FRECORDEDTIME      NUMBER(6,0)
,FCREATEDON		      NUMBER (8,0)	    DEFAULT 0	-- ALWAYS IN YYYYMMDD FORMAT
,FCREATEDTIME   	  NUMBER (6,0)	    DEFAULT 0	
,FUPDATEDON		      NUMBER (8,0)	    DEFAULT 0	-- ALWAYS IN YYYYMMDD FORMAT
,FUPDATEDTIME	     	NUMBER (6,0)	    DEFAULT 0	
,FSTATUS		        CHAR(1 BYTE)	    DEFAULT 'A'
,FTIMESTAMP     	  TIMESTAMP(6)        DEFAULT CURRENT_TIMESTAMP
);
CREATE INDEX INDX_MAINT_WO_TASKPARAM ON LDB1_MAINT_WORKORDER_TASKPARAM(FSITEID,FWORK_ORDERID);
CREATE INDEX INDX_MAINT_WO_TASKPARAM_UPDDATE ON LDB1_MAINT_WORKORDER_TASKPARAM(FSITEID,FUPDATEDON);
-----------------------------------------------------------------------------------------------------------------
/* NO MORE USED
CREATE TABLE LDB1_MAINT_WORKORDER_TASKPPE
(
FWORK_ORDERID       VARCHAR2(12)        NOT NULL
,FSITEID            NUMBER(8,0)         NOT NULL
,FTASKID            NUMBER(10,0)        NOT NULL
,FTASKPPEID         NUMBER(10,0)        NOT NULL
,FCONFIRMEDBY       NUMBER(10,0)
,FCONFIRMEDDDATE    NUMBER(8,0)
,FCONFIRMEDTIME     NUMBER(6,0)
,FTIMESTAMP     	TIMESTAMP(6)        DEFAULT CURRENT_TIMESTAMP
);
CREATE INDEX INDX_MAINT_WO_TASKPPE ON LDB1_MAINT_WORKORDER_TASKPPE(FSITEID,FWORK_ORDERID);
*/
--------------------------------------------------------------------------------------------------------
CREATE TABLE LDB1_MAINT_WORKORDER_TASKIMG
(
 FWORK_ORDERID      VARCHAR2(12)        NOT NULL
,FSITEID            NUMBER(8,0)         NOT NULL
,FTASKID            NUMBER(10,0)        NOT NULL
,FIMAGEITEM		      NUMBER(2,0)
,FIMAGENAME         VARCHAR2(100)
,FCREATEDON		      NUMBER (8,0)	    DEFAULT 0	-- ALWAYS IN YYYYMMDD FORMAT
,FCREATEDTIME   	  NUMBER (6,0)	    DEFAULT 0	
,FUPDATEDON		      NUMBER (8,0)	    DEFAULT 0	-- ALWAYS IN YYYYMMDD FORMAT
,FUPDATEDTIME	     	NUMBER (6,0)	    DEFAULT 0	
,FTIMESTAMP     	  TIMESTAMP(6)        DEFAULT CURRENT_TIMESTAMP
);
CREATE INDEX INDX_MAINT_WO_TASKIMG ON LDB1_MAINT_WORKORDER_TASKIMG(FSITEID,FWORK_ORDERID);
CREATE INDEX INDX_MAINT_WO_TASKIMG_UPDDATE ON LDB1_MAINT_WORKORDER_TASKIMG(FSITEID,FUPDATEDON);
-----------------------------------------------------------------------------------------------------------------
CREATE TABLE LDB1_MAINT_WORKORDER_SPAREPART
(
	FWORK_ORDERID 		VARCHAR2(12 BYTE)   NOT NULL,
	FSITEID 	      	NUMBER(8,0)         NOT NULL, 
	FIDHID 			      VARCHAR2(18 BYTE)   NOT NULL,
	FREQUIREDQTY 		  NUMBER(13,3)        NULL,
	FACTUALQUANTITY	  NUMBER(13,3)        NULL, 	        
	FCREATEDBY 		    NUMBER(6,0)         NULL, 
	FCREATEDON 	    	NUMBER(8,0)         DEFAULT 0,
	FCREATEDTIME	  	NUMBER (6,0)        DEFAULT 0,
  FUPDATEDBY 		    NUMBER(6,0)         NULL, 
	FUPDATEDON 		    NUMBER(8,0)         DEFAULT 0, 
	FUPDATEDTIME		  NUMBER (6,0)        DEFAULT 0,
	FTIMESTAMP 		    TIMESTAMP       DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT PK_MAINT_WORKORDER_SPAREPRT_ID PRIMARY KEY (FSITEID, FWORK_ORDERID, FIDHID)
);
CREATE INDEX INDX_MAINT_WO_SPARE_UPDDATE ON LDB1_MAINT_WORKORDER_SPAREPART(FSITEID,FUPDATEDON);
-------------------------------------------------------------------------------------------------
CREATE TABLE LDB1_MAINT_READING_RESULT
(
     FREADINGID           NUMBER(10,0) 	  NOT NULL
    ,FSCHEDULEID          NUMBER(10,0)    NOT NULL
    ,FWORK_ORDERID 		    VARCHAR2(12)    NOT NULL
    ,FMEASURINGPOINTID    NUMBER(10,0) 	  NOT NULL
    ,FRESULT              NVARCHAR2(100)  NOT NULL
    ,FSITEID 			        NUMBER(8,0)     NOT NULL
    ,FCREATEDBY 			    NUMBER(6,0)
    ,FCREATEDDATE 		    NUMBER(8,0) 
    ,FCREATEDTIME 		    NUMBER(6,0)     DEFAULT 0    
    ,FSTATUS              CHAR(1)         DEFAULT 'A'
    ,FUPDATEDBY           NUMBER(6,0)
    ,FUPDATEDON           NUMBER(8,0)     DEFAULT 0
    ,FUPDATEDTIME         NUMBER(6,0)     DEFAULT 0
    ,FTIMESTAMP 			    TIMESTAMP  DEFAULT CURRENT_TIMESTAMP 
    ,CONSTRAINT PK_READING_ID PRIMARY KEY (FREADINGID)
);
CREATE INDEX INDX_MAINTREADING ON LDB1_MAINT_READING_RESULT(FSITEID,FCREATEDDATE);
------------------------------------------------------------------------------------------------
CREATE OR REPLACE  VIEW VW_MAINT_MEASURING_POINT AS 
SELECT MP.FSITEID,MP.FMEASURINGPOINTID,MP.FMEASURINGPOINTCODE,MP.FMEASURINGPOINTNAME,MP.FDESCRIPTION,MP.FPOSITION,C.FNAME AS FCATEGORY
,S.FSENSORTYPENAME,SU.FUOMNAME AS FUNIT
,DECODE(EML.FLOCATIONNAME,'',DECODE(ML.FLOCATIONNAME,'','None',ML.FLOCATIONNAME),EML.FLOCATIONNAME)  AS FLOCATIONNAME
,DECODE(ME.FEQUIPMENTNAME,'','None',ME.FEQUIPMENTNAME) AS FEQUIPMENTNAME
,CASE MP.FREADINGTYPE WHEN 'T' THEN 'Text' WHEN 'D' THEN 'Decimal' WHEN 'N' THEN 'Numeric'  WHEN 'S' THEN 'Selection' END AS FREADINGTYPE
,CASE MP.FSTATUS WHEN 'A' THEN 'Active' WHEN 'N' THEN 'Not Active' END AS FSTATUS
,MP.FLOWERLIMIT,MP.FUPPERLIMIT,MP.FLOWERLIMITWARNING,MP.FUPPERLIMITWARNING,MP.FMAXTEXTLENGTH
FROM LDB1_MAINT_MEASURINGPOINT MP
INNER JOIN LDB1_MAINT_MASTER C ON C.FMASTERID=MP.FCATEGORYID AND C.FSITEID=MP.FSITEID AND C.FSTATUS='A' AND C.FTYPE='MP_CATEGORY'
LEFT OUTER JOIN LDB1_SENSORTYPE_UOM SU ON SU.FSENSORTYPEUOMID=MP.FSENSORTYPEUOMID
LEFT OUTER JOIN LDB1_SENSOR_TYPE S ON S.FSENSORTYPEID = SU.FSENSORTYPEID
LEFT OUTER JOIN LDB1_MAINT_LOCATIONS ML ON ML.FLOCATIONID=MP.FPARENTID AND MP.FPARENTTYPE='L'
LEFT OUTER JOIN LDB1_MAINT_EQUIPMENT ME ON ME.FEQUIPMENTID=MP.FPARENTID AND MP.FPARENTTYPE='E'
LEFT OUTER JOIN LDB1_MAINT_LOCATIONS EML ON EML.FLOCATIONID=ME.FLOCATIONID AND EML.FSITEID=MP.FSITEID 
WHERE MP.FSTATUS<>'I' AND MP.FPARENTTYPE<>'M' ORDER BY MP.FUPDATEDON||MP.FUPDATEDTIME DESC;
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
CREATE OR REPLACE  VIEW VW_MAINT_PLNTUSR_MEASURPOINT AS 
SELECT DISTINCT MP.FSITEID,MP.FMEASURINGPOINTID,MP.FMEASURINGPOINTCODE,MP.FMEASURINGPOINTNAME,MP.FDESCRIPTION,MP.FPOSITION,C.FNAME AS FCATEGORY
,S.FSENSORTYPENAME,SU.FUOMNAME AS FUNIT
,MP.FUPDATEDON||MP.FUPDATEDTIME AS UPDATEDDATETIME,MA.FREFERENCEID,WU.FUSERID
,DECODE(EML.FLOCATIONNAME,'',DECODE(ML.FLOCATIONNAME,'','None',ML.FLOCATIONNAME),EML.FLOCATIONNAME)  AS FLOCATIONNAME
,DECODE(ME.FEQUIPMENTNAME,'','None',ME.FEQUIPMENTNAME) AS FEQUIPMENTNAME
,CASE MP.FREADINGTYPE WHEN 'T' THEN 'Text' WHEN 'D' THEN 'Decimal' WHEN 'N' THEN 'Numeric'  WHEN 'S' THEN 'Selection' END AS FREADINGTYPE
,CASE MP.FSTATUS WHEN 'A' THEN 'Active' WHEN 'N' THEN 'Not Active' END AS FSTATUS
,MP.FLOWERLIMIT,MP.FUPPERLIMIT,MP.FLOWERLIMITWARNING,MP.FUPPERLIMITWARNING,MP.FMAXTEXTLENGTH
FROM LDB1_MAINT_MEASURINGPOINT MP
INNER JOIN LDB1_MAINT_MASTER C ON C.FMASTERID=MP.FCATEGORYID AND C.FSITEID=MP.FSITEID AND C.FSTATUS='A' AND C.FTYPE='MP_CATEGORY'
LEFT OUTER JOIN LDB1_SENSORTYPE_UOM SU ON SU.FSENSORTYPEUOMID=MP.FSENSORTYPEUOMID
LEFT OUTER JOIN LDB1_SENSOR_TYPE S ON S.FSENSORTYPEID = SU.FSENSORTYPEID
LEFT OUTER JOIN LDB1_MAINT_LOCATIONS ML ON ML.FLOCATIONID=MP.FPARENTID AND MP.FPARENTTYPE='L'
LEFT OUTER JOIN LDB1_MAINT_EQUIPMENT ME ON ME.FEQUIPMENTID=MP.FPARENTID AND MP.FPARENTTYPE='E'
LEFT OUTER JOIN LDB1_MAINT_LOCATIONS EML ON EML.FLOCATIONID=ME.FLOCATIONID AND EML.FSITEID=MP.FSITEID 
LEFT OUTER JOIN LDB1_MAINT_AUTH_GROUP MA ON MA.FREFERENCEID=MP.FPARENTID AND MA.FTYPE=DECODE(MP.FPARENTTYPE,'L','LOCATION','EQUIPMENT') AND MA.FSITEID=MP.FSITEID AND MA.FSTATUS='A'
LEFT OUTER JOIN LDB1_MAINT_WORKGROUPUSER WU ON WU.FWORKGROUPID=MA.FWORKGROUPID AND WU.FSITEID=MP.FSITEID AND WU.FSTATUS='A'
WHERE MP.FSTATUS<>'I' AND MP.FPARENTTYPE<>'M' 
ORDER BY UPDATEDDATETIME DESC;
--------------------------------------------------------------------------------------------------------------------------
CREATE OR REPLACE VIEW VW_MAINT_EQUIPMENTMODEL AS  
SELECT E.FSITEID,E.FEQUIPMENTID,E.FEQUIPMENTNAME,E.FDESCRIPTION,E.FMODELNUMBER,NVL(E.FIMAGENAME,'0') AS FIMAGENAME,
M.FNAME AS FMANUFACTURERNAME,T.FNAME AS FCATEGORYNAME,C.FNAME AS FCLASSNAME 
FROM LDB1_MAINT_EQUIPMENT E 
INNER JOIN LDB1_MAINT_MASTER M ON M.FMASTERID=E.FMANUFID AND M.FSITEID=E.FSITEID AND M.FTYPE='MANUFACTURER'  
INNER JOIN LDB1_MAINT_MASTER T ON T.FMASTERID=E.FCATEGORYID AND T.FSITEID=E.FSITEID AND T.FTYPE='TYPE' 
LEFT OUTER JOIN LDB1_MAINT_MASTER C ON C.FMASTERID=E.FCLASSID AND C.FSITEID=E.FSITEID AND C.FTYPE='CLASS'  
WHERE E.FINFOTYPE='M' AND E.FSTATUS='A' 
ORDER BY E.FUPDATEDON DESC, E.FUPDATEDTIME DESC;
----------------------------------------------------------------------------------------------------------------
CREATE OR REPLACE VIEW VW_MAINT_TASKGROUPMODEL AS  
SELECT T.FIDENTIFIER, T.FSITEID,T.FTASKGROUPID,T.FTASKGROUPNAME,M.FNAME AS FTASKGROUPTYPE,T.FVERSION
,T.FSTATUS,T.FUPDATEDON,U.FUSERNAME,
(SELECT COUNT(FTASKID) FROM LDB1_MAINT_TASKS WHERE FREFERENCEID=T.FTASKGROUPID  AND FSITEID=T.FSITEID AND FSTATUS='A') AS FTOTALTASK,
(SELECT  ROUND(NVL(SUM(FESTIMATEDTIME),0)/60) FROM LDB1_MAINT_TASKS WHERE FREFERENCEID=T.FTASKGROUPID  AND FSITEID=T.FSITEID AND FSTATUS='A') AS FTOTALTIME
,NVL((SELECT P.FVERSION FROM LDB1_MAINT_TASKGROUP P WHERE P.FIDENTIFIER =T.FIDENTIFIER AND P.FSTATUS='A' AND ROWNUM=1),0) AS APPROVEDVERSION

FROM LDB1_MAINT_TASKGROUP T 
INNER JOIN  LDB1_MAINT_MASTER M ON T.FTASKGROUPTYPEID= M.FMASTERID AND M.FTYPE='TASKGRP_TYPE' AND M.FSITEID=T.FSITEID AND M.FSTATUS='A'   --Joining for task type
LEFT OUTER JOIN LDB1_USERINFO U ON U.FUSERID=T.FUPDATEDBY 

WHERE T.FSTATUS <> 'I' AND T.FREF_TYPE='TASK'
AND T.FTASKGROUPID = (SELECT MAX(FTASKGROUPID) FROM LDB1_MAINT_TASKGROUP WHERE FIDENTIFIER=T.FIDENTIFIER AND FSITEID =T.FSITEID AND FSTATUS <> 'I')
ORDER BY T.FUPDATEDON DESC,T.FUPDATEDTIME DESC;
 
----------------------------------------------------------------------------------------------------------------------
CREATE OR REPLACE  VIEW VW_MAINT_SPARE_PARTS AS 
SELECT LTRIM(PM.FIDHID,'0') AS FMATCODE,PM.FIDHDESC AS FMATDESC,PM.FBASEUOM AS FUNIT,M.FNAME AS FCATEGORY,PM.FSITEID
FROM LDB1_PLANTMATERIAL PM
INNER JOIN LDB1_MAINT_MASTER M ON M.FSITEID=PM.FSITEID AND PM.FMATCATEGORY=M.FMASTERID AND M.FTYPE='SPARE_PARTS' AND M.FSTATUS='A'
WHERE PM.FTYPE='S' AND PM.FSTATUS='A'
ORDER BY PM.FUPDATEDON||PM.FUPDATEDTIME DESC;
 ---------------------------------------------------------------------------------------------------------------------------
CREATE OR REPLACE VIEW VW_MAINT_MANAGESCHEDULE AS
SELECT S.FSITEID,S.FSCHEDULEID,S.FMAINTENANCENAME,S.FMAINDESCRIPTION,DECODE(ME.FEQUIPMENTNAME,NULL,ML.FLOCATIONNAME,ME.FEQUIPMENTNAME) AS FEQUIPORLOCATION
,M1.FNAME AS FMAINTTYPE,S.FPRIORITYTYPE AS FPRIORITY,M3.FNAME AS FWORKGROUP,S.FSCHEDULESTATUS,S.FSCHD_RULE_DESC_TYPE,S.FSCHD_RULE_DESC
,(SELECT LISTAGG(TO_CHAR(TRIM(U.FLASTNAME || ' ' || U.FFIRSTNAME)),', ') WITHIN GROUP (ORDER BY U.FFIRSTNAME) 
FROM LDB1_MAINT_WORKGROUPUSER MU INNER JOIN LDB1_USERINFO U ON MU.FSITEID=S.FSITEID AND U.FUSERID=MU.FUSERID WHERE MU.FWORKGROUPID=S.FWORKGROUPID AND MU.FUSERTYPE='A' AND MU.FSTATUS='A') AS FASSIGNEE
,(SELECT LISTAGG(TO_CHAR(TRIM(U.FLASTNAME || ' ' || U.FFIRSTNAME)),', ') WITHIN GROUP (ORDER BY U.FFIRSTNAME) 
FROM LDB1_MAINT_WORKGROUPUSER MU INNER JOIN LDB1_USERINFO U ON MU.FSITEID=S.FSITEID AND U.FUSERID=MU.FUSERID WHERE MU.FWORKGROUPID=S.FWORKGROUPID AND MU.FUSERTYPE='R' AND MU.FSTATUS='A') AS FREPORTEDTO

,(SELECT ROUND(SUM(MT.FESTIMATEDTIME)/60,2) FROM LDB1_MAINT_TASKGROUP TG INNER JOIN LDB1_MAINT_TASKS MT ON MT.FREFERENCEID=TG.FTASKGROUPID WHERE TG.FIDENTIFIER=S.FTASKGROUPIDENTIFIER AND TG.FSITEID=S.FSITEID AND TG.FSTATUS='A') AS FESTIMATEDTIME
,(SELECT MIN(TO_NUMBER(TO_CHAR(FSCHEDULEDATE || '' || LPAD(FSCHEDULETIME,6,'0')))) FROM LDB1_MAINT_WORKORDER W WHERE W.FREF_SCHEDULEID=S.FSCHEDULEID AND W.FSITEID=S.FSITEID AND W.FWORKORDERSTATUS='SCHEDULED') AS FNEXTDUEDATE
--,(SELECT MAX(TO_NUMBER(TO_CHAR(FSCHEDULEDATE || '' || LPAD(FSCHEDULETIME,6,'0')))) FROM LDB1_MAINT_WORKORDER W WHERE W.FREF_SCHEDULEID=S.FSCHEDULEID AND W.FSITEID=S.FSITEID AND W.FSTATUS='S') AS FLASTDUEDATE
,(SELECT MAX(FSCHEDULEDATE) FROM LDB1_MAINT_WORKORDER W WHERE W.FREF_SCHEDULEID=S.FSCHEDULEID AND W.FSITEID=S.FSITEID AND W.FWORKORDERSTATUS='SCHEDULED') AS FLASTDUEDATE

,SD.FSCHEDULE_DTL_ID,S.FSCHEDULESTATUS AS FSCHEDULESTATUSVALUE
FROM LDB1_MAINT_SCHEDULE S
INNER JOIN LDB1_MAINT_MASTER M1 ON M1.FMASTERID=S.FMAINTYPEID AND M1.FSITEID=S.FSITEID AND M1.FTYPE='MAINT_TYPE'
INNER JOIN LDB1_MAINT_MASTER M3 ON M3.FMASTERID=S.FWORKGROUPID AND M3.FSITEID=S.FSITEID AND M3.FTYPE='WORKGROUP'
LEFT OUTER JOIN LDB1_MAINT_LOCATIONS ML ON ML.FSITEID=S.FSITEID AND ML.FLOCATIONID=S.FLOCATIONID
LEFT OUTER JOIN LDB1_MAINT_EQUIPMENT ME ON ME.FSITEID=S.FSITEID AND ME.FEQUIPMENTID=S.FEQUIPMENTID
LEFT OUTER JOIN LDB1_MAINT_SCHEDULE_DTL SD ON SD.FSCHEDULEID=S.FSCHEDULEID AND ROWNUM=1 AND SD.FSTATUS='A'
WHERE S.FSCHEDULE_TYPE='S' AND S.FSTATUS='A' 
ORDER BY S.FUPDATEDON DESC,S.FUPDATEDTIME DESC,S.FCREATEDON DESC;
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
CREATE OR REPLACE VIEW VW_MAINT_PLNTUSR_MANAGSCHEDULE AS
SELECT DISTINCT S.FSITEID,S.FSCHEDULEID,S.FMAINTENANCENAME,S.FMAINDESCRIPTION,DECODE(ME.FEQUIPMENTNAME,NULL,ML.FLOCATIONNAME,ME.FEQUIPMENTNAME) AS FEQUIPORLOCATION
,MA.FREFERENCEID,WU.FUSERID,S.FUPDATEDON ,S.FUPDATEDTIME,S.FCREATEDON
,M1.FNAME AS FMAINTTYPE,S.FPRIORITYTYPE AS FPRIORITY,M3.FNAME AS FWORKGROUP,S.FSCHEDULESTATUS,S.FSCHD_RULE_DESC_TYPE,S.FSCHD_RULE_DESC

,(SELECT LISTAGG(TO_CHAR(TRIM(U.FLASTNAME || ' ' || U.FFIRSTNAME)),', ') WITHIN GROUP (ORDER BY U.FFIRSTNAME) 
FROM LDB1_MAINT_WORKGROUPUSER MU INNER JOIN LDB1_USERINFO U ON MU.FSITEID=S.FSITEID AND U.FUSERID=MU.FUSERID WHERE MU.FWORKGROUPID=S.FWORKGROUPID AND MU.FUSERTYPE='A') AS FASSIGNEE
,(SELECT LISTAGG(TO_CHAR(TRIM(U.FLASTNAME || ' ' || U.FFIRSTNAME)),', ') WITHIN GROUP (ORDER BY U.FFIRSTNAME) 
FROM LDB1_MAINT_WORKGROUPUSER MU INNER JOIN LDB1_USERINFO U ON MU.FSITEID=S.FSITEID AND U.FUSERID=MU.FUSERID WHERE MU.FWORKGROUPID=S.FWORKGROUPID AND MU.FUSERTYPE='R') AS FREPORTEDTO

,(SELECT ROUND(SUM(MT.FESTIMATEDTIME)/60,2) FROM LDB1_MAINT_TASKGROUP TG INNER JOIN LDB1_MAINT_TASKS MT ON MT.FREFERENCEID=TG.FTASKGROUPID WHERE TG.FIDENTIFIER=S.FTASKGROUPIDENTIFIER AND TG.FSITEID=S.FSITEID AND TG.FSTATUS='A') AS FESTIMATEDTIME
,(SELECT MIN(TO_NUMBER(TO_CHAR(FSCHEDULEDATE || '' || LPAD(FSCHEDULETIME,6,'0')))) FROM LDB1_MAINT_WORKORDER W WHERE W.FREF_SCHEDULEID=S.FSCHEDULEID AND W.FSITEID=S.FSITEID AND W.FWORKORDERSTATUS='SCHEDULED') AS FNEXTDUEDATE
--,(SELECT MAX(TO_NUMBER(TO_CHAR(FSCHEDULEDATE || '' || LPAD(FSCHEDULETIME,6,'0')))) FROM LDB1_MAINT_WORKORDER W WHERE W.FREF_SCHEDULEID=S.FSCHEDULEID AND W.FSITEID=S.FSITEID AND W.FSTATUS='S') AS FLASTDUEDATE
,(SELECT MAX(FSCHEDULEDATE) FROM LDB1_MAINT_WORKORDER W WHERE W.FREF_SCHEDULEID=S.FSCHEDULEID AND W.FSITEID=S.FSITEID AND W.FWORKORDERSTATUS='SCHEDULED') AS FLASTDUEDATE
,SD.FSCHEDULE_DTL_ID,S.FSCHEDULESTATUS AS FSCHEDULESTATUSVALUE
FROM LDB1_MAINT_SCHEDULE S
INNER JOIN LDB1_MAINT_MASTER M1 ON M1.FMASTERID=S.FMAINTYPEID AND M1.FSITEID=S.FSITEID AND M1.FTYPE='MAINT_TYPE'
INNER JOIN LDB1_MAINT_MASTER M3 ON M3.FMASTERID=S.FWORKGROUPID AND M3.FSITEID=S.FSITEID AND M3.FTYPE='WORKGROUP'
LEFT OUTER JOIN LDB1_MAINT_LOCATIONS ML ON ML.FSITEID=S.FSITEID AND ML.FLOCATIONID=S.FLOCATIONID
LEFT OUTER JOIN LDB1_MAINT_EQUIPMENT ME ON ME.FSITEID=S.FSITEID AND ME.FEQUIPMENTID=S.FEQUIPMENTID
LEFT OUTER JOIN LDB1_MAINT_SCHEDULE_DTL SD ON SD.FSCHEDULEID=S.FSCHEDULEID AND SD.FITEM_ID=1 AND SD.FSTATUS='A'
LEFT OUTER JOIN LDB1_MAINT_AUTH_GROUP MA ON MA.FREFERENCEID=DECODE(NVL(S.FLOCATIONID,0),0,S.FEQUIPMENTID,S.FLOCATIONID) AND MA.FTYPE=DECODE(NVL(S.FLOCATIONID,0),0,'EQUIPMENT','LOCATION') AND MA.FSITEID=S.FSITEID AND MA.FSTATUS='A'
LEFT OUTER JOIN LDB1_MAINT_WORKGROUPUSER WU ON WU.FWORKGROUPID=MA.FWORKGROUPID AND WU.FSITEID=S.FSITEID AND WU.FSTATUS='A'
WHERE S.FSCHEDULE_TYPE='S' AND S.FSTATUS='A'
ORDER BY S.FUPDATEDON DESC, S.FUPDATEDTIME DESC,S.FCREATEDON DESC;
--------------------------------------------------------------------------------------------------------------
CREATE OR REPLACE VIEW VW_MAINT_MANAGEWORKORDER AS
 SELECT S.FSITEID,S.FSCHEDULEID,S.FMAINTENANCENAME,DECODE(ME.FEQUIPMENTNAME,NULL,ML.FLOCATIONNAME,ME.FEQUIPMENTNAME) AS FEQUIPORLOCATION
,M1.FNAME AS FMAINTTYPE,S.FPRIORITYTYPE AS FPRIORITY,M3.FNAME AS FWORKGROUP
,DECODE(NVL(MW.FERP_WORKORDER,'N'),'N',LTRIM(MW.FWORK_ORDERID,'0'),MW.FERP_WORKORDER) AS ERPWORKORDER
,(SELECT LISTAGG(TO_CHAR(TRIM(U.FLASTNAME || ' ' || U.FFIRSTNAME)),', ') WITHIN GROUP (ORDER BY U.FFIRSTNAME) FROM LDB1_MAINT_WORKGROUPUSER MU INNER JOIN LDB1_USERINFO U ON MU.FSITEID=S.FSITEID AND U.FUSERID=MU.FUSERID
WHERE MU.FWORKGROUPID=S.FWORKGROUPID AND MU.FUSERTYPE='A' AND MU.FSTATUS='A') AS FASSIGNEE
,(SELECT LISTAGG(TO_CHAR(TRIM(U.FLASTNAME || ' ' || U.FFIRSTNAME)),', ') WITHIN GROUP (ORDER BY U.FFIRSTNAME) FROM LDB1_MAINT_WORKGROUPUSER MU INNER JOIN LDB1_USERINFO U ON MU.FSITEID=S.FSITEID AND U.FUSERID=MU.FUSERID
WHERE MU.FWORKGROUPID=S.FWORKGROUPID AND MU.FUSERTYPE='R' AND MU.FSTATUS='A') AS FREPORTEDTO
,(SELECT ROUND(SUM(MT.FESTIMATEDTIME)/60,2) FROM LDB1_MAINT_TASKGROUP TG INNER JOIN LDB1_MAINT_TASKS MT ON MT.FREFERENCEID=TG.FTASKGROUPID WHERE TG.FIDENTIFIER=S.FTASKGROUPIDENTIFIER AND TG.FSITEID=S.FSITEID AND TG.FSTATUS='A') AS FESTIMATEDTIME
,MW.FWORKORDERSTATUS AS FSTATUS,MW.FWORKORDERSTATUS AS FSTATUSKEY,LTRIM(MW.FWORK_ORDERID,'0') AS FWORK_ORDERID,MW.FSCHEDULEDATE,MW.FSCHEDULETIME,MW.FPLANNEDDATE,MW.FPLANNEDTIME,S.FSCHEDULE_TYPE,MW.FSCHEDULETIME AS FSCHEDULETIME_NUM
FROM LDB1_MAINT_SCHEDULE S
INNER JOIN LDB1_MAINT_MASTER M1 ON M1.FMASTERID=S.FMAINTYPEID AND M1.FSITEID=S.FSITEID AND M1.FTYPE='MAINT_TYPE'
INNER JOIN LDB1_MAINT_MASTER M3 ON M3.FMASTERID=S.FWORKGROUPID AND M3.FSITEID=S.FSITEID AND M3.FTYPE='WORKGROUP'
INNER JOIN LDB1_MAINT_WORKORDER MW ON MW.FREF_SCHEDULEID=S.FSCHEDULEID AND MW.FSITEID=S.FSITEID AND MW.FWORKORDERSTATUS<>'INACTIVE'
LEFT OUTER JOIN LDB1_MAINT_LOCATIONS ML ON ML.FSITEID=S.FSITEID AND ML.FLOCATIONID=S.FLOCATIONID
LEFT OUTER JOIN LDB1_MAINT_EQUIPMENT ME ON ME.FSITEID=S.FSITEID AND ME.FEQUIPMENTID=S.FEQUIPMENTID
WHERE  S.FSTATUS='A' AND S.FSCHEDULE_TYPE IN ('S','W')
--ORDER BY S.FUPDATEDON DESC, S.FUPDATEDTIME DESC;
ORDER BY MW.FSCHEDULEDATE,MW.FSCHEDULETIME,MW.FPLANNEDDATE ,MW.FPLANNEDTIME;
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
CREATE OR REPLACE VIEW VW_MAINT_PLNTUSR_MANAGEWORKODR  AS
SELECT DISTINCT S.FSITEID,S.FSCHEDULEID,S.FMAINTENANCENAME,DECODE(ME.FEQUIPMENTNAME,NULL,ML.FLOCATIONNAME,ME.FEQUIPMENTNAME) AS FEQUIPORLOCATION
,M1.FNAME AS FMAINTTYPE,S.FPRIORITYTYPE AS FPRIORITY,M3.FNAME AS FWORKGROUP,S.FTIMESTAMP,MA.FREFERENCEID,WU.FUSERID
,DECODE(NVL(MW.FERP_WORKORDER,'N'),'N',LTRIM(MW.FWORK_ORDERID,'0'),MW.FERP_WORKORDER) AS ERPWORKORDER
,(SELECT LISTAGG(TO_CHAR(TRIM(U.FLASTNAME || ' ' || U.FFIRSTNAME)),', ') WITHIN GROUP (ORDER BY U.FFIRSTNAME) FROM LDB1_MAINT_WORKGROUPUSER MU INNER JOIN LDB1_USERINFO U ON MU.FSITEID=S.FSITEID AND U.FUSERID=MU.FUSERID
WHERE MU.FWORKGROUPID=S.FWORKGROUPID AND MU.FUSERTYPE='A') AS FASSIGNEE
,(SELECT LISTAGG(TO_CHAR(TRIM(U.FLASTNAME || ' ' || U.FFIRSTNAME)),', ') WITHIN GROUP (ORDER BY U.FFIRSTNAME) FROM LDB1_MAINT_WORKGROUPUSER MU INNER JOIN LDB1_USERINFO U ON MU.FSITEID=S.FSITEID AND U.FUSERID=MU.FUSERID
WHERE MU.FWORKGROUPID=S.FWORKGROUPID AND MU.FUSERTYPE='R') AS FREPORTEDTO
,(SELECT ROUND(SUM(MT.FESTIMATEDTIME)/60,2) FROM LDB1_MAINT_TASKGROUP TG INNER JOIN LDB1_MAINT_TASKS MT ON MT.FREFERENCEID=TG.FTASKGROUPID WHERE TG.FIDENTIFIER=S.FTASKGROUPIDENTIFIER AND TG.FSITEID=S.FSITEID AND TG.FSTATUS='A') AS FESTIMATEDTIME
,MW.FWORKORDERSTATUS AS FSTATUS,MW.FWORKORDERSTATUS AS FSTATUSKEY,LTRIM(MW.FWORK_ORDERID,'0') AS FWORK_ORDERID,MW.FSCHEDULEDATE,MW.FSCHEDULETIME,MW.FPLANNEDDATE,MW.FPLANNEDTIME,S.FSCHEDULE_TYPE,MW.FSCHEDULETIME AS FSCHEDULETIME_NUM
FROM LDB1_MAINT_SCHEDULE S
INNER JOIN LDB1_MAINT_MASTER M1 ON M1.FMASTERID=S.FMAINTYPEID AND M1.FSITEID=S.FSITEID AND M1.FTYPE='MAINT_TYPE'
INNER JOIN LDB1_MAINT_MASTER M3 ON M3.FMASTERID=S.FWORKGROUPID AND M3.FSITEID=S.FSITEID AND M3.FTYPE='WORKGROUP'
INNER JOIN LDB1_MAINT_WORKORDER MW ON MW.FREF_SCHEDULEID=S.FSCHEDULEID AND MW.FSITEID=S.FSITEID AND MW.FWORKORDERSTATUS<>'INACTIVE'
LEFT OUTER JOIN LDB1_MAINT_LOCATIONS ML ON ML.FSITEID=S.FSITEID AND ML.FLOCATIONID=S.FLOCATIONID
LEFT OUTER JOIN LDB1_MAINT_EQUIPMENT ME ON ME.FSITEID=S.FSITEID AND ME.FEQUIPMENTID=S.FEQUIPMENTID
LEFT OUTER JOIN LDB1_MAINT_AUTH_GROUP MA ON MA.FREFERENCEID=DECODE(NVL(S.FLOCATIONID,0),0,S.FEQUIPMENTID,S.FLOCATIONID) AND MA.FTYPE=DECODE(NVL(S.FLOCATIONID,0),0,'EQUIPMENT','LOCATION') AND MA.FSITEID=S.FSITEID AND MA.FSTATUS='A'
LEFT OUTER JOIN LDB1_MAINT_WORKGROUPUSER WU ON WU.FWORKGROUPID=MA.FWORKGROUPID AND WU.FSITEID=S.FSITEID AND WU.FSTATUS='A'
WHERE  S.FSTATUS='A' AND S.FSCHEDULE_TYPE IN ('S','W')
--ORDER BY FTIMESTAMP DESC;
ORDER BY MW.FSCHEDULEDATE,MW.FSCHEDULETIME,MW.FPLANNEDDATE ,MW.FPLANNEDTIME;
-----------------------------------------------------------------------------------------------------

CREATE OR REPLACE VIEW VW_MAINT_MANAGECHECKLIST (FSCHEDULEID,FSITEID,FMAINTENANCENAME,FWORKGROUP,FSCHEDULESTATUS,FSCHD_RULE_DESC_TYPE,FSCHD_RULE_DESC,FMEASPOINTS,FASSIGNEE,FREPORTEDTO,FNEXTDUEDATE,FLASTDUEDATE,FSCHEDULE_DTL_ID,FSCHEDULESTATUSVALUE) AS 
SELECT MS.FSCHEDULEID,MS.FSITEID,MS.FMAINTENANCENAME, MM.FNAME AS FWORKGROUP,MS.FSCHEDULESTATUS,MS.FSCHD_RULE_DESC_TYPE,MS.FSCHD_RULE_DESC,
(SELECT LISTAGG(TO_CHAR(MP.FMEASURINGPOINTNAME),', ') WITHIN GROUP (ORDER BY MD.FITEMID) FROM LDB1_MAINT_MEASURINGPOINT MP INNER JOIN LDB1_MAINT_MEAS_DOCS MD ON 
MD.FSITEID=MP.FSITEID AND MD.FSCHEDULEID=MS.FSCHEDULEID AND MD.FMEASURINGPOINTID=MP.FMEASURINGPOINTID) AS FMEASPOINTS
,(SELECT LISTAGG(TO_CHAR(TRIM(U.FLASTNAME || ' ' || U.FFIRSTNAME)),', ') WITHIN GROUP (ORDER BY U.FFIRSTNAME) FROM LDB1_MAINT_WORKGROUPUSER MU INNER JOIN LDB1_USERINFO U ON U.FUSERID=MU.FUSERID
WHERE MU.FWORKGROUPID=MS.FWORKGROUPID AND MU.FSITEID=MS.FSITEID AND MU.FUSERTYPE='A' AND MU.FSTATUS='A') AS FASSIGNEE
,(SELECT LISTAGG(TO_CHAR(TRIM(U.FLASTNAME || ' ' || U.FFIRSTNAME)),', ') WITHIN GROUP (ORDER BY U.FFIRSTNAME) FROM LDB1_MAINT_WORKGROUPUSER MU INNER JOIN LDB1_USERINFO U ON U.FUSERID=MU.FUSERID
WHERE MU.FWORKGROUPID=MS.FWORKGROUPID AND MU.FSITEID=MS.FSITEID AND MU.FUSERTYPE='R' AND MU.FSTATUS='A') AS FREPORTEDTO
,(SELECT MIN(TO_NUMBER(TO_CHAR(FSCHEDULEDATE || '' || LPAD(FSCHEDULETIME,6,'0')))) FROM LDB1_MAINT_WORKORDER W WHERE W.FREF_SCHEDULEID=MS.FSCHEDULEID AND W.FSITEID=MS.FSITEID AND W.FWORKORDERSTATUS='SCHEDULED') AS FNEXTDUEDATE
,(SELECT MAX(TO_NUMBER(TO_CHAR(FSCHEDULEDATE || '' || LPAD(FSCHEDULETIME,6,'0')))) FROM LDB1_MAINT_WORKORDER W WHERE W.FREF_SCHEDULEID=MS.FSCHEDULEID AND W.FSITEID=MS.FSITEID AND W.FWORKORDERSTATUS='SCHEDULED') AS FLASTDUEDATE
,SD.FSCHEDULE_DTL_ID,MS.FSCHEDULESTATUS AS FSCHEDULESTATUSVALUE
FROM LDB1_MAINT_SCHEDULE MS
INNER JOIN LDB1_MAINT_MASTER MM ON MM.FMASTERID=MS.FWORKGROUPID
LEFT OUTER JOIN LDB1_MAINT_SCHEDULE_DTL SD ON SD.FSCHEDULEID=MS.FSCHEDULEID AND SD.FITEM_ID=1 AND SD.FSTATUS='A'
WHERE MS.FSCHEDULE_TYPE='I' AND MS.FSTATUS='A'
ORDER BY MS.FUPDATEDON DESC,MS.FUPDATEDTIME DESC;
------------------------------------------------------------------------------------------------------------------------------
CREATE OR REPLACE VIEW VW_MAINT_PLNTUSR_MANAGECHECKLT AS 
  SELECT DISTINCT MS.FSCHEDULEID,MS.FSITEID,MS.FMAINTENANCENAME, MM.FNAME AS FWORKGROUP,MS.FSCHEDULESTATUS,MS.FSCHD_RULE_DESC_TYPE,MS.FSCHD_RULE_DESC
,WU.FUSERID,MS.FUPDATEDON ,MS.FUPDATEDTIME
,(SELECT LISTAGG(TO_CHAR(MP.FMEASURINGPOINTNAME),', ') WITHIN GROUP (ORDER BY MD.FITEMID) FROM LDB1_MAINT_MEASURINGPOINT MP INNER JOIN LDB1_MAINT_MEAS_DOCS MD ON 
MD.FSITEID=MP.FSITEID AND MD.FSCHEDULEID=MS.FSCHEDULEID AND MD.FMEASURINGPOINTID=MP.FMEASURINGPOINTID) AS FMEASPOINTS
,(SELECT LISTAGG(TO_CHAR(TRIM(U.FLASTNAME || ' ' || U.FFIRSTNAME)),', ') WITHIN GROUP (ORDER BY U.FFIRSTNAME) FROM LDB1_MAINT_WORKGROUPUSER MU INNER JOIN LDB1_USERINFO U ON U.FUSERID=MU.FUSERID
WHERE MU.FWORKGROUPID=MS.FWORKGROUPID AND MU.FSITEID=MS.FSITEID AND MU.FUSERTYPE='A' AND MU.FSTATUS='A') AS FASSIGNEE
,(SELECT LISTAGG(TO_CHAR(TRIM(U.FLASTNAME || ' ' || U.FFIRSTNAME)),', ') WITHIN GROUP (ORDER BY U.FFIRSTNAME) FROM LDB1_MAINT_WORKGROUPUSER MU INNER JOIN LDB1_USERINFO U ON U.FUSERID=MU.FUSERID
WHERE MU.FWORKGROUPID=MS.FWORKGROUPID AND MU.FSITEID=MS.FSITEID AND MU.FUSERTYPE='R' AND MU.FSTATUS='A') AS FREPORTEDTO
,(SELECT MIN(TO_NUMBER(TO_CHAR(FSCHEDULEDATE || '' || LPAD(FSCHEDULETIME,6,'0')))) FROM LDB1_MAINT_WORKORDER W WHERE W.FREF_SCHEDULEID=MS.FSCHEDULEID AND W.FSITEID=MS.FSITEID AND W.FWORKORDERSTATUS='SCHEDULED') AS FNEXTDUEDATE
,(SELECT MAX(TO_NUMBER(TO_CHAR(FSCHEDULEDATE || '' || LPAD(FSCHEDULETIME,6,'0')))) FROM LDB1_MAINT_WORKORDER W WHERE W.FREF_SCHEDULEID=MS.FSCHEDULEID AND W.FSITEID=MS.FSITEID AND W.FWORKORDERSTATUS='SCHEDULED') AS FLASTDUEDATE
,SD.FSCHEDULE_DTL_ID,MS.FSCHEDULESTATUS AS FSCHEDULESTATUSVALUE
FROM LDB1_MAINT_SCHEDULE MS
INNER JOIN LDB1_MAINT_MASTER MM ON MM.FMASTERID=MS.FWORKGROUPID
INNER JOIN LDB1_MAINT_MEAS_DOCS DC ON DC.FSITEID=MS.FSITEID AND DC.FSCHEDULEID=MS.FSCHEDULEID
INNER JOIN LDB1_MAINT_MEASURINGPOINT PT ON PT.FSITEID=MS.FSITEID AND PT.FMEASURINGPOINTID=DC.FMEASURINGPOINTID AND PT.FPARENTTYPE IN ('E','L')
LEFT OUTER JOIN LDB1_MAINT_SCHEDULE_DTL SD ON SD.FSCHEDULEID=MS.FSCHEDULEID AND SD.FITEM_ID=1 AND SD.FSTATUS='A'
LEFT OUTER JOIN LDB1_MAINT_WORKGROUPUSER WU ON WU.FWORKGROUPID=MS.FWORKGROUPID AND WU.FSITEID=MS.FSITEID AND WU.FSTATUS='A'
where MS.FSCHEDULE_TYPE='I' and MS.FSTATUS='A'
ORDER BY MS.FUPDATEDON||MS.FUPDATEDTIME DESC;

-------------------------------------------------------------------------------------------------------------------
 CREATE OR REPLACE VIEW VW_MAINT_WORKORDER_DAYVIEW AS 
  SELECT WO.FWORK_ORDERID,WO.FSCHEDULEDATE,WO.FSITEID,DECODE(NVL(WO.FERP_WORKORDER,'N'),'N',LTRIM(WO.FWORK_ORDERID,'0'),WO.FERP_WORKORDER) AS WORKORDER,WO.FWORKORDERSTATUS AS FSTATUS
,MS.FMAINTENANCENAME,MS.FPRIORITYTYPE,DECODE(NVL(ME.FEQUIPMENTNAME,'N'),'N',ML.FLOCATIONNAME,ME.FEQUIPMENTNAME) AS FEQUIPMENTNAME,MM.FNAME AS FMAINTANANCETYPE,WO.FPLANNEDDATE,WO.FWORKORDERSTATUS AS FSTATUSKEY
,MS.FWORKGROUPID,MW.FNAME AS FWORKGROUPNAME,WO.FPLANNEDDATE AS FDUEDATE

,(SELECT LISTAGG((INITCAP(TO_CHAR(U.FFIRSTNAME))||' '||INITCAP(TO_CHAR(U.FLASTNAME))),',') WITHIN GROUP (ORDER BY U.FFIRSTNAME)
FROM LDB1_MAINT_WORKGROUPUSER WU
INNER JOIN LDB1_USERINFO U ON U.FUSERID=WU.FUSERID
WHERE WU.FWORKGROUPID=MS.FWORKGROUPID AND WU.FSITEID=MS.FSITEID AND WU.FUSERTYPE='A' AND WU.FSTATUS='A') AS FASSIGNEDTO

,(SELECT LISTAGG((INITCAP(TO_CHAR(U.FFIRSTNAME))||' '||INITCAP(TO_CHAR(U.FLASTNAME))),',') WITHIN GROUP (ORDER BY U.FFIRSTNAME)
FROM LDB1_MAINT_WORKGROUPUSER WU
INNER JOIN LDB1_USERINFO U ON U.FUSERID=WU.FUSERID
WHERE WU.FWORKGROUPID=MS.FWORKGROUPID AND WU.FSITEID=MS.FSITEID AND WU.FUSERTYPE='R' AND WU.FSTATUS='A') AS FREPORTEDTO

,(SELECT ROUND(SUM(MT.FESTIMATEDTIME/60),2) FROM LDB1_MAINT_TASKS MT 
LEFT OUTER JOIN LDB1_MAINT_TASKGROUP TG ON TG.FIDENTIFIER=MS.FTASKGROUPIDENTIFIER AND TG.FSTATUS='A' AND TG.FSITEID=MS.FSITEID 
WHERE MT.FREFERENCEID=DECODE(NVL(WO.FTASKGROUPID,0),0,TG.FTASKGROUPID,WO.FTASKGROUPID) AND MT.FSITEID=MS.FSITEID) AS FESTIMATEDTIME 

,(SELECT NVL(SUM(NVL(ROUND((TO_DATE(FENDDATE||' '||LPAD(FENDTIME,6,'0'),'YYYYMMDD hh24miSS') 
- TO_DATE(FSTARTDATE||' '||LPAD(FSTARTTIME,6,'0'),'YYYYMMDD hh24miSS'))*24*60,2),0)),0)
FROM LDB1_MAINT_WORKORDER_TASK WT WHERE WT.FWORK_ORDERID=WO.FWORK_ORDERID AND WT.FSITEID=MS.FSITEID AND WT.FENDDATE>0) AS FACTUALTIME

FROM LDB1_MAINT_WORKORDER WO
INNER JOIN LDB1_MAINT_SCHEDULE MS ON MS.FSCHEDULEID=WO.FREF_SCHEDULEID AND MS.FSITEID=WO.FSITEID
INNER JOIN LDB1_MAINT_MASTER MM ON MM.FMASTERID=MS.FMAINTYPEID AND MM.FSITEID=MS.FSITEID
INNER JOIN LDB1_MAINT_MASTER MW ON MW.FMASTERID=MS.FWORKGROUPID AND MW.FSITEID=MS.FSITEID
LEFT OUTER JOIN LDB1_MAINT_EQUIPMENT ME ON ME.FEQUIPMENTID=MS.FEQUIPMENTID AND ME.FSITEID=MS.FSITEID
LEFT OUTER JOIN LDB1_MAINT_LOCATIONS ML ON ML.FLOCATIONID=MS.FLOCATIONID AND ML.FSITEID=MS.FSITEID
WHERE WO.FWORKORDERSTATUS<>'INACTIVE'
ORDER BY CASE FWORKORDERSTATUS WHEN 'COMPLETED' THEN 2 ELSE 1 END;
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
CREATE OR REPLACE VIEW VW_MAINT_PLNTUSR_WORKODR_DAYVW AS 
SELECT DISTINCT WO.FWORK_ORDERID,WO.FSCHEDULEDATE,WO.FSITEID,DECODE(NVL(WO.FERP_WORKORDER,'N'),'N',LTRIM(WO.FWORK_ORDERID,'0'),WO.FERP_WORKORDER) AS WORKORDER,WO.FWORKORDERSTATUS AS FSTATUS
,MS.FMAINTENANCENAME,MS.FPRIORITYTYPE,DECODE(NVL(ME.FEQUIPMENTNAME,'N'),'N',ML.FLOCATIONNAME,ME.FEQUIPMENTNAME) AS FEQUIPMENTNAME,MM.FNAME AS FMAINTANANCETYPE,WO.FPLANNEDDATE,WO.FWORKORDERSTATUS AS FSTATUSKEY
,MS.FWORKGROUPID,MW.FNAME AS FWORKGROUPNAME,MA.FREFERENCEID,WU.FUSERID,WO.FPLANNEDDATE AS FDUEDATE

,(SELECT LISTAGG((INITCAP(TO_CHAR(U.FFIRSTNAME))||' '||INITCAP(TO_CHAR(U.FLASTNAME))),',') WITHIN GROUP (ORDER BY U.FFIRSTNAME)
FROM LDB1_MAINT_WORKGROUPUSER WU
INNER JOIN LDB1_USERINFO U ON U.FUSERID=WU.FUSERID
WHERE WU.FWORKGROUPID=MS.FWORKGROUPID AND WU.FSITEID=MS.FSITEID AND FUSERTYPE='A') AS FASSIGNEDTO

,(SELECT LISTAGG((INITCAP(TO_CHAR(U.FFIRSTNAME))||' '||INITCAP(TO_CHAR(U.FLASTNAME))),',') WITHIN GROUP (ORDER BY U.FFIRSTNAME)
FROM LDB1_MAINT_WORKGROUPUSER WU
INNER JOIN LDB1_USERINFO U ON U.FUSERID=WU.FUSERID
WHERE WU.FWORKGROUPID=MS.FWORKGROUPID AND WU.FSITEID=MS.FSITEID AND FUSERTYPE='R') AS FREPORTEDTO

,(SELECT ROUND(SUM(MT.FESTIMATEDTIME/60),2) FROM LDB1_MAINT_TASKS MT 
LEFT OUTER JOIN LDB1_MAINT_TASKGROUP TG ON TG.FIDENTIFIER=MS.FTASKGROUPIDENTIFIER AND TG.FSTATUS='A' AND TG.FSITEID=MS.FSITEID 
WHERE MT.FREFERENCEID=DECODE(NVL(WO.FTASKGROUPID,0),0,TG.FTASKGROUPID,WO.FTASKGROUPID) AND MT.FSITEID=MS.FSITEID) AS FESTIMATEDTIME 

,(SELECT NVL(SUM(NVL(ROUND((TO_DATE(FENDDATE||' '||LPAD(FENDTIME,6,'0'),'YYYYMMDD hh24miSS') 
- TO_DATE(FSTARTDATE||' '||LPAD(FSTARTTIME,6,'0'),'YYYYMMDD hh24miSS'))*24*60,2),0)),0)
FROM LDB1_MAINT_WORKORDER_TASK WT WHERE WT.FWORK_ORDERID=WO.FWORK_ORDERID AND WT.FSITEID=MS.FSITEID AND WT.FENDDATE>0) AS FACTUALTIME

FROM LDB1_MAINT_WORKORDER WO
INNER JOIN LDB1_MAINT_SCHEDULE MS ON MS.FSCHEDULEID=WO.FREF_SCHEDULEID AND MS.FSITEID=WO.FSITEID
INNER JOIN LDB1_MAINT_MASTER MM ON MM.FMASTERID=MS.FMAINTYPEID AND MM.FSITEID=MS.FSITEID
INNER JOIN LDB1_MAINT_MASTER MW ON MW.FMASTERID=MS.FWORKGROUPID AND MW.FSITEID=MS.FSITEID
LEFT OUTER JOIN LDB1_MAINT_EQUIPMENT ME ON ME.FEQUIPMENTID=MS.FEQUIPMENTID AND ME.FSITEID=MS.FSITEID
LEFT OUTER JOIN LDB1_MAINT_LOCATIONS ML ON ML.FLOCATIONID=MS.FLOCATIONID AND ML.FSITEID=MS.FSITEID
LEFT OUTER JOIN LDB1_MAINT_AUTH_GROUP MA ON MA.FREFERENCEID=DECODE(NVL(MS.FLOCATIONID,0),0,MS.FEQUIPMENTID,MS.FLOCATIONID) AND MA.FTYPE=DECODE(NVL(MS.FLOCATIONID,0),0,'EQUIPMENT','LOCATION') AND MA.FSITEID=MS.FSITEID AND MA.FSTATUS='A'
LEFT OUTER JOIN LDB1_MAINT_WORKGROUPUSER WU ON WU.FWORKGROUPID=MA.FWORKGROUPID AND WU.FSITEID=MS.FSITEID AND WU.FSTATUS='A'
WHERE WO.FWORKORDERSTATUS<>'INACTIVE'
ORDER BY CASE FSTATUS WHEN 'COMPLETED' THEN 2 ELSE 1 END;

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
CREATE OR REPLACE VIEW VW_MAINT_WORKORDER_ORDERVIEW AS 
 SELECT WO.FWORK_ORDERID,WO.FSITEID,DECODE(NVL(WO.FERP_WORKORDER,'N'),'N',LTRIM(WO.FWORK_ORDERID,'0'),WO.FERP_WORKORDER) AS WORKORDER,WO.FWORKORDERSTATUS AS FSTATUS,WO.FSCHEDULEDATE,WO.FSCHEDULEDATE AS FSCHEDULEDATEKEY
,WO.FENDDATE,MS.FMAINTENANCENAME,MS.FPRIORITYTYPE,DECODE(NVL(ME.FEQUIPMENTNAME,'N'),'N',ML.FLOCATIONNAME,ME.FEQUIPMENTNAME) AS FEQUIPMENTNAME,MM.FNAME AS FMAINTANANCETYPE,WO.FPLANNEDDATE,WO.FPLANNEDDATE AS FPLANNEDDATEKEY,MW.FNAME AS FWORKGROUPNAME
,WO.FWORKORDERSTATUS AS FSTATUSKEY,WO.FSCHEDULEDATE AS FORDERSCHEDULEDATE,WO.FPLANNEDDATE AS FORDERDUEDATE

,(SELECT LISTAGG((INITCAP(TO_CHAR(U.FLASTNAME))||' '||INITCAP(TO_CHAR(U.FFIRSTNAME))),',') WITHIN GROUP (ORDER BY U.FLASTNAME)
FROM LDB1_MAINT_WORKGROUPUSER WU
INNER JOIN LDB1_USERINFO U ON U.FUSERID=WU.FUSERID
WHERE WU.FWORKGROUPID=MS.FWORKGROUPID AND WU.FSITEID=MS.FSITEID AND WU.FUSERTYPE='A' AND WU.FSTATUS='A') AS FASSIGNEDTO

,(SELECT LISTAGG((INITCAP(TO_CHAR(U.FLASTNAME))||' '||INITCAP(TO_CHAR(U.FFIRSTNAME))),',') WITHIN GROUP (ORDER BY U.FLASTNAME)
FROM LDB1_MAINT_WORKGROUPUSER WU
INNER JOIN LDB1_USERINFO U ON U.FUSERID=WU.FUSERID
WHERE WU.FWORKGROUPID=MS.FWORKGROUPID AND WU.FSITEID=MS.FSITEID AND WU.FUSERTYPE='R' AND WU.FSTATUS='A') AS FREPORTEDTO

,(SELECT ROUND(SUM(MT.FESTIMATEDTIME/60),2) FROM LDB1_MAINT_TASKS MT 
LEFT OUTER JOIN LDB1_MAINT_TASKGROUP TG ON TG.FIDENTIFIER=MS.FTASKGROUPIDENTIFIER AND TG.FSTATUS='A' AND TG.FSITEID=MS.FSITEID 
WHERE MT.FREFERENCEID=DECODE(NVL(WO.FTASKGROUPID,0),0,TG.FTASKGROUPID,WO.FTASKGROUPID) AND MT.FSITEID=MS.FSITEID) AS FESTIMATEDTIME

,(SELECT NVL(SUM(NVL(ROUND((TO_DATE(FENDDATE||' '||LPAD(FENDTIME,6,'0'),'YYYYMMDD hh24miSS') 
- TO_DATE(FSTARTDATE||' '||LPAD(FSTARTTIME,6,'0'),'YYYYMMDD hh24miSS'))*24*60,2),0)),0)
FROM LDB1_MAINT_WORKORDER_TASK WT WHERE WT.FWORK_ORDERID=WO.FWORK_ORDERID AND WT.FSITEID=MS.FSITEID AND WT.FENDDATE>0) AS FACTUALTIME

FROM LDB1_MAINT_WORKORDER WO
INNER JOIN LDB1_MAINT_SCHEDULE MS ON MS.FSCHEDULEID=WO.FREF_SCHEDULEID AND MS.FSITEID=WO.FSITEID
INNER JOIN LDB1_MAINT_MASTER MM ON MM.FMASTERID=MS.FMAINTYPEID AND MM.FSITEID=MS.FSITEID
INNER JOIN LDB1_MAINT_MASTER MW ON MW.FMASTERID=MS.FWORKGROUPID AND MW.FSITEID=MS.FSITEID
LEFT OUTER JOIN LDB1_MAINT_EQUIPMENT ME ON ME.FEQUIPMENTID=MS.FEQUIPMENTID AND ME.FSITEID=MS.FSITEID
LEFT OUTER JOIN LDB1_MAINT_LOCATIONS ML ON ML.FLOCATIONID=MS.FLOCATIONID AND ML.FSITEID=MS.FSITEID
WHERE WO.FWORKORDERSTATUS<>'INACTIVE'
ORDER BY WO.FSCHEDULEDATE ASC;
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  CREATE OR REPLACE VIEW VW_MAINT_PLNTUSR_WORKODR_ODRVW AS 
 SELECT DISTINCT WO.FWORK_ORDERID,WO.FSITEID,DECODE(NVL(WO.FERP_WORKORDER,'N'),'N',LTRIM(WO.FWORK_ORDERID,'0'),WO.FERP_WORKORDER) AS WORKORDER,WO.FWORKORDERSTATUS AS FSTATUS,WO.FSCHEDULEDATE,WO.FSCHEDULEDATE AS FSCHEDULEDATEKEY
,wo.fenddate,ms.fmaintenancename,ms.fprioritytype,decode(nvl(me.fequipmentname,'N'),'N',ml.flocationname,me.fequipmentname) as fequipmentname,mm.fname as fmaintanancetype,wo.fplanneddate,wo.fplanneddate as fplanneddatekey,mw.fname as fworkgroupname
,WO.FWORKORDERSTATUS AS FSTATUSKEY,MA.FREFERENCEID,WU.FUSERID,WO.FSCHEDULEDATE AS FORDERSCHEDULEDATE,WO.FPLANNEDDATE AS FORDERDUEDATE

,(SELECT LISTAGG((INITCAP(TO_CHAR(U.FLASTNAME))||' '||INITCAP(TO_CHAR(U.FFIRSTNAME))),',') WITHIN GROUP (ORDER BY U.FLASTNAME)
FROM LDB1_MAINT_WORKGROUPUSER WU
INNER JOIN LDB1_USERINFO U ON U.FUSERID=WU.FUSERID
WHERE WU.FWORKGROUPID=MS.FWORKGROUPID AND WU.FSITEID=MS.FSITEID AND FUSERTYPE='A') AS FASSIGNEDTO

,(SELECT LISTAGG((INITCAP(TO_CHAR(U.FLASTNAME))||' '||INITCAP(TO_CHAR(U.FFIRSTNAME))),',') WITHIN GROUP (ORDER BY U.FLASTNAME)
FROM LDB1_MAINT_WORKGROUPUSER WU
INNER JOIN LDB1_USERINFO U ON U.FUSERID=WU.FUSERID
WHERE WU.FWORKGROUPID=MS.FWORKGROUPID AND WU.FSITEID=MS.FSITEID AND FUSERTYPE='R') AS FREPORTEDTO

,(SELECT ROUND(SUM(MT.FESTIMATEDTIME/60),2) FROM LDB1_MAINT_TASKS MT 
LEFT OUTER JOIN LDB1_MAINT_TASKGROUP TG ON TG.FIDENTIFIER=MS.FTASKGROUPIDENTIFIER AND TG.FSTATUS='A' AND TG.FSITEID=MS.FSITEID 
WHERE MT.FREFERENCEID=DECODE(NVL(WO.FTASKGROUPID,0),0,TG.FTASKGROUPID,WO.FTASKGROUPID) AND MT.FSITEID=MS.FSITEID) AS FESTIMATEDTIME

,(SELECT NVL(SUM(NVL(ROUND((TO_DATE(FENDDATE||' '||LPAD(FENDTIME,6,'0'),'YYYYMMDD hh24miSS') 
- TO_DATE(FSTARTDATE||' '||LPAD(FSTARTTIME,6,'0'),'YYYYMMDD hh24miSS'))*24*60,2),0)),0)
FROM LDB1_MAINT_WORKORDER_TASK WT WHERE WT.FWORK_ORDERID=WO.FWORK_ORDERID AND WT.FSITEID=MS.FSITEID AND WT.FENDDATE>0) AS FACTUALTIME

FROM LDB1_MAINT_WORKORDER WO
INNER JOIN LDB1_MAINT_SCHEDULE MS ON MS.FSCHEDULEID=WO.FREF_SCHEDULEID AND MS.FSITEID=WO.FSITEID
INNER JOIN LDB1_MAINT_MASTER MM ON MM.FMASTERID=MS.FMAINTYPEID AND MM.FSITEID=MS.FSITEID
INNER JOIN LDB1_MAINT_MASTER MW ON MW.FMASTERID=MS.FWORKGROUPID AND MW.FSITEID=MS.FSITEID
LEFT OUTER JOIN LDB1_MAINT_EQUIPMENT ME ON ME.FEQUIPMENTID=MS.FEQUIPMENTID AND ME.FSITEID=MS.FSITEID
LEFT OUTER JOIN LDB1_MAINT_LOCATIONS ML ON ML.FLOCATIONID=MS.FLOCATIONID AND ML.FSITEID=MS.FSITEID
left outer join ldb1_maint_auth_group ma on ma.freferenceid=decode(nvl(ms.flocationid,0),0,ms.fequipmentid,ms.flocationid) and ma.ftype=decode(nvl(ms.flocationid,0),0,'EQUIPMENT','LOCATION') and ma.fsiteid=ms.fsiteid and ma.fstatus='A'
LEFT OUTER JOIN LDB1_MAINT_WORKGROUPUSER WU ON WU.FWORKGROUPID=MA.FWORKGROUPID AND WU.FSITEID=MS.FSITEID AND WU.FSTATUS='A'
WHERE WO.FWORKORDERSTATUS<>'INACTIVE'
ORDER BY WO.FSCHEDULEDATE ASC;
-------------------------------------------------------------------------------------------------
CREATE OR REPLACE VIEW VW_MAINT_NOTIFICATION AS 
  SELECT S.FSITEID,S.FSCHEDULEID,S.FMAINTENANCENAME,S.FMAINDESCRIPTION,DECODE(ME.FEQUIPMENTNAME,NULL,ML.FLOCATIONNAME,ME.FEQUIPMENTNAME) AS FEQUIPORLOCATION
,M1.FNAME AS FNOTIFY_TYPE,S.FPRIORITYTYPE AS FPRIORITY,S.FSCHEDULESTATUS,LTRIM(S.FNOTIFY_WORK_ORDERID,'0') AS FNOTIFY_WORK_ORDERID,NVL(MS.FREF_SCHEDULEID,0) AS FREF_SCHEDULEID,
S.FCREATEDON,(U.FFIRSTNAME || ' ' || U.FLASTNAME) AS FUPDATEUSERNAME, S.FSCHEDULESTATUS AS FSCHEDULESTATUSVALUE
FROM  LDB1_MAINT_SCHEDULE S
LEFT OUTER JOIN LDB1_MAINT_MASTER M1 ON M1.FMASTERID=S.FNOTIFY_TYPEID AND M1.FSITEID=S.FSITEID AND M1.FTYPE='NOTIFICATION_TYPE'
LEFT OUTER JOIN LDB1_MAINT_LOCATIONS ML ON ML.FSITEID=S.FSITEID AND ML.FLOCATIONID=S.FLOCATIONID
LEFT OUTER JOIN LDB1_MAINT_EQUIPMENT ME ON ME.FSITEID=S.FSITEID AND ME.FEQUIPMENTID=S.FEQUIPMENTID 
LEFT OUTER JOIN LDB1_MAINT_WORKORDER MS ON MS.FSITEID=S.FSITEID AND MS.FWORK_ORDERID=S.FNOTIFY_WORK_ORDERID
LEFT OUTER JOIN LDB1_USERINFO U ON U.FUSERID=S.FUPDATEDBY 
WHERE S.FSCHEDULE_TYPE='N' AND S.FSTATUS='A' AND S.FUPDATEDON > TO_NUMBER(TO_CHAR(SYSDATE - 60, 'YYYYmmDD'))
ORDER BY S.FUPDATEDON DESC, S.FUPDATEDTIME DESC,S.FCREATEDON DESC;
-------------------------------------------------------------------------------------------------------
CREATE OR REPLACE  VIEW VW_MAINT_MEASPNTREADINGS AS 
SELECT R.FSITEID,MP.FMEASURINGPOINTID,MP.FPARENTID,MP.FPARENTTYPE,MP.FMEASURINGPOINTCODE,MP.FMEASURINGPOINTNAME,M1.FNAME AS FCATEGORYNAME,
CASE MP.FREADINGTYPE  WHEN 'S' THEN (SELECT FDISPLAYNAME FROM LDB1_MAINT_SELGRP_CODE WHERE FITEMID=NVL(R.FRESULT,0))
ELSE R.FRESULT
END AS READING,R.FCREATEDDATE,U.FUSERNAME
FROM LDB1_MAINT_READING_RESULT R
INNER JOIN LDB1_MAINT_MEASURINGPOINT MP ON R.FMEASURINGPOINTID=MP.FMEASURINGPOINTID
LEFT OUTER JOIN LDB1_MAINT_MASTER M1 ON M1.FMASTERID=MP.FCATEGORYID AND M1.FSITEID=R.FSITEID AND M1.FTYPE='MP_CATEGORY'
LEFT OUTER JOIN LDB1_USERINFO U ON U.FUSERID=R.FCREATEDBY
ORDER BY R.FCREATEDDATE DESC,R.FCREATEDTIME DESC; 
--------------------------------------------------------------------------------------------
 